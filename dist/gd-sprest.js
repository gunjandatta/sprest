/*! For license information please see gd-sprest.js.LICENSE.txt */
(function(){"use strict";var __webpack_modules__={"./build/helper/executor.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Executor = Executor;\n/**\n * Executor\n * @param methodParams - An array of parameters to execute in order synchronously.\n * @param method - The method to execute for each method parameter provided.\n * @param onExecuted - An optional event executed after the method completes. If a promise is returned, the executor will wait until it\'s resolved.\n */\nfunction Executor(methodParams, method, onExecuted) {\n  var _this = this;\n  if (methodParams === void 0) {\n    methodParams = [];\n  }\n  var _resolve = null;\n  var _reject = null;\n  // Method to execute the methods\n  var _executeMethods = function executeMethods(idx) {\n    if (idx === void 0) {\n      idx = 0;\n    }\n    // Execute the method and see if a promise is returned\n    var returnVal = idx < methodParams.length ? method(methodParams[idx]) : null;\n    if (returnVal && returnVal.then) {\n      // Wait for the method to complete\n      returnVal.then(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        // See if the on executed event exists\n        if (onExecuted) {\n          // Execute the method and see if a promise is returned\n          var returnVal_1 = onExecuted.apply(_this, args);\n          if (returnVal_1 && returnVal_1.then) {\n            // Wait for the method to complete\n            returnVal_1.then(function () {\n              // Execute the next method\n              _executeMethods(idx + 1);\n            });\n          } else {\n            // Execute the next method\n            _executeMethods(idx + 1);\n          }\n        } else {\n          // Execute the next method\n          _executeMethods(idx + 1);\n        }\n      }, _reject);\n    }\n    // Else, see if additional methods need to be executed\n    else if (idx < methodParams.length) {\n      // Execute the next method\n      _executeMethods(idx + 1);\n    }\n    // Else, resolve the promise\n    else {\n      _resolve();\n    }\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Set the resolve reference\n    _resolve = resolve;\n    _reject = reject;\n    // See if params exist\n    if (methodParams.length > 0) {\n      // Execute the methods\n      _executeMethods();\n    } else {\n      // resolve the promise\n      _resolve();\n    }\n  });\n}\n\n//# sourceURL=webpack://gd-sprest/./build/helper/executor.js?')},"./build/helper/fieldSchemaXML.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.FieldSchemaXML = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar __1 = __webpack_require__(/*! .. */ "./build/index.js");\nvar spCfg_1 = __webpack_require__(/*! ./spCfg */ "./build/helper/spCfg.js");\n/**\n * Field Schema XML\n * Helper class for generating the field schema xml\n */\nvar FieldSchemaXML = function FieldSchemaXML(fieldInfo, targetWebUrl) {\n  var _resolve = null;\n  var _reject = null;\n  // Returns the schema xml for a boolean field.\n  var createBoolean = function createBoolean(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Boolean";\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.defaultValue) {\n      schemaXml += "<Default>" + fieldInfo.defaultValue + "</Default>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a calculated field.\n  var createCalculated = function createCalculated(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Calculated";\n    // Set the result type\n    switch (fieldInfo.resultType) {\n      case __1.SPTypes.FieldResultType.Boolean:\n        props["ResultType"] = "Boolean";\n        break;\n      case __1.SPTypes.FieldResultType.Currency:\n        props["ResultType"] = "Currency";\n        if (fieldInfo.lcid > 0) {\n          props["LCID"] = fieldInfo.lcid;\n        }\n        break;\n      case __1.SPTypes.FieldResultType.DateOnly:\n        props["Format"] = "DateOnly";\n        props["ResultType"] = "DateTime";\n        break;\n      case __1.SPTypes.FieldResultType.DateTime:\n        props["Format"] = "DateTime";\n        props["ResultType"] = "DateTime";\n        break;\n      case __1.SPTypes.FieldResultType.Number:\n        props["ResultType"] = "Number";\n        if (fieldInfo.decimals >= 0) {\n          props["Decimals"] = fieldInfo.decimals;\n        }\n        if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Percentage) {\n          props["Percentage"] = "TRUE";\n        }\n        break;\n      default:\n        props["ResultType"] = "Text";\n        break;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.formula) {\n      schemaXml += "<Formula>" + fieldInfo.formula + "</Formula>";\n    }\n    if (fieldInfo.fieldRefs) {\n      schemaXml += "<FieldRefs>";\n      for (var i = 0; i < fieldInfo.fieldRefs.length; i++) {\n        schemaXml += "<FieldRef Name=\\"" + fieldInfo.fieldRefs[i] + "\\" />";\n      }\n      schemaXml += "</FieldRefs>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a choice field.\n  var createChoice = function createChoice(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = fieldInfo.multi ? "MultiChoice" : "Choice";\n    // Set the fill in choice property\n    if (typeof fieldInfo.fillInChoice === "boolean") {\n      props["FillInChoice"] = fieldInfo.fillInChoice ? "TRUE" : "FALSE";\n    }\n    // Set the result type\n    switch (fieldInfo.format) {\n      case __1.SPTypes.ChoiceFormatType.Dropdown:\n        props["Format"] = "Dropdown";\n        break;\n      case __1.SPTypes.ChoiceFormatType.RadioButtons:\n        props["Format"] = "RadioButtons";\n        break;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.defaultValue) {\n      schemaXml += "<Default>" + fieldInfo.defaultValue + "</Default>";\n    }\n    if (fieldInfo.choices) {\n      schemaXml += "<CHOICES>";\n      for (var i = 0; i < fieldInfo.choices.length; i++) {\n        schemaXml += "<CHOICE>" + fieldInfo.choices[i] + "</CHOICE>";\n      }\n      schemaXml += "</CHOICES>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a currency field.\n  var createCurrency = function createCurrency(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Currency";\n    // Set the number properties\n    if (fieldInfo.decimals >= 0) {\n      props["Decimals"] = fieldInfo.decimals;\n    }\n    if (fieldInfo.lcid > 0) {\n      props["LCID"] = fieldInfo.lcid;\n    }\n    if (fieldInfo.max != null) {\n      props["Max"] = fieldInfo.max;\n    }\n    if (fieldInfo.min != null) {\n      props["Min"] = fieldInfo.min;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a date field.\n  var createDate = function createDate(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "DateTime";\n    // Set the date/time properties\n    props["Format"] = fieldInfo.format == __1.SPTypes.DateFormat.DateTime ? "DateTime" : "DateOnly";\n    // Set the date/time display\n    switch (fieldInfo.displayFormat) {\n      case __1.SPTypes.FriendlyDateFormat.Disabled:\n        props["FriendlyDisplayFormat"] = "Disabled";\n        break;\n      case __1.SPTypes.FriendlyDateFormat.Relative:\n        props["FriendlyDisplayFormat"] = "Relative";\n        break;\n      case __1.SPTypes.FriendlyDateFormat.Unspecified:\n        props["FriendlyDisplayFormat"] = "Unspecified";\n        break;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.defaultToday) {\n      schemaXml += "<Default>[today]</Default>";\n    } else if (fieldInfo.defaultValue) {\n      schemaXml += "<Default>" + fieldInfo.defaultValue + "</Default>";\n    }\n    if (fieldInfo.defaultFormula) {\n      schemaXml += "<DefaultFormula>" + fieldInfo.defaultFormula + "</DefaultFormula>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a geolocation field.\n  var createGeolocation = function createGeolocation(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Geolocation";\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a guid field.\n  var createGuid = function createGuid(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Guid";\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a image field.\n  var createImage = function createImage(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Thumbnail";\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a lookup field.\n  var createLookup = function createLookup(fieldInfo, props) {\n    // Set the field type\n    props["Type"] = fieldInfo.multi ? "LookupMulti" : "Lookup";\n    // Update the relationship behavior\n    switch (fieldInfo.relationshipBehavior) {\n      case __1.SPTypes.RelationshipDeleteBehaviorType.Cascade:\n        props["RelationshipDeleteBehavior"] = "Cascade";\n        break;\n      case __1.SPTypes.RelationshipDeleteBehaviorType.None:\n        props["RelationshipDeleteBehavior"] = "None";\n        break;\n      case __1.SPTypes.RelationshipDeleteBehaviorType.Restrict:\n        props["RelationshipDeleteBehavior"] = "Restrict";\n        break;\n    }\n    // Set the lookup properties\n    if (fieldInfo.fieldRef) {\n      props["FieldRef"] = fieldInfo.fieldRef;\n    }\n    if (fieldInfo.multi) {\n      props["Mult"] = "TRUE";\n    }\n    props["ShowField"] = fieldInfo.showField || "Title";\n    // See if the lookup name exists\n    if (fieldInfo.listName) {\n      // Get the web containing the list\n      (0, lib_1.Web)(fieldInfo.webUrl || targetWebUrl, {\n        disableCache: true\n      })\n      // Get the list\n      .Lists(fieldInfo.listName)\n      // Set the query\n      .query({\n        Expand: ["ParentWeb"]\n      })\n      // Execute the request\n      .execute(function (list) {\n        // Set the list and web ids\n        props["List"] = "{" + list.Id + "}";\n        if (fieldInfo.webUrl) {\n          props["WebId"] = list.ParentWeb.Id;\n        }\n        // Resolve the request\n        _resolve("<Field " + toString(props) + " />");\n      }, function () {\n        // Error getting the lookup list\n        _reject("Error getting the lookup list.");\n      });\n    } else {\n      // Set the list id\n      props["List"] = "{" + fieldInfo.listId.replace(/[\\{\\}]/g, "") + "}";\n      // Resolve the request\n      _resolve("<Field " + toString(props) + " />");\n    }\n  };\n  // Returns the schema xml for a managed metadata field.\n  var createMMS = function createMMS(fieldInfo, props) {\n    // Create the value field\n    var valueProps = {\n      ID: "{" + lib_1.ContextInfo.generateGUID() + "}",\n      Name: fieldInfo.name + "_0",\n      StaticName: fieldInfo.name + "_0",\n      DisplayName: fieldInfo.title + " Value",\n      Type: "Note",\n      Hidden: "TRUE",\n      Required: "FALSE",\n      ShowInViewForms: "FALSE",\n      CanToggleHidden: "TRUE"\n    };\n    // Generate the value field schema xml\n    var schemaXmlValue = "<Field " + toString(valueProps) + " />";\n    // Set the mms properties\n    props["Type"] = "TaxonomyFieldType";\n    props["ShowField"] = "Term" + (fieldInfo.locale ? fieldInfo.locale.toString() : "1033");\n    // Generate the mms field schema xml\n    var schemaXml = ["<Field " + toString(props) + ">", "<Customization>", "<ArrayOfProperty>", "<Property>", "<Name>TextField</Name>", "<Value xmlns:q6=\\"http://www.w3.org/2001/XMLSchema\\" p4:type=\\"q6:string\\" xmlns:p4=\\"http://www.w3.org/2001/XMLSchema-instance\\">" + valueProps.ID + "</Value>", "</Property>", "</ArrayOfProperty>", "</Customization>", "</Field>"].join("");\n    // Resolve the request\n    _resolve([schemaXmlValue, schemaXml]);\n  };\n  // Returns the schema xml for a note field.\n  var createNote = function createNote(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Note";\n    // Set the note properties\n    if (fieldInfo.appendFl) {\n      props["AppendOnly"] = "TRUE";\n    }\n    if (fieldInfo.noteType == __1.SPTypes.FieldNoteType.EnhancedRichText || fieldInfo.noteType == __1.SPTypes.FieldNoteType.RichText) {\n      props["RichText"] = "TRUE";\n    }\n    if (fieldInfo.noteType == __1.SPTypes.FieldNoteType.EnhancedRichText) {\n      props["RichTextMode"] = "FullHtml";\n    }\n    if (fieldInfo.numberOfLines > 0) {\n      props["NumLines"] = fieldInfo.numberOfLines;\n    }\n    if (fieldInfo.unlimited) {\n      props["UnlimitedLengthInDocumentLibrary"] = "TRUE";\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a number field.\n  var createNumber = function createNumber(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Number";\n    // Set the number properties\n    if (fieldInfo.decimals >= 0) {\n      props["Decimals"] = fieldInfo.decimals;\n    }\n    if (fieldInfo.max != null) {\n      props["Max"] = fieldInfo.max;\n    }\n    if (fieldInfo.min != null) {\n      props["Min"] = fieldInfo.min;\n    }\n    if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Integer) {\n      props["Decimals"] = 0;\n    }\n    if (fieldInfo.numberType == __1.SPTypes.FieldNumberType.Percentage) {\n      props["Percentage"] = "TRUE";\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.defaultValue) {\n      schemaXml += "<Default>" + fieldInfo.defaultValue + "</Default>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a text field.\n  var createText = function createText(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "Text";\n    // Set the number properties\n    if (fieldInfo.maxLength != null) {\n      props["MaxLength"] = fieldInfo.maxLength;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + ">";\n    if (fieldInfo.defaultValue) {\n      schemaXml += "<Default>" + fieldInfo.defaultValue + "</Default>";\n    }\n    schemaXml += "</Field>";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a url field.\n  var createUrl = function createUrl(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "URL";\n    // Set the url properties\n    props["Format"] = fieldInfo.format == __1.SPTypes.UrlFormatType.Image ? "Image" : "Hyperlink";\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Returns the schema xml for a user field.\n  var createUser = function createUser(fieldInfo, props) {\n    var schemaXml = null;\n    // Set the field type\n    props["Type"] = "User";\n    // Set the user properties\n    if (fieldInfo.multi) {\n      props["Mult"] = "TRUE";\n    }\n    if (fieldInfo.selectionMode != null) {\n      props["UserSelectionMode"] = fieldInfo.selectionMode;\n    }\n    if (fieldInfo.selectionScope != null) {\n      props["UserSelectionScope"] = fieldInfo.selectionScope;\n    }\n    if (fieldInfo.showField != null) {\n      props["ShowField"] = fieldInfo.showField;\n    }\n    // Generate the schema\n    schemaXml = "<Field " + toString(props) + " />";\n    // Resolve the request\n    _resolve(schemaXml);\n  };\n  // Method to convert the properties to a string\n  var toString = function toString(props) {\n    var properties = "";\n    // Parse the properties\n    for (var key in props) {\n      var value = props[key];\n      // Add the property\n      properties += (properties ? " " : "") + key + "=\\"" + props[key] + "\\"";\n    }\n    // Return the string value\n    return properties;\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Set the resolve/reject methods\n    _resolve = resolve;\n    _reject = reject;\n    // See if the schema xml has been defined\n    if (fieldInfo.schemaXml) {\n      // Resolve the promise\n      resolve(fieldInfo.schemaXml);\n    } else {\n      // Set the base properties\n      var props = {};\n      props["ID"] = fieldInfo.id || "{" + lib_1.ContextInfo.generateGUID() + "}";\n      props["Name"] = fieldInfo.name;\n      props["StaticName"] = fieldInfo.name;\n      props["DisplayName"] = fieldInfo.title || fieldInfo.name;\n      // Set the optional properties\n      if (typeof fieldInfo.allowDeletion !== "undefined") {\n        props["AllowDeletion"] = fieldInfo.allowDeletion ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.customFormatter !== "undefined") {\n        props["CustomFormatter"] = JSON.stringify(fieldInfo.customFormatter).replace(/"/g, "&quot;");\n      }\n      if (typeof fieldInfo.description !== "undefined") {\n        props["Description"] = fieldInfo.description;\n      }\n      if (typeof fieldInfo.enforceUniqueValues !== "undefined") {\n        props["EnforceUniqueValues"] = fieldInfo.enforceUniqueValues ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.group !== "undefined") {\n        props["Group"] = fieldInfo.group;\n      }\n      if (typeof fieldInfo.jslink !== "undefined") {\n        props["JSLink"] = fieldInfo.jslink;\n      }\n      if (typeof fieldInfo.hidden !== "undefined") {\n        props["Hidden"] = fieldInfo.hidden ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.indexed !== "undefined") {\n        props["Indexed"] = fieldInfo.indexed ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.readOnly !== "undefined") {\n        props["ReadOnly"] = fieldInfo.readOnly ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.required !== "undefined") {\n        props["Required"] = fieldInfo.required ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.showInDisplayForm !== "undefined") {\n        props["ShowInDisplayForm"] = fieldInfo.showInDisplayForm ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.showInEditForm !== "undefined") {\n        props["ShowInEditForm"] = fieldInfo.showInEditForm ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.showInListSettings !== "undefined") {\n        props["ShowInListSettings"] = fieldInfo.showInListSettings ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.showInNewForm !== "undefined") {\n        props["ShowInNewForm"] = fieldInfo.showInNewForm ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.showInViewForms !== "undefined") {\n        props["ShowInViewForms"] = fieldInfo.showInViewForms ? "TRUE" : "FALSE";\n      }\n      if (typeof fieldInfo.sortable !== "undefined") {\n        props["Sortable"] = fieldInfo.sortable ? "TRUE" : "FALSE";\n      }\n      // Set the type\n      switch (fieldInfo.type) {\n        // Boolean\n        case spCfg_1.SPCfgFieldType.Boolean:\n          createBoolean(fieldInfo, props);\n          break;\n        // Calculated\n        case spCfg_1.SPCfgFieldType.Calculated:\n          createCalculated(fieldInfo, props);\n          break;\n        // Choice\n        case spCfg_1.SPCfgFieldType.Choice:\n          createChoice(fieldInfo, props);\n          break;\n        // Currency\n        case spCfg_1.SPCfgFieldType.Currency:\n          createCurrency(fieldInfo, props);\n          break;\n        // Date/Time\n        case spCfg_1.SPCfgFieldType.Date:\n          createDate(fieldInfo, props);\n          break;\n        // Geolocation\n        case spCfg_1.SPCfgFieldType.Geolocation:\n          createGeolocation(fieldInfo, props);\n          break;\n        // Guid\n        case spCfg_1.SPCfgFieldType.Guid:\n          createGuid(fieldInfo, props);\n          break;\n        // Image\n        case spCfg_1.SPCfgFieldType.Image:\n          createImage(fieldInfo, props);\n          break;\n        // Lookup\n        case spCfg_1.SPCfgFieldType.Lookup:\n          createLookup(fieldInfo, props);\n          break;\n        // MMS\n        case spCfg_1.SPCfgFieldType.MMS:\n          createMMS(fieldInfo, props);\n          break;\n        // Note\n        case spCfg_1.SPCfgFieldType.Note:\n          createNote(fieldInfo, props);\n          break;\n        // Number\n        case spCfg_1.SPCfgFieldType.Number:\n          createNumber(fieldInfo, props);\n          break;\n        // Text\n        case spCfg_1.SPCfgFieldType.Text:\n          createText(fieldInfo, props);\n          break;\n        // URL\n        case spCfg_1.SPCfgFieldType.Url:\n          createUrl(fieldInfo, props);\n          break;\n        // User\n        case spCfg_1.SPCfgFieldType.User:\n          createUser(fieldInfo, props);\n          break;\n        // Field type not supported\n        default:\n          // Create a text field by default\n          createText(fieldInfo, props);\n          break;\n      }\n    }\n  });\n};\nexports.FieldSchemaXML = FieldSchemaXML;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/fieldSchemaXML.js?')},"./build/helper/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./executor */ "./build/helper/executor.js"), exports);\n__exportStar(__webpack_require__(/*! ./fieldSchemaXML */ "./build/helper/fieldSchemaXML.js"), exports);\n__exportStar(__webpack_require__(/*! ./jslink */ "./build/helper/jslink.js"), exports);\n__exportStar(__webpack_require__(/*! ./listForm */ "./build/helper/listForm.js"), exports);\n__exportStar(__webpack_require__(/*! ./listFormField */ "./build/helper/listFormField.js"), exports);\n__exportStar(__webpack_require__(/*! ./methods */ "./build/helper/methods/index.js"), exports);\n__exportStar(__webpack_require__(/*! ./ribbonLink */ "./build/helper/ribbonLink.js"), exports);\n__exportStar(__webpack_require__(/*! ./sbLink */ "./build/helper/sbLink.js"), exports);\n__exportStar(__webpack_require__(/*! ./sp */ "./build/helper/sp/index.js"), exports);\n__exportStar(__webpack_require__(/*! ./spCfg */ "./build/helper/spCfg.js"), exports);\n__exportStar(__webpack_require__(/*! ./taxonomy */ "./build/helper/taxonomy.js"), exports);\n__exportStar(__webpack_require__(/*! ./webpart */ "./build/helper/webpart.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/helper/index.js?')},"./build/helper/jslink.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.JSLink = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar sptypes_1 = __webpack_require__(/*! ../sptypes */ "./build/sptypes/index.js");\n/**\n * JSLink Helper Methods\n */\nexports.JSLink = {\n  // Hide event flag\n  _hideEventFl: false,\n  /**\n   * Field to Method Mapper\n   * 1 - Display Form\n   * 2 - Edit Form\n   * 3 - New Form\n   * 4 - View\n   */\n  _fieldToMethodMapper: {\n    \'Attachments\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldAttachments_Default"],\n      2: lib_1.ContextInfo.window["SPFieldAttachments_Default"],\n      3: lib_1.ContextInfo.window["SPFieldAttachments_Default"]\n    },\n    \'Boolean\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_DefaultNoEncode"],\n      2: lib_1.ContextInfo.window["SPFieldBoolean_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldBoolean_Edit"]\n    },\n    \'Currency\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldNumber_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldNumber_Edit"]\n    },\n    \'Calculated\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPField_FormDisplay_Empty"],\n      3: lib_1.ContextInfo.window["SPField_FormDisplay_Empty"]\n    },\n    \'Choice\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldChoice_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldChoice_Edit"]\n    },\n    \'Computed\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      3: lib_1.ContextInfo.window["SPField_FormDisplay_Default"]\n    },\n    \'DateTime\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldDateTime_Display"],\n      2: lib_1.ContextInfo.window["SPFieldDateTime_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldDateTime_Edit"]\n    },\n    \'File\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldFile_Display"],\n      2: lib_1.ContextInfo.window["SPFieldFile_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldFile_Edit"]\n    },\n    \'Integer\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldNumber_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldNumber_Edit"]\n    },\n    \'Lookup\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldLookup_Display"],\n      2: lib_1.ContextInfo.window["SPFieldLookup_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldLookup_Edit"]\n    },\n    \'LookupMulti\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldLookup_Display"],\n      2: lib_1.ContextInfo.window["SPFieldLookup_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldLookup_Edit"]\n    },\n    \'MultiChoice\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldMultiChoice_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldMultiChoice_Edit"]\n    },\n    \'Note\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldNote_Display"],\n      2: lib_1.ContextInfo.window["SPFieldNote_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldNote_Edit"]\n    },\n    \'Number\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldNumber_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldNumber_Edit"]\n    },\n    \'Text\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPField_FormDisplay_Default"],\n      2: lib_1.ContextInfo.window["SPFieldText_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldText_Edit"]\n    },\n    \'URL\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldUrl_Display"],\n      2: lib_1.ContextInfo.window["SPFieldUrl_Edit"],\n      3: lib_1.ContextInfo.window["SPFieldUrl_Edit"]\n    },\n    \'User\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldUser_Display"],\n      2: lib_1.ContextInfo.window["SPClientPeoplePickerCSRTemplate"],\n      3: lib_1.ContextInfo.window["SPClientPeoplePickerCSRTemplate"]\n    },\n    \'UserMulti\': {\n      4: lib_1.ContextInfo.window["RenderFieldValueDefault"],\n      1: lib_1.ContextInfo.window["SPFieldUserMulti_Display"],\n      2: lib_1.ContextInfo.window["SPClientPeoplePickerCSRTemplate"],\n      3: lib_1.ContextInfo.window["SPClientPeoplePickerCSRTemplate"]\n    }\n  },\n  /**\n   * Methods\n   */\n  /**\n   * Disables edit for the specified field.\n   * @param ctx - The client context.\n   * @param field - The field to disable edit.\n   * @param requireValueFl - Flag to only disable the field, if a value exists.\n   */\n  disableEdit: function disableEdit(ctx, field, requireValueFl) {\n    var fieldValue = ctx.CurrentFieldValue;\n    // Ensure a value exists\n    if (fieldValue) {\n      // Update the context, based on the field type\n      switch (ctx.CurrentFieldSchema.Type) {\n        case "MultiChoice":\n          var regExp = new RegExp(sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString, "g");\n          // Update the field value\n          fieldValue = ctx.CurrentFieldValue\n          // Replace the delimiter\n          .replace(regExp, "; ")\n          // Trim the delimiter from the beginning\n          .replace(/^; /g, "")\n          // Trim the delimiter from the end\n          .replace(/; $/g, "");\n          break;\n        case "Note":\n          // Replace the return characters\n          fieldValue = "<div>" + ctx.CurrentFieldValue.replace(/\\n/g, "<br />") + "</div>";\n          break;\n        case "User":\n        case "UserMulti":\n          for (var i = 0; i < ctx.CurrentFieldValue.length; i++) {\n            var userValue = ctx.CurrentFieldValue[i];\n            // Add the user value\n            fieldValue +=\n            // User Lookup ID\n            userValue.EntityData.SPUserID +\n            // Delimiter\n            sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString +\n            // User Lookup Value\n            userValue.DisplayText + (\n            // Optional Delimiter\n            i == ctx.CurrentFieldValue.length - 1 ? "" : sptypes_1.SPTypes.ClientTemplatesUtility.UserLookupDelimitString);\n          }\n          break;\n      }\n      ;\n      // Update the current field value\n      ctx.CurrentFieldValue = fieldValue;\n    }\n    // Determine the control mode\n    var controlMode = sptypes_1.SPTypes.ControlMode.Display;\n    if (requireValueFl && (fieldValue == null || fieldValue == "")) {\n      // Inherit the control mode\n      controlMode = ctx.ControlMode;\n    }\n    // Return the display value of the field\n    return exports.JSLink.renderField(ctx, field, controlMode);\n  },\n  /**\n   * Disable quick edit for the specified field.\n   * @param ctx - The client context.\n   * @param field - The field to disable edit.\n   */\n  disableQuickEdit: function disableQuickEdit(ctx, field) {\n    // Ensure we are in grid edit mode\n    if (ctx.inGridMode) {\n      // Disable editing for this field\n      field.AllowGridEditing = false;\n      return "";\n    }\n    // Return the default field value html\n    return exports.JSLink.renderField(ctx, field);\n  },\n  /**\n   * Returns the list view.\n   * @param ctx - The client context.\n   */\n  getListView: function getListView(ctx) {\n    // Get the webpart\n    var wp = exports.JSLink.getWebPart(ctx);\n    if (wp) {\n      // Find the list form table\n      wp = wp.querySelector(".ms-formtable");\n    }\n    // Return the list view\n    return wp;\n  },\n  /**\n   * Returns the list view items.\n   * @param ctx - The client context.\n   */\n  getListViewItems: function getListViewItems(ctx) {\n    // Return the list view items\n    return ctx.ListData ? ctx.ListData.Row : [];\n  },\n  /**\n   * Returns the selected list view items\n   */\n  getListViewSelectedItems: function getListViewSelectedItems() {\n    // Return the selected items\n    return lib_1.ContextInfo.window["SP"].ListOperation.Selection.getSelectedItems();\n  },\n  /**\n   * Returns the webpart containing the JSLink field/form/view.\n   * @param ctx - The client context.\n   */\n  getWebPart: function getWebPart(ctx) {\n    // Return the webpart\n    return lib_1.ContextInfo.document.querySelector("#WebPart" + (ctx.FormUniqueId || ctx.wpq));\n  },\n  /**\n   * Hides the specified field.\n   * @param ctx - The client context.\n   * @param field - The field to hide.\n   */\n  hideField: function hideField(ctx, field) {\n    // Ensure the hide event has been created\n    if (!exports.JSLink._hideEventFl) {\n      // Set the flag\n      exports.JSLink._hideEventFl = true;\n      // Create the event\n      lib_1.ContextInfo.window.addEventListener("load", function () {\n        // Query for the elements to hide\n        var fieldElements = lib_1.ContextInfo.document.querySelectorAll(".hide-field");\n        for (var _i = 0, fieldElements_1 = fieldElements; _i < fieldElements_1.length; _i++) {\n          var fieldElement = fieldElements_1[_i];\n          // Get the parent row\n          var parentRow = fieldElement.parentNode && fieldElement.parentNode.parentNode ? fieldElement.parentNode.parentNode : null;\n          if (parentRow) {\n            // Ensure the parent row exists\n            if (fieldElement.parentNode.getAttribute("data-field-name") != parentRow.getAttribute("data-field-name")) {\n              // Find the parent row\n              while (parentRow && parentRow.nodeName.toLowerCase() != "tr") {\n                // Update the parent node\n                parentRow = parentRow.parentNode;\n              }\n            }\n            // Hide the parent row\n            if (parentRow) {\n              parentRow.style.display = "none";\n            }\n          }\n        }\n      });\n    }\n  },\n  /**\n   * Registers the JSLink configuration\n   * @param cfg - The JSLink configuration.\n   */\n  register: function register(cfg) {\n    // Ensure a configuration exists\n    if (cfg) {\n      // Get the template manager\n      var templateManager = lib_1.ContextInfo.window.SPClientTemplates;\n      templateManager = templateManager ? templateManager.TemplateManager : null;\n      // Ensure it exists\n      if (templateManager) {\n        // Apply the customization\n        templateManager.RegisterTemplateOverrides(cfg);\n      }\n    }\n  },\n  /**\n   * Removes the field and html from the page.\n   * @param ctx - The client context.\n   * @param field - The field to remove.\n   */\n  removeField: function removeField(ctx, field) {\n    // Hide the field\n    exports.JSLink.hideField(ctx, field);\n    // Return an empty element\n    return "<div class=\'hide-field\'></div>";\n  },\n  /**\n   * Method to render the default html for a field.\n   * @param ctx - The client context.\n   * @param field - The form field.\n   * @param formType - The form type. (Display, Edit, New or View)\n   */\n  renderField: function renderField(ctx, field, formType) {\n    // Determine the field type\n    var fieldType = field ? field.Type : ctx.CurrentFieldSchema ? ctx.CurrentFieldSchema.Type : null;\n    // Ensure the form type is set\n    formType = formType ? formType : ctx.ControlMode;\n    // Ensure a field to method mapper exists\n    if (exports.JSLink._fieldToMethodMapper[fieldType] && exports.JSLink._fieldToMethodMapper[fieldType][formType]) {\n      // Return the default html for this field\n      var defaultHtml = exports.JSLink._fieldToMethodMapper[fieldType][formType](ctx);\n      if (defaultHtml) {\n        return defaultHtml;\n      }\n    }\n    // Set the field renderer based on the field type\n    var field = ctx.CurrentFieldSchema;\n    var fieldRenderer = null;\n    switch (field.Type) {\n      case "AllDayEvent":\n        fieldRenderer = new lib_1.ContextInfo.window["AllDayEventFieldRenderer"](field.Name);\n        break;\n      case "Attachments":\n        fieldRenderer = new lib_1.ContextInfo.window["AttachmentFieldRenderer"](field.Name);\n        break;\n      case "BusinessData":\n        fieldRenderer = new lib_1.ContextInfo.window["BusinessDataFieldRenderer"](field.Name);\n        break;\n      case "Computed":\n        fieldRenderer = new lib_1.ContextInfo.window["ComputedFieldRenderer"](field.Name);\n        break;\n      case "CrossProjectLink":\n        fieldRenderer = new lib_1.ContextInfo.window["ProjectLinkFieldRenderer"](field.Name);\n        break;\n      case "Currency":\n        fieldRenderer = new lib_1.ContextInfo.window["NumberFieldRenderer"](field.Name);\n        break;\n      case "DateTime":\n        fieldRenderer = new lib_1.ContextInfo.window["DateTimeFieldRenderer"](field.Name);\n        break;\n      case "Lookup":\n        fieldRenderer = new lib_1.ContextInfo.window["LookupFieldRenderer"](field.Name);\n        break;\n      case "LookupMulti":\n        fieldRenderer = new lib_1.ContextInfo.window["LookupFieldRenderer"](field.Name);\n        break;\n      case "Note":\n        fieldRenderer = new lib_1.ContextInfo.window["NoteFieldRenderer"](field.Name);\n        break;\n      case "Number":\n        fieldRenderer = new lib_1.ContextInfo.window["NumberFieldRenderer"](field.Name);\n        break;\n      case "Recurrence":\n        fieldRenderer = new lib_1.ContextInfo.window["RecurrenceFieldRenderer"](field.Name);\n        break;\n      case "Text":\n        fieldRenderer = new lib_1.ContextInfo.window["TextFieldRenderer"](field.Name);\n        break;\n      case "URL":\n        fieldRenderer = new lib_1.ContextInfo.window["UrlFieldRenderer"](field.Name);\n        break;\n      case "User":\n        fieldRenderer = new lib_1.ContextInfo.window["UserFieldRenderer"](field.Name);\n        break;\n      case "UserMulti":\n        fieldRenderer = new lib_1.ContextInfo.window["UserFieldRenderer"](field.Name);\n        break;\n      case "WorkflowStatus":\n        fieldRenderer = new lib_1.ContextInfo.window["RawFieldRenderer"](field.Name);\n        break;\n    }\n    ;\n    // Get the current item\n    var currentItem = ctx.CurrentItem || ctx.ListData.Items[0];\n    // Return the item\'s field value html\n    return fieldRenderer ? fieldRenderer.RenderField(ctx, field, currentItem, ctx.ListSchema) : currentItem[field.Name];\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/jslink.js?')},"./build/helper/listForm.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ListForm = void 0;\nvar __1 = __webpack_require__(/*! .. */ "./build/index.js");\n/**\n * List Form\n */\nexports.ListForm = {\n  // Method to create an instance of the list form\n  create: function create(props) {\n    var _info = null;\n    var _props = null;\n    var _reject = null;\n    var _resolve = null;\n    // Save the properties\n    _props = props || {};\n    _props.fields = _props.fields;\n    // Method to load the list data\n    var load = function load() {\n      // Clear the information\n      _info = {\n        item: _props.item,\n        query: _props.query || {},\n        requestDigest: _props.requestDigest\n      };\n      // Load the list data\n      loadListData().then(\n      // Success\n      function () {\n        // See if the fields have been defined\n        if (_props.fields) {\n          // Process the fields\n          processFields();\n          // Load the item data\n          loadItem();\n        } else {\n          // Load the content type\n          loadContentType();\n        }\n      },\n      // Reject\n      _reject);\n    };\n    // Method to load a content type for the associated fields\n    var loadContentType = function loadContentType() {\n      // Load the content types\n      _info.list.ContentTypes()\n      // Query for the default content type and expand the field links\n      .query({\n        Filter: _props.contentType ? "Name eq \'" + _props.contentType + "\'" : null,\n        Expand: ["FieldLinks"],\n        Select: ["*", "FieldLinks/DisplayName", "FieldLinks/Hidden", "FieldLinks/Name", "FieldLinks/ReadOnly", "FieldLinks/Required"],\n        Top: 1\n      })\n      // Execute the request, but wait for the previous one to be completed\n      .execute(function (ct) {\n        // Resolve the promise\n        loadDefaultFields(ct.results[0]);\n      }, _reject);\n    };\n    // Method to load the default fields\n    var loadDefaultFields = function loadDefaultFields(ct) {\n      var fields = ct ? ct.FieldLinks.results : [];\n      var formFields = {};\n      var formLinks = {};\n      // Parse the field links\n      for (var i = 0; i < fields.length; i++) {\n        var fieldLink = fields[i];\n        // Get the field\n        var field = _info.fields[fieldLink.Name];\n        if (field) {\n          // Skip the content type field\n          if (field.InternalName == "ContentType") {\n            continue;\n          }\n          // Skip hidden fields\n          if (field.Hidden || fieldLink.Hidden) {\n            continue;\n          }\n          // Save the form field and link\n          formFields[field.InternalName] = field;\n          formLinks[field.InternalName] = fieldLink;\n        }\n      }\n      // Update the fields\n      _info.contentType = ct;\n      _info.fields = formFields;\n      _info.fieldLinks = formLinks;\n      // Load the item data\n      loadItem();\n    };\n    // Method to load the field data\n    var loadFieldData = function loadFieldData(fields) {\n      // Clear the fields\n      _info.fields = {};\n      // Parse the fields\n      for (var i = 0; i < fields.results.length; i++) {\n        var field = fields.results[i];\n        // See if the exclude fields is defined\n        if (_props.excludeFields) {\n          var excludeField = false;\n          // Parse the fields to exclude\n          for (var j = 0; j < _props.excludeFields.length; j++) {\n            // See if we are excluding this field\n            if (_props.excludeFields[j] == field.InternalName) {\n              // Set the flag\n              excludeField = true;\n              break;\n            }\n          }\n          // See if we are excluding the field\n          if (excludeField) {\n            continue;\n          }\n        }\n        // Save the field\n        _info.fields[field.InternalName] = field;\n      }\n    };\n    // Method to load the item\n    var loadItem = function loadItem() {\n      var reloadItem = false;\n      // See if the item already exist\n      if (_info.item) {\n        // Parse the fields\n        for (var fieldName in _info.fields) {\n          var field = _info.fields[fieldName];\n          // See what type of field this is\n          switch (field.FieldTypeKind) {\n            // Lookup or User Field\n            case __1.SPTypes.FieldType.Lookup:\n            case __1.SPTypes.FieldType.User:\n              var fieldValue = _info.item[fieldName + "Id"];\n              // Ensure the value exists\n              if (fieldValue) {\n                // See if a value exists\n                if (fieldValue.results ? fieldValue.results.length > 0 : fieldValue > 0) {\n                  // Ensure the field data has been loaded\n                  if (_info.item[fieldName] == null) {\n                    // Set the flag\n                    reloadItem = true;\n                  }\n                }\n              }\n              break;\n            // Default\n            default:\n              // See if this is an taxonomy field\n              if (field.TypeAsString.indexOf("TaxonomyFieldType") == 0) {\n                var fieldValue_1 = _info.item[fieldName + "Id"];\n                // Ensure the value exists\n                if (fieldValue_1) {\n                  // See if a field value exists\n                  if (fieldValue_1.results ? fieldValue_1.results.length > 0 : fieldValue_1 != null) {\n                    // Parse the fields\n                    for (var fieldName_1 in _info.fields) {\n                      var valueField = _info.fields[fieldName_1];\n                      // See if this is the value field\n                      if (valueField.InternalName == field.InternalName + "_0" || valueField.Title == field.InternalName + "_0") {\n                        // Ensure the value field is loaded\n                        if (_info.item[valueField.InternalName] == null) {\n                          // Set the flag\n                          reloadItem = true;\n                        }\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n              break;\n          }\n          // See if we are reloading the item\n          if (reloadItem) {\n            break;\n          }\n        }\n      }\n      // See if the item exists\n      if (_info.item && !reloadItem) {\n        // See if we are loading attachments\n        if (_props.loadAttachments && _info.attachments == null) {\n          // Load the attachments\n          exports.ListForm.loadAttachments(_props).then(function (attachments) {\n            // Set the attachments\n            _info.attachments = attachments;\n            // Resolve the promise\n            _resolve(_info);\n          }, _reject);\n        } else {\n          // Resolve the promise\n          _resolve(_info);\n        }\n      }\n      // Else, see if we are loading the list item\n      else if (reloadItem || _props.itemId > 0) {\n        // Update the item query\n        _info.query = exports.ListForm.generateODataQuery(_info, _props.loadAttachments);\n        // Get the list item\n        _info.list.Items(reloadItem ? _props.item.Id : _props.itemId)\n        // Set the query\n        .query(_info.query)\n        // Execute the request\n        .execute(function (item) {\n          // Save the attachments\n          _info.attachments = item.AttachmentFiles.results;\n          // Save the item\n          _info.item = item;\n          // Refresh the item\n          exports.ListForm.refreshItem(_info).then(function (info) {\n            // Update the info\n            _info = info;\n            // Resolve the promise\n            _resolve(_info);\n          }, _reject);\n        }, _reject);\n      }\n      // Else, this is a new item\n      else {\n        // Default the attachments\n        _info.attachments = _props.loadAttachments ? [] : _info.attachments;\n        // Resolve the promise\n        _resolve(_info);\n      }\n    };\n    // Method to load the list data\n    var loadListData = function loadListData() {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // See if the list & fields already exist\n        if (_info.list && _info.fields) {\n          // Resolve the promise\n          resolve();\n          return;\n        }\n        // Get the web\n        (0, __1.Web)(_props.webUrl, {\n          disableCache: true,\n          requestDigest: _props.requestDigest\n        })\n        // Get the list\n        .Lists(_props.listName)\n        // Execute the request\n        .execute(function (list) {\n          // Save the list and web url\n          _info.list = list;\n          _info.webUrl = _props.webUrl;\n        }, reject)\n        // Load the fields\n        .Fields()\n        // Execute the request\n        .execute(function (fields) {\n          // Load the field data\n          loadFieldData(fields);\n          // Resolve the promise\n          resolve();\n        }, reject, true);\n      });\n    };\n    // Method to process the fields\n    var processFields = function processFields() {\n      var formFields = {};\n      // Parse the fields provided\n      for (var i = 0; i < _props.fields.length; i++) {\n        var field = _info.fields[_props.fields[i]];\n        // Ensure the field exists\n        if (field) {\n          // Save the field\n          formFields[field.InternalName] = field;\n          // See if this is a taxonomy field\n          if (field.TypeAsString.indexOf("TaxonomyFieldType") == 0) {\n            // Parse the list fields\n            for (var fieldName in _info.fields) {\n              var valueField = _info.fields[fieldName];\n              // See if this is a value field\n              if (valueField.InternalName == field.InternalName + "_0" || valueField.Title == field.InternalName + "_0") {\n                // Include this field\n                formFields[valueField.InternalName] = valueField;\n                break;\n              }\n            }\n          }\n        }\n      }\n      // Update the fields\n      _info.fields = formFields;\n    };\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Save the methods\n      _reject = reject;\n      _resolve = resolve;\n      // Load the list data\n      load();\n    });\n  },\n  // Method to generate the odata query\n  generateODataQuery: function generateODataQuery(info, loadAttachments) {\n    if (loadAttachments === void 0) {\n      loadAttachments = false;\n    }\n    var query = info.query || {};\n    // Default the select query to get all the fields by default\n    query.Select = query.Select || ["*"];\n    query.Expand = query.Expand || [];\n    // See if we are loading the attachments\n    if (loadAttachments) {\n      // Expand the attachment files collection\n      query.Expand.push("AttachmentFiles");\n      // Select the attachment files\n      query.Select.push("Attachments");\n      query.Select.push("AttachmentFiles");\n    }\n    // Parse the fields\n    for (var fieldName in info.fields) {\n      var field = info.fields[fieldName];\n      // Skip the attachments field\n      if (fieldName == "Attachments") {\n        continue;\n      }\n      // See if this is the file leaf ref\n      if (field.InternalName == "FileLeafRef") {\n        // Ensure the field is included\n        query.Select.push("FileLeafRef");\n        continue;\n      }\n      // Update the query, based on the type\n      switch (field.FieldTypeKind) {\n        // Lookup Field\n        case __1.SPTypes.FieldType.Lookup:\n          var lookupField = field;\n          // See if this is an associated lookup field\n          if (lookupField.PrimaryFieldId) {\n            // Parse the form fields to find the parent field\n            for (var parentFieldName in info.fields) {\n              var parentField = info.fields[parentFieldName];\n              // See if the parent field is being loaded\n              if (parentField.Id == lookupField.PrimaryFieldId) {\n                // Select the field\n                query.Select.push(parentField.InternalName + "/" + lookupField.LookupField);\n                break;\n              }\n            }\n          } else {\n            // Expand the field\n            query.Expand.push(field.InternalName);\n            // Select the fields\n            query.Select.push(field.InternalName + "/Id");\n            query.Select.push(field.InternalName + "/" + field.LookupField);\n          }\n          break;\n        // User Field\n        case __1.SPTypes.FieldType.User:\n          // Expand the field\n          query.Expand.push(field.InternalName);\n          // Select the fields\n          query.Select.push(field.InternalName + "/Id");\n          query.Select.push(field.InternalName + "/Title");\n          break;\n        // Default\n        default:\n          // See if this is an taxonomy field\n          if (field.TypeAsString.indexOf("TaxonomyFieldType") == 0) {\n            // Parse the fields\n            for (var fieldName_2 in info.fields) {\n              var valueField = info.fields[fieldName_2];\n              // See if this is the value field\n              if (valueField.InternalName == field.InternalName + "_0" || valueField.Title == field.InternalName + "_0") {\n                // Include the value field\n                query.Select.push(valueField.InternalName);\n                break;\n              }\n            }\n          }\n          break;\n      }\n    }\n    // Return the query\n    return query;\n  },\n  // Method to load the item attachments\n  loadAttachments: function loadAttachments(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure the item id exists\n      var itemId = info.item ? info.item.Id : info.itemId;\n      if (itemId > 0) {\n        // Get the web\n        (0, __1.Web)(info.webUrl, {\n          requestDigest: info.requestDigest\n        })\n        // Get the list\n        .Lists(info.listName)\n        // Get the item\n        .Items(itemId)\n        // Get the attachment files\n        .AttachmentFiles()\n        // Execute the request\n        .execute(function (attachments) {\n          // Ensure the attachments exist\n          if (!attachments.existsFl) {\n            // Reject the promise\n            reject(attachments.response);\n            return;\n          }\n          // Resolve the promise\n          resolve(attachments.results || []);\n        }, reject);\n      } else {\n        // Resolve the promise\n        resolve([]);\n      }\n    });\n  },\n  // Method to refresh an item\n  refreshItem: function refreshItem(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Update the query\n      info.query = exports.ListForm.generateODataQuery(info, info.attachments ? true : false);\n      // Get the item\n      info.list.Items(info.item.Id).query(info.query).execute(function (item) {\n        // Update the item\n        info.item = item;\n        // Get the item values\n        info.list.Items(item.Id).query({\n          Expand: ["FieldValuesAsText", "Folder"]\n        }).execute(function (item) {\n          // Set the values\n          info.itemFolder = item.Folder;\n          info.fieldValuesAsText = item.FieldValuesAsText;\n        });\n        // Get the html values for this item\n        // This is needed for complex field values\n        info.list.Items(item.Id).FieldValuesAsHtml().execute(function (values) {\n          // Set the values\n          info.fieldValuesAsHtml = values;\n          // Resolve the promise\n          resolve(info);\n        }, true);\n      }, reject);\n    });\n  },\n  // Method to refresh the request digest value\n  refreshRequestDigest: function refreshRequestDigest(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the context info\n      __1.ContextInfo.getWeb(info.webUrl).execute(function (context) {\n        // Update the request digest value\n        info.item.updateRequestDigest(context.GetContextWebInformation.FormDigestValue);\n        info.list.updateRequestDigest(context.GetContextWebInformation.FormDigestValue);\n        // Resolve the request\n        resolve();\n      }, reject);\n    });\n  },\n  // Method to remove attachments from an item\n  removeAttachment: function removeAttachment(info, fileName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure attachments exist\n      if (info.attachments) {\n        // Parse the attachments\n        for (var i = 0; i < info.attachments.length; i++) {\n          // See if this is the target attachment\n          var attachment = info.attachments[i];\n          if (attachment.FileName == fileName) {\n            // Get the web\n            (0, __1.Web)(info.webUrl, {\n              requestDigest: info.requestDigest\n            })\n            // Get the file\n            .getFileByServerRelativeUrl(attachment.ServerRelativeUrl)\n            // Delete the file\n            ["delete"]()\n            // Execute the request\n            .execute(function () {\n              // Resolve the promise\n              resolve(info);\n            }, reject);\n            // Attachment found\n            return;\n          }\n          // Attachment not found\n          reject("Attachment \'" + fileName + "\' was not found.");\n        }\n      } else {\n        // Attachments not loaded\n        reject("Attachment \'" + fileName + "\' was not found.");\n      }\n    });\n  },\n  // Method to save attachments to an existing item\n  saveAttachments: function saveAttachments(info, attachmentInfo) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var itemId = info.item ? info.item.Id : info.itemId;\n      if (itemId > 0) {\n        // Get the web\n        var attachments = (0, __1.Web)(info.webUrl, {\n          requestDigest: info.requestDigest\n        })\n        // Get the lists\n        .Lists(info.listName)\n        // Get the item\n        .Items(itemId)\n        // Get the attachment files\n        .AttachmentFiles();\n        // Parse the attachment information\n        for (var i = 0; i < attachmentInfo.length; i++) {\n          var attachment = attachmentInfo[i];\n          // Add the attachment\n          attachments.add(attachment.name, attachment.data).execute(true);\n        }\n        // Wait for the requests to complete\n        attachments.done(function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Resolve the promise\n          resolve.apply(args);\n        });\n      } else {\n        // Resolve the promise\n        resolve(null);\n      }\n    });\n  },\n  // Method to save a new or existing item\n  saveItem: function saveItem(info, formValues, checkItemVersion) {\n    if (formValues === void 0) {\n      formValues = {};\n    }\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if this is an existing item\n      if (info.item && info.item.update) {\n        // Set the request properties if we are checking the item version\n        var requestProps = {\n          requestDigest: info.item.getRequestDigest()\n        };\n        // See if we are checking the item versions\n        if (checkItemVersion && info.item.etag) {\n          // Set the etag value\n          requestProps.requestHeader = {\n            "IF-MATCH": info.item.etag\n          };\n        }\n        // Update the item\n        (0, __1.Web)(info.webUrl, requestProps).Lists(info.list.Title).Items(info.item.Id).update(formValues).execute(function (response) {\n          // Refresh the item\n          exports.ListForm.refreshItem(info).then(function (info) {\n            // Resolve the promise\n            resolve(info);\n          }, reject);\n        }, reject);\n      } else {\n        // Set the metadata type\n        formValues["__metadata"] = {\n          type: info.list.ListItemEntityTypeFullName\n        };\n        // Add the item\n        info.list.Items().add(formValues).execute(function (item) {\n          // Update the info\n          info.item = item;\n          // Refresh the item\n          exports.ListForm.refreshItem(info).then(function (info) {\n            // Resolve the promise\n            resolve(info);\n          }, reject);\n        }, reject);\n      }\n    });\n  },\n  // Method to show a file dialog\n  showFileDialog: function showFileDialog(accept, info, onSave) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Method to add an attachment\n      var addAttachment = function addAttachment(name, data, src) {\n        // Call the save event\n        onSave ? onSave({\n          name: name,\n          data: data,\n          src: src\n        }) : null;\n        // Get the list\n        info.list\n        // Get the item\n        .Items(info.item.Id)\n        // Get the attachments\n        .AttachmentFiles()\n        // Add the file\n        .add(name, data)\n        // Execute the request\n        .execute(function () {\n          // Refresh the item\n          exports.ListForm.refreshItem(info).then(function (info) {\n            // Remove the element\n            document.body.removeChild(el);\n            // Resolve the promise\n            resolve(info);\n          });\n        }, reject);\n      };\n      // Method to read the file\n      var readFile = function readFile(ev) {\n        // Get the source file\n        var srcFile = ev.target["files"][0];\n        if (srcFile) {\n          var reader = new FileReader();\n          // Set the file loaded event\n          reader.onloadend = function (ev) {\n            var ext = srcFile.name.split(".");\n            ext = ext[ext.length - 1].toLowerCase();\n            // See if the info exists\n            if (info) {\n              // Add the attachment\n              addAttachment(srcFile.name, ev.target.result, srcFile);\n            } else {\n              // Remove the element\n              document.body.removeChild(el);\n              // Resolve the promise with the file information\n              resolve({\n                data: ev.target.result,\n                name: srcFile.name,\n                src: srcFile\n              });\n            }\n          };\n          // Set the error\n          reader.onerror = function (ev) {\n            // Remove the element\n            document.body.removeChild(el);\n            // Reject the promise\n            reject(ev.target.error);\n          };\n          // Read the file\n          reader.readAsArrayBuffer(srcFile);\n        }\n      };\n      // Create the file element\n      var el = document.body.querySelector("#listform-attachment");\n      if (el == null) {\n        el = document.createElement("input");\n        // Set the properties\n        el.accept = accept ? accept.join(\',\') : null;\n        el.id = "listform-attachment";\n        el.type = "file";\n        el.hidden = true;\n        el.onchange = readFile;\n        // Add the element to the body\n        document.body.appendChild(el);\n      }\n      // Show the dialog\n      el.click();\n    });\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/listForm.js?')},"./build/helper/listFormField.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ListFormField = void 0;\nvar __1 = __webpack_require__(/*! .. */ "./build/index.js");\n/**\n * List Form Field\n */\nexports.ListFormField = {\n  // Method to create an instance of the list form field\n  create: function create(props) {\n    var _fieldInfo = props || {};\n    var _reject = null;\n    var _resolve = null;\n    // Load the field\n    var load = function load() {\n      // See if the field exists\n      if (_fieldInfo.field) {\n        // Process the field\n        processField();\n      }\n      // Else, load the field from the information provided\n      else {\n        // Get the web\n        (0, __1.Web)(_fieldInfo.webUrl)\n        // Get the list\n        .Lists(_fieldInfo.listName)\n        // Get the fields\n        .Fields()\n        // Get the field by its internal name\n        .getByInternalNameOrTitle(_fieldInfo.name)\n        // Execute the request\n        .execute(function (field) {\n          // Save the field\n          _fieldInfo.field = field;\n          // Process the field\n          processField();\n        }, _reject);\n      }\n    };\n    // Method to proces the field and save its information\n    var processField = function processField() {\n      // Update the field information\n      _fieldInfo.defaultValue = _fieldInfo.field.DefaultValue;\n      _fieldInfo.readOnly = _fieldInfo.field.ReadOnlyField;\n      _fieldInfo.required = _fieldInfo.field.Required ? true : false;\n      _fieldInfo.title = _fieldInfo.field.Title;\n      _fieldInfo.type = _fieldInfo.field.FieldTypeKind;\n      _fieldInfo.typeAsString = _fieldInfo.field.TypeAsString;\n      // Update the field info, based on the type\n      switch (_fieldInfo.type) {\n        // Choice\n        case __1.SPTypes.FieldType.Choice:\n        case __1.SPTypes.FieldType.MultiChoice:\n          var choices = _fieldInfo.field.Choices;\n          _fieldInfo.choices = (choices ? choices["results"] : null) || [];\n          _fieldInfo.multi = _fieldInfo.type == __1.SPTypes.FieldType.MultiChoice;\n          break;\n        // Date/Time\n        case __1.SPTypes.FieldType.DateTime:\n          var fldDate = _fieldInfo.field;\n          _fieldInfo.showTime = fldDate.DisplayFormat == __1.SPTypes.DateFormat.DateTime;\n          break;\n        // Lookup\n        case __1.SPTypes.FieldType.Lookup:\n          var fldLookup = _fieldInfo.field;\n          _fieldInfo.lookupField = fldLookup.LookupField;\n          _fieldInfo.lookupListId = fldLookup.LookupList;\n          _fieldInfo.lookupWebId = fldLookup.LookupWebId;\n          _fieldInfo.multi = fldLookup.AllowMultipleValues;\n          break;\n        // Number\n        case __1.SPTypes.FieldType.Number:\n          var fldNumber = _fieldInfo.field;\n          var startIdx = fldNumber.SchemaXml.indexOf(\'Decimals="\') + 10;\n          _fieldInfo.decimals = startIdx > 10 ? parseInt(fldNumber.SchemaXml.substr(startIdx, fldNumber.SchemaXml.substr(startIdx).indexOf(\'"\'))) : 0;\n          _fieldInfo.maxValue = fldNumber.MaximumValue;\n          _fieldInfo.minValue = fldNumber.MinimumValue;\n          _fieldInfo.showAsPercentage = fldNumber.SchemaXml.indexOf(\'Percentage="TRUE"\') > 0;\n          break;\n        // Note\n        case __1.SPTypes.FieldType.Note:\n          var fldNote = _fieldInfo.field;\n          _fieldInfo.multiline = true;\n          _fieldInfo.richText = fldNote.RichText;\n          _fieldInfo.rows = fldNote.NumberOfLines;\n          break;\n        // Text\n        case __1.SPTypes.FieldType.Text:\n          _fieldInfo.multiline = false;\n          _fieldInfo.richText = false;\n          _fieldInfo.rows = 1;\n          break;\n        // User\n        case __1.SPTypes.FieldType.User:\n          var fldUser = _fieldInfo.field;\n          _fieldInfo.allowGroups = fldUser.SelectionMode == __1.SPTypes.FieldUserSelectionType.PeopleAndGroups;\n          _fieldInfo.multi = fldUser.AllowMultipleValues;\n          break;\n        // Default\n        default:\n          // See if this is an MMS field\n          if (_fieldInfo.typeAsString.indexOf("TaxonomyFieldType") == 0) {\n            var fldMMS = _fieldInfo.field;\n            _fieldInfo.multi = fldMMS.AllowMultipleValues;\n            _fieldInfo.termId = fldMMS.IsAnchorValid ? fldMMS.AnchorId : fldMMS.TermSetId;\n            _fieldInfo.termSetId = fldMMS.TermSetId;\n            _fieldInfo.termStoreId = fldMMS.SspId;\n          }\n          break;\n      }\n      // Resolve the promise\n      _resolve(_fieldInfo);\n    };\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Save the methods\n      _resolve = resolve;\n      _reject = reject;\n      // See if the field exists\n      if (_fieldInfo.field) {\n        // Process the field\n        processField();\n      } else {\n        // Load the field\n        load();\n      }\n    });\n  },\n  // Method to get the folder to store the image field file in\n  getOrCreateImageFolder: function getOrCreateImageFolder(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the site assets library\n      (function () {\n        return new Promise(function (resolve) {\n          (0, __1.Web)(info.webUrl).Lists("Site Assets").execute(\n          // Exists\n          function (lib) {\n            // Resolve the request\n            resolve(lib);\n          },\n          // Doesn\'t Exist\n          function () {\n            // Create the list\n            (0, __1.Web)(info.webUrl).Lists().add({\n              Title: "SiteAssets",\n              BaseTemplate: __1.SPTypes.ListTemplateType.DocumentLibrary\n            }).execute(function (lib) {\n              // Update the title\n              lib.update({\n                Title: "Site Assets"\n              }).execute(function () {\n                // Resolve the request\n                resolve(lib);\n              }, reject);\n            });\n          });\n        });\n      })().then(function (siteAssets) {\n        // Get the list id folder\n        siteAssets.RootFolder().Folders(info.list.Id).execute(\n        // Exists\n        function (folder) {\n          // Resolve the request\n          resolve(folder);\n        },\n        // Doesn\'t Exist\n        function () {\n          // Create the folder\n          siteAssets.RootFolder().Folders().add(info.list.Id).execute(function (folder) {\n            // Resolve the request\n            resolve(folder);\n          }, reject);\n        });\n      });\n    });\n  },\n  // Method to load the lookup data\n  loadLookupData: function loadLookupData(info, queryTop) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the current site collection\n      (0, __1.Site)()\n      // Get the web containing the lookup list\n      .openWebById(info.lookupWebId)\n      // Execute the request\n      .execute(function (web) {\n        // See if there is a filter\n        var query = info.lookupFilter || {};\n        if (typeof query == "string") {\n          // Set the filter\n          query = {\n            Filter: query\n          };\n        }\n        // Default the value if it hasn\'t been set\n        if (query.GetAllItems == null) {\n          // Set the default value\n          query.GetAllItems = true;\n        }\n        // Default the value if it hasn\'t been set\n        if (query.OrderBy == null) {\n          // Set the default sort\n          query.OrderBy = ["Title"];\n        }\n        // Default the value if it hasn\'t been set\n        if (query.Select == null) {\n          // Set the default value\n          query.Select = ["ID", info.lookupField];\n        }\n        // Default the value if it hasn\'t been set\n        if (query.Top == null) {\n          // Set the default value\n          query.Top = queryTop > 0 && queryTop <= 5000 ? queryTop : 500;\n        }\n        // Get the list\n        web.Lists()\n        // Get the list by id\n        .getById(info.lookupListId)\n        // Get the items\n        .Items()\n        // Set the query\n        .query(query)\n        // Execute the request\n        .execute(function (items) {\n          // Resolve the promise\n          resolve(items.results);\n        }, reject);\n      }, reject);\n    });\n  },\n  // Method to load the mms data\n  loadMMSData: function loadMMSData(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the term set\n      __1.Helper.Taxonomy.getTermSetById(info.termStoreId, info.termSetId).then(function (termSet) {\n        // Get the target root term\n        var root = __1.Helper.Taxonomy.findById(termSet, info.termId);\n        // See if the root node doesn\'t exist\n        if (root == null) {\n          // Set the root to the term set\n          root = __1.Helper.Taxonomy.findById(termSet, info.termSetId);\n        }\n        // Resolve the request\n        resolve(__1.Helper.Taxonomy.toArray(root));\n      }, reject);\n    });\n  },\n  // Method to load the mms value field\n  loadMMSValueField: function loadMMSValueField(info) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the web\n      (0, __1.Web)(info.webUrl)\n      // Get the list\n      .Lists(info.listName)\n      // Get the fields\n      .Fields()\n      // Get the hidden field\n      .getByInternalNameOrTitle(info.name + "_0")\n      // Execute the request\n      .execute(\n      // Success\n      function (field) {\n        // Resolve the promise\n        resolve(field);\n      },\n      // Error\n      function () {\n        // Reject w/ a message\n        reject("Unable to find the hidden value field for \'" + info.name + "\'.");\n      });\n    });\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/listFormField.js?')},"./build/helper/methods/addContentEditorWebPart.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.addContentEditorWebPart = void 0;\nvar webpart_1 = __webpack_require__(/*! ../webpart */ "./build/helper/webpart.js");\n// Method to add a script editor webpart to the page\nvar addContentEditorWebPart = function addContentEditorWebPart(url, wpProps) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the current context\n    var context = SP.ClientContext.get_current();\n    // Get the webpart manager for the page\n    var page = context.get_web().getFileByServerRelativeUrl(url);\n    var wpMgr = page.getLimitedWebPartManager(SP.WebParts.PersonalizationScope.shared);\n    // Create the webpart\n    var wp = wpMgr.importWebPart(webpart_1.WebPart.generateContentEditorXML(wpProps)).get_webPart();\n    // Add the webpart to the page\n    wpMgr.addWebPart(wp, wpProps.zone || "", wpProps.index || 0);\n    // Save the page\n    context.load(wp);\n    context.executeQueryAsync(\n    // Success\n    function () {\n      // Resolve the promise\n      resolve();\n    },\n    // Error\n    function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      // Reject the promise\n      reject(args[1] ? args[1].get_message() : "");\n    });\n  });\n};\nexports.addContentEditorWebPart = addContentEditorWebPart;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/addContentEditorWebPart.js?')},"./build/helper/methods/addPermissionLevel.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.addPermissionLevel = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\n/**\n * Adds a permission level to the current or specified web.\n */\nvar addPermissionLevel = function addPermissionLevel(props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Ensure the base permissions exist\n    if (SP && SP.BasePermissions) {\n      // Set the context and get the role definitions\n      var ctx = props.WebUrl ? new SP.ClientContext(props.WebUrl) : SP.ClientContext.get_current();\n      // Set the base permissions\n      var basePermissions = new SP.BasePermissions();\n      var permissions = props.Permissions || [];\n      for (var i = 0; i < permissions.length; i++) {\n        // Set the flag\n        basePermissions.set(permissions[i]);\n      }\n      // Create the role definition\n      var roleDefInfo = new SP.RoleDefinitionCreationInformation();\n      roleDefInfo.set_basePermissions(basePermissions);\n      roleDefInfo.set_description(props.Description);\n      roleDefInfo.set_name(props.Name);\n      roleDefInfo.set_order(props.Order);\n      // Add the role definition\n      var roleDef_1 = ctx.get_site().get_rootWeb().get_roleDefinitions().add(roleDefInfo);\n      ctx.load(roleDef_1);\n      // Execute the request\n      ctx.executeQueryAsync(function () {\n        // Get the role definition\n        (0, lib_1.Site)(props.WebUrl).RootWeb().RoleDefinitions().getById(roleDef_1.get_id()).execute(function (roleDef) {\n          // Resolve the request\n          resolve(roleDef);\n        }, reject);\n      }, reject);\n    } else {\n      // Reject the request\n      reject("The \'SP\' core library is not available.");\n    }\n  });\n};\nexports.addPermissionLevel = addPermissionLevel;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/addPermissionLevel.js?')},"./build/helper/methods/addScriptEditorWebPart.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.addScriptEditorWebPart = void 0;\nvar webpart_1 = __webpack_require__(/*! ../webpart */ "./build/helper/webpart.js");\n// Method to add a script editor webpart to the page\nvar addScriptEditorWebPart = function addScriptEditorWebPart(url, wpProps) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the current context\n    var context = SP.ClientContext.get_current();\n    // Get the webpart manager for the page\n    var page = context.get_web().getFileByServerRelativeUrl(url);\n    var wpMgr = page.getLimitedWebPartManager(SP.WebParts.PersonalizationScope.shared);\n    // Create the webpart\n    var wp = wpMgr.importWebPart(webpart_1.WebPart.generateScriptEditorXML(wpProps)).get_webPart();\n    // Add the webpart to the page\n    wpMgr.addWebPart(wp, wpProps.zone || "", wpProps.index || 0);\n    // Save the page\n    context.load(wp);\n    context.executeQueryAsync(\n    // Success\n    function () {\n      // Resolve the promise\n      resolve();\n    },\n    // Error\n    function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      // Reject the promise\n      reject(args[1] ? args[1].get_message() : "");\n    });\n  });\n};\nexports.addScriptEditorWebPart = addScriptEditorWebPart;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/addScriptEditorWebPart.js?')},"./build/helper/methods/copyPermissionLevel.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.copyPermissionLevel = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\nvar sptypes_1 = __webpack_require__(/*! ../../sptypes */ "./build/sptypes/index.js");\n/**\n * Copies a permission level to the current or specified web.\n */\nvar copyPermissionLevel = function copyPermissionLevel(props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Ensure the base permissions exist\n    if (SP && SP.BasePermissions) {\n      // Set the context and get the role definitions\n      var ctx_1 = props.WebUrl ? new SP.ClientContext(props.WebUrl) : SP.ClientContext.get_current();\n      // Get the base permission\n      var basePerm = ctx_1.get_site().get_rootWeb().get_roleDefinitions().getByName(props.BasePermission);\n      ctx_1.load(basePerm);\n      ctx_1.executeQueryAsync(\n      // Success\n      function () {\n        // Copy the base permissions\n        var basePermissions = basePerm.get_basePermissions();\n        var permissions = new SP.BasePermissions();\n        var removePermissions = props.RemovePermissions || [];\n        for (var key in sptypes_1.SPTypes.BasePermissionTypes) {\n          var permission = sptypes_1.SPTypes.BasePermissionTypes[key];\n          // See if the base permission has this\n          if (basePermissions.has(permission) && removePermissions.indexOf(permission) < 0) {\n            // Set the permission\n            permissions.set(permission);\n          }\n        }\n        // Parse the custom permissions to add\n        var newPermissions = props.AddPermissions || [];\n        for (var i = 0; i < newPermissions.length; i++) {\n          // Set the flag\n          permissions.set(newPermissions[i]);\n        }\n        // Create the role definition\n        var roleDefInfo = new SP.RoleDefinitionCreationInformation();\n        roleDefInfo.set_basePermissions(permissions);\n        roleDefInfo.set_description(props.Description);\n        roleDefInfo.set_name(props.Name);\n        roleDefInfo.set_order(props.Order);\n        // Add the role definition\n        var roleDef = ctx_1.get_site().get_rootWeb().get_roleDefinitions().add(roleDefInfo);\n        ctx_1.load(roleDef);\n        // Execute the request\n        ctx_1.executeQueryAsync(function () {\n          // Get the role definition\n          (0, lib_1.Site)(props.WebUrl).RootWeb().RoleDefinitions().getById(roleDef.get_id()).execute(function (roleDef) {\n            // Resolve the request\n            resolve(roleDef);\n          }, reject);\n        }, reject);\n      },\n      // Error\n      function () {\n        // Reject the request\n        reject("Permission not found in site: " + props.WebUrl);\n      });\n    } else {\n      // Reject the request\n      reject("The \'SP\' core library is not available.");\n    }\n  });\n};\nexports.copyPermissionLevel = copyPermissionLevel;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/copyPermissionLevel.js?')},"./build/helper/methods/createContentType.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.createContentType = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\n/**\n * Creates a content type in a web or specified list.\n * @param ctInfo - The content type information.\n * @param parentInfo - The parent content type id and url containing it.\n * @param webUrl - The relative url to create the content type in.\n * @param listName - The list name to add the content type to. If blank, it will add it to the web content types.\n */\nvar createContentType = function createContentType(props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // See if we are targeting a list\n    if (props.listName) {\n      // Process the request\n      lib_1.Web.processQuery(ListTemplate(props.listName, props.ctInfo, props.parentContentTypeId), props.webUrl).then(function () {\n        // Get the content type and resolve the request\n        (0, lib_1.Web)(props.webUrl).Lists(props.listName).ContentTypes().query({\n          Filter: "Name eq \'" + props.ctInfo.Name + "\'"\n        }).execute(function (cts) {\n          // Resolve the request\n          resolve(cts.results[0]);\n        }, reject);\n      }, reject);\n    } else {\n      // Process the request\n      lib_1.Web.processQuery(WebTemplate(props.ctInfo, props.parentContentTypeId), props.webUrl).then(function () {\n        // Get the content type and resolve the request\n        (0, lib_1.Web)(props.webUrl).ContentTypes().query({\n          Filter: "Name eq \'" + props.ctInfo.Name + "\'"\n        }).execute(function (cts) {\n          // Resolve the request\n          resolve(cts.results[0]);\n        }, reject);\n      }, reject);\n    }\n  });\n};\nexports.createContentType = createContentType;\n// List Template\nvar ListTemplate = function ListTemplate(listName, ctInfo, parentId) {\n  if (parentId === void 0) {\n    parentId = "0x01";\n  }\n  return "<Request xmlns=\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\" SchemaVersion=\\"15.0.0.0\\" LibraryVersion=\\"16.0.0.0\\" ApplicationName=\\"Javascript Library\\">\\n        <Actions>\\n            <ObjectPath Id=\\"1\\" ObjectPathId=\\"0\\" />\\n            <ObjectPath Id=\\"3\\" ObjectPathId=\\"2\\" />\\n            <ObjectPath Id=\\"5\\" ObjectPathId=\\"4\\" />\\n            <ObjectPath Id=\\"7\\" ObjectPathId=\\"6\\" />\\n            <ObjectPath Id=\\"9\\" ObjectPathId=\\"8\\" />\\n            <ObjectPath Id=\\"11\\" ObjectPathId=\\"10\\" />\\n            <ObjectIdentityQuery Id=\\"12\\" ObjectPathId=\\"10\\" />\\n            <ObjectPath Id=\\"14\\" ObjectPathId=\\"13\\" />\\n            <ObjectPath Id=\\"16\\" ObjectPathId=\\"15\\" />\\n            <ObjectIdentityQuery Id=\\"17\\" ObjectPathId=\\"15\\" />\\n            <Query Id=\\"18\\" ObjectPathId=\\"13\\">\\n                <Query SelectAllProperties=\\"true\\">\\n                    <Properties />\\n                </Query>\\n                <ChildItemQuery SelectAllProperties=\\"true\\">\\n                    <Properties />\\n                </ChildItemQuery>\\n            </Query>\\n        </Actions>\\n        <ObjectPaths>\\n            <StaticProperty Id=\\"0\\" TypeId=\\"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\\" Name=\\"Current\\" />\\n            <Property Id=\\"2\\" ParentId=\\"0\\" Name=\\"Web\\" />\\n            <Property Id=\\"4\\" ParentId=\\"2\\" Name=\\"ContentTypes\\" />\\n                <Method Id=\\"6\\" ParentId=\\"4\\" Name=\\"GetById\\">\\n                    <Parameters>\\n                        <Parameter Type=\\"String\\">".concat(parentId, "</Parameter>\\n                    </Parameters>\\n                </Method>\\n            <Property Id=\\"8\\" ParentId=\\"2\\" Name=\\"Lists\\" />\\n            <Method Id=\\"10\\" ParentId=\\"8\\" Name=\\"GetByTitle\\">\\n                <Parameters>\\n                    <Parameter Type=\\"String\\">").concat(listName, "</Parameter>\\n                </Parameters>\\n            </Method>\\n            <Property Id=\\"13\\" ParentId=\\"10\\" Name=\\"ContentTypes\\" />\\n            <Method Id=\\"15\\" ParentId=\\"13\\" Name=\\"Add\\">\\n                <Parameters>\\n                    <Parameter TypeId=\\"{168f3091-4554-4f14-8866-b20d48e45b54}\\">\\n                        <Property Name=\\"Description\\" Type=\\"").concat(ctInfo.Description ? "String" : "Null", "\\">").concat(ctInfo.Description || "", "</Property>\\n                        <Property Name=\\"Group\\" Type=\\"").concat(ctInfo.Group ? "String" : "Null", "\\">").concat(ctInfo.Group || "", "</Property>\\n                        <Property Name=\\"Id\\" Type=\\"Null\\" />\\n                        <Property Name=\\"Name\\" Type=\\"String\\">").concat(ctInfo.Name || "", "</Property>\\n                        <Property Name=\\"ParentContentType\\" ObjectPathId=\\"6\\" />\\n                    </Parameter>\\n                </Parameters>\\n            </Method>\\n        </ObjectPaths>\\n    </Request>");\n};\n// Web Template\nvar WebTemplate = function WebTemplate(ctInfo, parentId) {\n  if (parentId === void 0) {\n    parentId = "0x01";\n  }\n  return "<Request xmlns=\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\" SchemaVersion=\\"15.0.0.0\\" LibraryVersion=\\"16.0.0.0\\" ApplicationName=\\"Javascript Library\\">\\n        <Actions>\\n            <ObjectPath Id=\\"26\\" ObjectPathId=\\"25\\" />\\n            <ObjectIdentityQuery Id=\\"27\\" ObjectPathId=\\"25\\" />\\n            <Query Id=\\"28\\" ObjectPathId=\\"4\\">\\n                <Query SelectAllProperties=\\"true\\">\\n                    <Properties />\\n                </Query>\\n                <ChildItemQuery SelectAllProperties=\\"true\\">\\n                    <Properties />\\n                </ChildItemQuery>\\n            </Query>\\n        </Actions>\\n        <ObjectPaths>\\n            <Property Id=\\"4\\" ParentId=\\"2\\" Name=\\"ContentTypes\\" />\\n            <Method Id=\\"25\\" ParentId=\\"4\\" Name=\\"Add\\">\\n                <Parameters>\\n                    <Parameter TypeId=\\"{168f3091-4554-4f14-8866-b20d48e45b54}\\">\\n                        <Property Name=\\"Description\\" Type=\\"".concat(ctInfo.Description ? "String" : "Null", "\\">").concat(ctInfo.Description || "", "</Property>\\n                        <Property Name=\\"Group\\" Type=\\"").concat(ctInfo.Group ? "String" : "Null", "\\">").concat(ctInfo.Group || "", "</Property>\\n                        <Property Name=\\"Id\\" Type=\\"Null\\" />\\n                        <Property Name=\\"Name\\" Type=\\"String\\">").concat(ctInfo.Name || "", "</Property>\\n                        <Property Name=\\"ParentContentType\\" ObjectPathId=\\"6\\" />\\n                    </Parameter>\\n                </Parameters>\\n            </Method>\\n            <Property Id=\\"2\\" ParentId=\\"0\\" Name=\\"Web\\" />\\n            <Method Id=\\"6\\" ParentId=\\"4\\" Name=\\"GetById\\">\\n                <Parameters>\\n                    <Parameter Type=\\"String\\">").concat(parentId, "</Parameter>\\n                </Parameters>\\n            </Method>\\n            <StaticProperty Id=\\"0\\" TypeId=\\"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\\" Name=\\"Current\\" />\\n        </ObjectPaths>\\n    </Request>");\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/createContentType.js?')},"./build/helper/methods/createDocSet.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.createDocSet = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\nvar request_1 = __webpack_require__(/*! ./request */ "./build/helper/methods/request.js");\n/**\n * Creates a document set item.\n * @param name - The name of the document set folder to create.\n * @param listName - The name of the document set library.\n * @param webUrl - The url of the web containing the document set library.\n */\nvar createDocSet = function createDocSet(name, listName, webUrl) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the document set\'s root folder\n    (0, lib_1.Web)(webUrl).Lists(listName).query({\n      Expand: ["ContentTypes", "ParentWeb", "RootFolder"]\n    }).execute(function (list) {\n      // Parse the content types\n      var ctId = "0x0120D520";\n      for (var i = 0; i < list.ContentTypes.results.length; i++) {\n        // See if this is the document set content type\n        if (list.ContentTypes.results[i].StringId.indexOf(ctId) == 0) {\n          // Set the content type id\n          ctId = list.ContentTypes.results[i].StringId;\n          break;\n        }\n      }\n      // Create the document set item\n      (0, request_1.request)({\n        method: "POST",\n        url: list.ParentWebUrl + "/_vti_bin/listdata.svc/" + list.Title.replace(/ /g, ""),\n        headers: {\n          Accept: "application/json;odata=verbose",\n          "Content-Type": "application/json;odata=verbose",\n          Slug: list.RootFolder.ServerRelativeUrl + "/" + name + "|" + ctId,\n          "X-Requested-With": "XMLHttpRequest"\n        },\n        data: {\n          Title: name,\n          Path: list.RootFolder.ServerRelativeUrl\n        }\n      }).then(function (response) {\n        // See if the request was successful\n        if (response.d && response.d.Id > 0) {\n          // Get the document set item and resolve the promise\n          (0, lib_1.Web)(webUrl).Lists(listName).Items(response.d.Id).execute(resolve);\n        } else {\n          // Reject the promise\n          reject(response["response"]);\n        }\n      });\n    }, reject);\n  });\n};\nexports.createDocSet = createDocSet;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/createDocSet.js?')},"./build/helper/methods/getCurrentTheme.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.getCurrentTheme = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\n/**\n * Determines if the user has permissions, based on the permission kind value\n */\nvar getCurrentTheme = function getCurrentTheme() {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Wait for the modern theme information to be loaded\n    waitForModernTheme().then(\n    // Success\n    function () {\n      // Resolve the request with the theme information\n      resolve(window["__themeState__"].theme);\n    },\n    // Error\n    function () {\n      // Get the current theme info\n      (0, lib_1.Web)().Lists("Composed Looks").Items().query({\n        Filter: "DisplayOrder eq 0 or Title eq \'Office\'",\n        OrderBy: ["DisplayOrder"],\n        Select: ["DisplayOrder", "MasterPageUrl", "ThemeUrl", "Title"]\n      }).execute(function (items) {\n        var currentItem = items.results[0];\n        var defaultItem = items.results[1];\n        // See if the current theme info exists\n        if (currentItem && currentItem["ThemeUrl"]) {\n          // Get the theme information\n          getThemeInfo(currentItem["ThemeUrl"].Url).then(resolve, reject);\n        } else if (defaultItem && defaultItem["ThemeUrl"]) {\n          // Get the theme information\n          getThemeInfo(defaultItem["ThemeUrl"].Url).then(resolve, reject);\n        } else {\n          // Unable to determine the theme\n          reject();\n        }\n      }, reject);\n    });\n  });\n};\nexports.getCurrentTheme = getCurrentTheme;\n// Gets the theme information for a color palette\nvar getThemeInfo = function getThemeInfo(url) {\n  if (url === void 0) {\n    url = "";\n  }\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    var themeInfo = {};\n    // Ensure the url exists\n    if (url.length == 0) {\n      resolve(themeInfo);\n      return;\n    }\n    // Get the file item\n    (0, lib_1.Site)().RootWeb().getFileByUrl(url).execute(function (file) {\n      // Read the contents\n      file.content().execute(function (contents) {\n        // Convert the xml\n        var parser = new DOMParser();\n        var xmlDoc = parser.parseFromString(String.fromCharCode.apply(null, new Uint8Array(contents)), "text/xml");\n        // Get the colors and parse them\n        var colors = xmlDoc.getElementsByTagName("s:color");\n        for (var i = 0; i < colors.length; i++) {\n          var color = colors[i];\n          var key = color.getAttribute("name");\n          var value = color.getAttribute("value");\n          // See if the length is > 6 characters\n          if (value.length > 6) {\n            // Convert the value\n            value = value.slice(2, 8) + value[0] + value[1];\n          }\n          // Add the color information\n          themeInfo[key] = "#" + value;\n        }\n        // Resolve the request\n        resolve(themeInfo);\n      }, reject);\n    }, reject);\n  });\n};\n// Waits for the modern theme information to be loaded\nvar waitForModernTheme = function waitForModernTheme() {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    var counter = 0;\n    var maxAttempts = 100;\n    // See if the modern theme exists\n    if (window["__themeState__"] != null && window["__themeState__"].theme != null) {\n      // Theme is loaded\n      resolve();\n      return;\n    }\n    // Wait for the theme to be loaded\n    var loopId = setInterval(function () {\n      // See if the modern theme exists\n      if (window["__themeState__"] != null && window["__themeState__"].theme != null) {\n        // Stop the loop\n        clearInterval(loopId);\n        // Resolve the request\n        resolve();\n      }\n      // Else, see if we have hit the max attempts\n      else if (++counter >= maxAttempts) {\n        // Stop the loop\n        clearInterval(loopId);\n        // Reject the request\n        reject();\n      }\n    }, 50);\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/getCurrentTheme.js?')},"./build/helper/methods/hasPermissions.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.hasPermissions = void 0;\n/**\n * Determines if the user has permissions, based on the permission kind value\n */\nvar hasPermissions = function hasPermissions(permissionMask, permissions) {\n  if (permissions === void 0) {\n    permissions = [];\n  }\n  var hasPermissions = true;\n  // Set the permissions\n  var requestedPermissions = typeof permissions === "number" ? [permissions] : permissions;\n  // Parse the requested permissions\n  for (var i = 0; i < requestedPermissions.length; i++) {\n    var permission = requestedPermissions[i];\n    var hasPermission = false;\n    // Use the logic from SP.js\n    if (permission === 65) {\n      hasPermission = (permissionMask.High & 32767) === 32767 && permissionMask.Low === 65535;\n    } else {\n      var a = permission - 1;\n      var b = 1;\n      if (a >= 0 && a < 32) {\n        b = b << a;\n        hasPermission = 0 !== (permissionMask.Low & b);\n      } else if (a >= 32 && a < 64) {\n        b = b << a - 32;\n        hasPermission = 0 !== (permissionMask.High & b);\n      } else {\n        hasPermission = false;\n      }\n    }\n    // See if they don\'t have permission\n    if (!hasPermission) {\n      // Update the flag\n      hasPermissions = false;\n      break;\n    }\n  }\n  // Return the result\n  return hasPermissions;\n};\nexports.hasPermissions = hasPermissions;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/hasPermissions.js?')},"./build/helper/methods/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./addContentEditorWebPart */ "./build/helper/methods/addContentEditorWebPart.js"), exports);\n__exportStar(__webpack_require__(/*! ./addPermissionLevel */ "./build/helper/methods/addPermissionLevel.js"), exports);\n__exportStar(__webpack_require__(/*! ./addScriptEditorWebPart */ "./build/helper/methods/addScriptEditorWebPart.js"), exports);\n__exportStar(__webpack_require__(/*! ./copyPermissionLevel */ "./build/helper/methods/copyPermissionLevel.js"), exports);\n__exportStar(__webpack_require__(/*! ./createContentType */ "./build/helper/methods/createContentType.js"), exports);\n__exportStar(__webpack_require__(/*! ./createDocSet */ "./build/helper/methods/createDocSet.js"), exports);\n__exportStar(__webpack_require__(/*! ./getCurrentTheme */ "./build/helper/methods/getCurrentTheme.js"), exports);\n__exportStar(__webpack_require__(/*! ./hasPermissions */ "./build/helper/methods/hasPermissions.js"), exports);\n__exportStar(__webpack_require__(/*! ./loadSPCore */ "./build/helper/methods/loadSPCore.js"), exports);\n__exportStar(__webpack_require__(/*! ./parse */ "./build/helper/methods/parse.js"), exports);\n__exportStar(__webpack_require__(/*! ./request */ "./build/helper/methods/request.js"), exports);\n__exportStar(__webpack_require__(/*! ./setContentTypeFields */ "./build/helper/methods/setContentTypeFields.js"), exports);\n__exportStar(__webpack_require__(/*! ./setGroupOwner */ "./build/helper/methods/setGroupOwner.js"), exports);\n__exportStar(__webpack_require__(/*! ./setWebProperty */ "./build/helper/methods/setWebProperty.js"), exports);\n__exportStar(__webpack_require__(/*! ./stringify */ "./build/helper/methods/stringify.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/index.js?')},"./build/helper/methods/loadSPCore.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.loadSPCore = void 0;\nvar executor_1 = __webpack_require__(/*! ../executor */ "./build/helper/executor.js");\n/**\n * Loads the core SharePoint JavaScript library for JSOM.\n */\nvar loadSPCore = function loadSPCore(additionalLibs) {\n  // Return a promise\n  return new Promise(function (resolve) {\n    // Define the core libraries to load\n    var libs = ["init", "MicrosoftAjax", "SP.Runtime", "SP", "SP.Init"];\n    // See if we are loading additional libraries\n    if (additionalLibs && additionalLibs.length > 0) {\n      // Append the libs\n      libs = libs.concat(additionalLibs);\n    }\n    // Parse the libraries\n    var counter = 0;\n    (0, executor_1.Executor)(libs, function (libName) {\n      // Return a promise\n      return new Promise(function (resolve) {\n        // See if a script already exists\n        if (document.querySelector("script[title=\'" + libName + "\']") == null) {\n          // Log\n          console.debug("[gd-sprest] Loading the core library: " + libName);\n          // Create the script element to load the library\n          var elScript_1 = document.createElement("script");\n          elScript_1.title = libName;\n          elScript_1.src = document.location.origin + "/_layouts/15/" + libName + ".js";\n          // Wait for the previous library to load\n          setTimeout(function () {\n            // Load the script\n            document.head.appendChild(elScript_1);\n            // Resolve the request\n            resolve(null);\n          }, 10 * counter++);\n        } else {\n          // Log\n          console.debug("[gd-sprest] Core library already loaded: " + libName);\n        }\n      }).then(function () {\n        // Resolve the request after all the libraries have been requested\n        resolve();\n      });\n    });\n  });\n};\nexports.loadSPCore = loadSPCore;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/loadSPCore.js?')},"./build/helper/methods/parse.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.parse = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Convert a JSON string to a base object\n */\nvar parse = function parse(jsonString) {\n  // Try to parse the string\n  try {\n    var obj = JSON.parse(jsonString);\n    // Create a base object\n    var base = new utils_1.Base(obj.props);\n    // Set the properties\n    base.response = obj.response;\n    base.status = obj.status;\n    base.targetInfo = obj.targetInfo;\n    // Update the object\n    utils_1.Request.updateDataObject(base, false);\n    // Return the base object\n    return base;\n  } catch (_a) {}\n  return null;\n};\nexports.parse = parse;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/parse.js?')},"./build/helper/methods/request.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.request = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * XML HTTP Request\n */\nvar request = function request(props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Execute the request and resolve the promise\n    new utils_1.Base({\n      method: props.method || "GET",\n      url: props.url,\n      requestHeader: props.headers,\n      data: props.data\n    }).execute(resolve, reject);\n  });\n};\nexports.request = request;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/request.js?')},"./build/helper/methods/setContentTypeFields.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.setContentTypeFields = void 0;\nvar lib_1 = __webpack_require__(/*! ../../lib */ "./build/lib/index.js");\n/**\n * Sets the field links associated with a content type.\n * @param ctInfo - The content type information\n */\nvar setContentTypeFields = function setContentTypeFields(ctInfo) {\n  // Clears the content type field links\n  var clearLinks = function clearLinks() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the links\n      getLinks().then(function (fieldLinks) {\n        var skipFields = [];\n        // See if we need to remove any fields\n        if (fieldLinks.length > 0) {\n          var updateFl = false;\n          // Set the context\n          var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\n          // Get the source\n          var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\n          // Get the content type\n          var contentType = src.get_contentTypes().getById(ctInfo.id);\n          // Parse the content type field links\n          for (var i = 0; i < fieldLinks.length; i++) {\n            var fieldLink = fieldLinks[i];\n            var removeFl = true;\n            var _loop_1 = function _loop_1(j) {\n              var field = ctInfo.fields[j];\n              var fieldName = typeof field === "string" ? field : field.Name || field.FieldInternalName;\n              // See if we are keeping this field\n              if (fieldName == fieldLink.Name) {\n                var propUpdateFl_1 = false;\n                // Checks if an update is needed\n                var updateField = function updateField(oldValue, newValue) {\n                  // Ensure a value exists\n                  if (newValue == null) {\n                    return;\n                  }\n                  // See if an update is needed\n                  if (oldValue == newValue) {\n                    return;\n                  }\n                  // Set the flag\n                  propUpdateFl_1 = true;\n                };\n                // Update the properties\n                updateField(fieldLink.DisplayName, field.DisplayName);\n                updateField(fieldLink.Hidden, field.Hidden);\n                updateField(fieldLink.ReadOnly, field.ReadOnly);\n                updateField(fieldLink.Required, field.Required);\n                updateField(fieldLink.ShowInDisplayForm, field.ShowInDisplayForm);\n                // See if an update to the property is needed\n                if (!propUpdateFl_1) {\n                  // Set the flag to not remove this field reference\n                  removeFl = false;\n                  // Add the field to skip\n                  skipFields.push(fieldLink);\n                }\n                return "break";\n              }\n            };\n            // Parse the fields to add\n            for (var j = 0; j < ctInfo.fields.length; j++) {\n              var state_1 = _loop_1(j);\n              if (state_1 === "break") break;\n            }\n            // See if we are removing the field\n            if (removeFl) {\n              // Remove the field link\n              contentType.get_fieldLinks().getById(fieldLink.Id).deleteObject();\n              // Set the flag\n              updateFl = true;\n              // Log\n              console.log("[gd-sprest][Set Content Type Fields] Removing the field link: " + fieldLink.Name);\n            }\n          }\n          // See if an update is required\n          if (updateFl) {\n            // Update the content type\n            contentType.update(false);\n            // Execute the request\n            ctx.executeQueryAsync(\n            // Success\n            function () {\n              // Log\n              console.log("[gd-sprest][Set Content Type Fields] Removed the field links successfully.");\n              // Resolve the request\n              resolve(skipFields);\n            },\n            // Error\n            function (sender, args) {\n              // Log\n              console.log("[gd-sprest][Set Content Type Fields] Error removing the field links.");\n              // Reject the request\n              reject();\n            });\n          } else {\n            // Log\n            console.log("[gd-sprest][Set Content Type Fields] No fields need to be removed.");\n            // Resolve the request\n            resolve(skipFields);\n          }\n        } else {\n          // Resolve the request\n          resolve(skipFields);\n        }\n      }, reject);\n    });\n  };\n  // Creates the field links\n  var createLinks = function createLinks(skipFields) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Set the context\n      var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\n      // Get the source\n      var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\n      var skipField = function skipField(fieldName, fields) {\n        for (var i = 0; i < fields.length; i++) {\n          // See if we are skipping this field\n          if (fields[i].Name == fieldName) {\n            return true;\n          }\n        }\n      };\n      // Parse the fields to add\n      var fields = [];\n      for (var i = 0; i < ctInfo.fields.length; i++) {\n        var fieldInfo = ctInfo.fields[i];\n        var fieldName = typeof fieldInfo === "string" ? fieldInfo : fieldInfo.Name || fieldInfo.FieldInternalName;\n        // See if we are skipping this field\n        if (skipField(fieldName, skipFields)) {\n          continue;\n        }\n        // Load the field\n        var field = src.get_fields().getByInternalNameOrTitle(fieldName);\n        ctx.load(field);\n        // Log\n        console.log("[gd-sprest][Set Content Type Fields] Adding the field link: " + fieldName);\n        // Save a reference to this field\n        fields.push({\n          ref: field,\n          info: fieldInfo\n        });\n      }\n      // See if an update is needed\n      if (fields.length > 0) {\n        // Execute the request\n        ctx.executeQueryAsync(function () {\n          // Get the content type\n          var contentType = src.get_contentTypes().getById(ctInfo.id);\n          ctx.load(contentType);\n          // Parse the fields\n          for (var i = 0; i < fields.length; i++) {\n            var field = fields[i];\n            /**\n             * The field link set_[property] methods don\'t seem to work. Setting the field information seems to be the only way.\n             * The read only property is the only one that doesn\'t seem to work.\n             */\n            // See if the field ref has properties to update\n            if (typeof field.info !== "string") {\n              // Update the field properties\n              field.info.DisplayName != null ? field.ref.set_title(field.info.DisplayName) : null;\n              field.info.Hidden != null ? field.ref.set_hidden(field.info.Hidden) : null;\n              field.info.ReadOnly != null ? field.ref.set_readOnlyField(field.info.ReadOnly) : null;\n              field.info.Required != null ? field.ref.set_required(field.info.Required) : null;\n              field.info.ShowInDisplayForm != null ? field.ref.setShowInDisplayForm(field.info.ShowInDisplayForm) : null;\n            }\n            // Create the field link\n            var fieldLink = new SP.FieldLinkCreationInformation();\n            fieldLink.set_field(field.ref);\n            // Add the field link to the content type\n            contentType.get_fieldLinks().add(fieldLink);\n          }\n          // Update the content type\n          contentType.update(false);\n          // Execute the request\n          ctx.executeQueryAsync(\n          // Success\n          function () {\n            // Log\n            console.log("[gd-sprest][Set Content Type Fields] Added the field links successfully.");\n            // Resolve the request\n            resolve();\n          },\n          // Error\n          function (sender, args) {\n            // Log\n            console.log("[gd-sprest][Set Content Type Fields] Error adding field references.", args.get_message());\n            // Reject the request\n            reject();\n          });\n        }, function (sender, args) {\n          // Log\n          console.log("[gd-sprest][Set Content Type Fields] Error getting field references.", args.get_message());\n          // Resolve the request\n          resolve();\n        });\n      } else {\n        // Log\n        console.log("[gd-sprest][Set Content Type Fields] No fields need to be added.");\n        // Resolve the request\n        resolve();\n      }\n    });\n  };\n  // Gets the content type field links\n  var getLinks = function getLinks() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var ct = null;\n      // See if list name exists\n      if (ctInfo.listName) {\n        // Get the list content type\n        ct = (0, lib_1.Web)(ctInfo.webUrl).Lists(ctInfo.listName).ContentTypes(ctInfo.id);\n      } else {\n        // Get the content type\n        ct = (0, lib_1.Web)(ctInfo.webUrl).ContentTypes(ctInfo.id);\n      }\n      // Query the fields\n      ct.query({\n        Expand: ["Fields", "FieldLinks"],\n        Select: ["FieldLinks/DisplayName", "FieldLinks/Id", "FieldLinks/Name", "FieldLinks/Required", "FieldLinks/ReadOnly", "FieldLinks/ShowInDisplayForm", "Fields/InternalName", "Fields/IsDependentLookup"]\n      }).execute(function (ct) {\n        var fieldRefs = [];\n        // Associated lookup fields error when removing from content types\n        // They may get removed when removing the main lookup field\n        // Parse the field links\n        for (var i = 0; i < ct.FieldLinks.results.length; i++) {\n          var addField = true;\n          var fieldLink = ct.FieldLinks.results[i];\n          // Find the field\n          for (var j = 0; j < ct.Fields.results.length; j++) {\n            var field = ct.Fields.results[j];\n            // See if this is the target field\n            if (field.InternalName == fieldLink.Name) {\n              // See if this is an associated lookup field\n              if (field.IsDependentLookup) {\n                // Set the flag\n                addField = false;\n              }\n              // Break from the loop\n              break;\n            }\n          }\n          // Add the field link\n          if (addField) {\n            fieldRefs.push(fieldLink);\n          }\n        }\n        // Resolve the request\n        resolve(fieldRefs);\n      }, reject);\n      ct.FieldLinks().query({\n        Select: ["DisplayName", "Id", "Name", "Required", "ReadOnly", "ShowInDisplayForm"]\n      }).execute(function (fieldLinks) {}, reject);\n    });\n  };\n  // Set the order of the field references\n  var setOrder = function setOrder() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Set the context\n      var ctx = ctInfo.webUrl ? new SP.ClientContext(ctInfo.webUrl) : new SP.ClientContext(lib_1.ContextInfo.webServerRelativeUrl);\n      // Get the source\n      var src = ctInfo.listName ? ctx.get_web().get_lists().getByTitle(ctInfo.listName) : ctx.get_web();\n      // Get the content type\n      var contentType = src.get_contentTypes().getById(ctInfo.id);\n      // Parse the fields to add\n      var fieldNames = [];\n      for (var i = 0; i < ctInfo.fields.length; i++) {\n        var fieldInfo = ctInfo.fields[i];\n        var fieldName = typeof fieldInfo === "string" ? fieldInfo : fieldInfo.Name || fieldInfo.FieldInternalName;\n        // Add the field name\n        fieldNames.push(fieldName);\n      }\n      // Reorder the content type\n      contentType.get_fieldLinks().reorder(fieldNames);\n      // Update the content type\n      contentType.update(ctInfo.listName ? false : true);\n      // Execute the request\n      ctx.executeQueryAsync(\n      // Success\n      function () {\n        // Log\n        console.log("[gd-sprest][Set Content Type Fields] Updated the field order successfully.");\n        // Resolve the request\n        resolve();\n      },\n      // Error\n      function (sender, args) {\n        // Log\n        console.log("[gd-sprest][Set Content Type Fields] Error updating the field order.", args.get_message());\n        // Reject the request\n        reject();\n      });\n    });\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Ensure the SP object exists\n    if (window["SP"]) {\n      // Ensure fields exist\n      if (ctInfo.fields) {\n        // Clear the links\n        clearLinks().then(function (skipFields) {\n          // Create the links\n          createLinks(skipFields).then(function () {\n            // Set the field order\n            setOrder().then(resolve, reject);\n          }, reject);\n        }, reject);\n      } else {\n        // Resolve the promise\n        resolve();\n      }\n    } else {\n      // Resolve the request\n      // This will cause issues in the SPConfig class\n      resolve();\n    }\n  });\n};\nexports.setContentTypeFields = setContentTypeFields;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/setContentTypeFields.js?')},"./build/helper/methods/setGroupOwner.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.setGroupOwner = void 0;\n/**\n * Sets the group owner\n * This uses JSOM to set a site group owner\'s property to another group. You can only set the owner to a user, using the REST API.\n */\nvar setGroupOwner = function setGroupOwner(groupName, ownerName, siteUrl) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the site groups\n    var context = siteUrl ? new SP.ClientContext(siteUrl) : SP.ClientContext.get_current();\n    var siteGroups = context.get_web().get_siteGroups();\n    // Get the groups\n    var group = siteGroups.getByName(groupName);\n    var owner = siteGroups.getByName(ownerName);\n    // Set the owner\n    group.set_owner(owner);\n    // Save the changes\n    group.update();\n    // Execute the request\n    context.executeQueryAsync(resolve, reject);\n  });\n};\nexports.setGroupOwner = setGroupOwner;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/setGroupOwner.js?')},"./build/helper/methods/setWebProperty.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.setWebProperty = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ../../lib/contextInfo */ "./build/lib/contextInfo.js");\nvar web_1 = __webpack_require__(/*! ../../lib/web */ "./build/lib/web.js");\n/**\n * Adds or updates a key/value pair for a web\'s property bag\n * This uses JSOM to set a web\'s property. The REST API doesn\'t support this at the moment.\n */\nvar setWebProperty = function setWebProperty(key, value, indexed, siteUrl) {\n  var encodedKey = "vti_x005f_indexedpropertykeys";\n  var decodedKey = "vti_indexedpropertykeys";\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Gets the request digest value of the web\n    var getRequestDigest = function getRequestDigest() {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // See if the site url exists\n        if (siteUrl) {\n          contextInfo_1.ContextInfo.getWeb(siteUrl).execute(function (context) {\n            // Resolve the request\n            resolve(context.GetContextWebInformation.FormDigestValue);\n          }, reject);\n        } else {\n          // Resolve the request w/ the default digest value\n          resolve(contextInfo_1.ContextInfo.formDigestValue);\n        }\n      });\n    };\n    // Get the request digest for the web\n    getRequestDigest().then(function (requestDigest) {\n      // Convert the key to a base64 string\n      var idxKeyValue = "";\n      for (var i = 0; i < key.length; i++) {\n        idxKeyValue += key[i] + "\\x00";\n      }\n      idxKeyValue = btoa(idxKeyValue);\n      // See if a value exists\n      if (value) {\n        // Add the property\n        (0, web_1.Web)(siteUrl, {\n          requestDigest: requestDigest\n        }).AllProperties().add(key, value).execute(function () {\n          // See if we are indexing the property\n          if (indexed) {\n            // Get the properties\n            (0, web_1.Web)(siteUrl, {\n              requestDigest: requestDigest\n            }).AllProperties().execute(function (propBag) {\n              // See if the indexed keys doesn\'t contain this value\n              var idxKeys = propBag[encodedKey] || "";\n              if (idxKeys.indexOf(idxKeyValue) < 0) {\n                // Append the value\n                (0, web_1.Web)(siteUrl, {\n                  requestDigest: requestDigest\n                }).AllProperties().add(decodedKey, idxKeys + idxKeyValue + "|").execute(function () {\n                  // Resolve the request\n                  resolve();\n                }, function () {\n                  // Reject the request\n                  reject("Error setting the indexed keys property.");\n                });\n              } else {\n                // Resolve the request\n                resolve();\n              }\n            });\n          } else {\n            // Resolve the request\n            resolve();\n          }\n        }, function () {\n          // Reject the request\n          reject("Error adding the web property.");\n        });\n      } else {\n        // Remove the property\n        (0, web_1.Web)(siteUrl, {\n          requestDigest: requestDigest\n        }).AllProperties().remove(key).execute(function () {\n          // See if we are indexing the property\n          if (indexed) {\n            // Get the properties\n            (0, web_1.Web)(siteUrl, {\n              requestDigest: requestDigest\n            }).AllProperties().execute(function (propBag) {\n              // See if the indexed keys contains the value\n              var idxKeys = propBag[encodedKey] || "";\n              if (idxKeys.indexOf(idxKeyValue) >= 0) {\n                // Remove the value\n                (0, web_1.Web)(siteUrl, {\n                  requestDigest: requestDigest\n                }).AllProperties().add(decodedKey, idxKeys.replace(idxKeyValue + "|", "")).execute(function () {\n                  // Resolve the request\n                  resolve();\n                }, function () {\n                  // Reject the request\n                  reject("Error setting the indexed keys property.");\n                });\n              } else {\n                // Resolve the request\n                resolve();\n              }\n            });\n          } else {\n            // Resolve the request\n            resolve();\n          }\n        }, function () {\n          // Reject the request\n          reject("Error removing the web property.");\n        });\n      }\n    }, function () {\n      // Reject the request\n      reject("Unable to get the context of this web.");\n    });\n  });\n};\nexports.setWebProperty = setWebProperty;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/setWebProperty.js?')},"./build/helper/methods/stringify.js":function(__unused_webpack_module,exports){eval('\n\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.stringify = void 0;\n/**\n * Convert an object to a string\n */\nvar stringify = function stringify(obj) {\n  // Return the string\n  return JSON.stringify(obj, function (key, value) {\n    // Ensure a key exists\n    if (key) {\n      // See if this is a string or number, and return it\n      var valueType = _typeof(value);\n      if (valueType === "string" || valueType === "number") {\n        return value;\n      }\n      try {\n        // Try to parse it\n        JSON.parse(value);\n        // Return the value\n        return value;\n      } catch (_a) {\n        // Don\'t include this key/value pair\n        return undefined;\n      }\n    }\n    // Return the value\n    return value;\n  });\n};\nexports.stringify = stringify;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/methods/stringify.js?')},"./build/helper/ribbonLink.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.RibbonLink = void 0;\n/**\n * Ribbon Link\n */\nvar RibbonLink = function RibbonLink(props) {\n  // Creates the ribbon link\n  var create = function create() {\n    var link = null;\n    // Default the append flag\n    var appendFl = typeof props.appendFl === "boolean" ? props.appendFl : false;\n    // Get the link\n    link = _elTopBar.querySelector("#" + props.id);\n    if (link == null) {\n      // Create the link\n      link = document.createElement("a");\n      link.className = "ms-promotedActionButton " + (props.className || "");\n      link.href = props.href ? props.href : "javascript:void()";\n      link.innerHTML = "<span class=\'ms-promotedActionButton-text\'>" + props.title + "</span>";\n      link.id = props.id;\n      link.onclick = props.onClick;\n      // Add the link\n      appendFl ? _elTopBar.appendChild(link) : _elTopBar.insertBefore(link, _elTopBar.firstChild);\n    }\n    // Return the link\n    return link;\n  };\n  // Gets the top bar element\n  var _elTopBar = null;\n  var getTopBar = function getTopBar() {\n    // See if the bar exists\n    if (_elTopBar == null) {\n      // Set the element\n      _elTopBar = document.querySelector("#RibbonContainer-TabRowRight");\n    }\n    // Return the element\n    return _elTopBar;\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // See if the top bar exists\n    if (getTopBar()) {\n      // Create the link\n      var el = create();\n      if (el) {\n        // Resolve the promise\n        resolve(el);\n      }\n    } else if (window) {\n      // Wait for the window to be loaded\n      window.addEventListener("load", function () {\n        // See if the top bar exists\n        if (getTopBar()) {\n          // Create the link\n          var el = create();\n          if (el) {\n            // Resolve the promise\n            resolve(el);\n          }\n        }\n      });\n    }\n  });\n};\nexports.RibbonLink = RibbonLink;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/ribbonLink.js?')},"./build/helper/sbLink.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SuiteBarLink = void 0;\n/**\n * Suite Bar Link\n */\nvar SuiteBarLink = function SuiteBarLink(props) {\n  // Creates the ribbon link\n  var create = function create() {\n    // Default the append flag\n    var appendFl = typeof props.appendFl === "boolean" ? props.appendFl : true;\n    // Query for the link, and ensure it exists\n    var link = _elTopLinks.querySelector("#" + props.id);\n    if (link == null) {\n      // Create a list link\n      link = document.createElement("a");\n      link.className = "ms-core-suiteLink-a " + (props.className || "");\n      link.href = props.href ? props.href : "javascript:void()";\n      link.id = props.id;\n      link.innerHTML = props.title;\n      link.onclick = props.onClick;\n      // Create the suite bar link\n      var sbLink = document.createElement("li");\n      sbLink.className = "ms-core-suiteLink";\n      sbLink.appendChild(link);\n      // Append the item to the list\n      appendFl ? _elTopLinks.appendChild(sbLink) : _elTopLinks.insertBefore(sbLink, _elTopLinks.firstChild);\n    }\n    // Return the link\n    return link;\n  };\n  // Gets the top links element\n  var _elTopLinks = null;\n  var getTopLinks = function getTopLinks() {\n    // See if the bar exists\n    if (_elTopLinks == null) {\n      // Set the element\n      _elTopLinks = document.querySelector("#suiteLinksBox > ul");\n    }\n    // Return the element\n    return _elTopLinks;\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // See if the top links exists\n    if (getTopLinks()) {\n      // Create the link\n      var el = create();\n      if (el) {\n        // Resolve the promise\n        resolve(el);\n      }\n    } else if (window) {\n      // Wait for the window to be loaded\n      window.addEventListener("load", function () {\n        // See if the top links exists\n        if (getTopLinks()) {\n          // Create the link\n          var el = create();\n          if (el) {\n            // Resolve the promise\n            resolve(el);\n          }\n        }\n      });\n    }\n  });\n};\nexports.SuiteBarLink = SuiteBarLink;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sbLink.js?')},"./build/helper/spCfg.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SPConfig = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar __1 = __webpack_require__(/*! .. */ "./build/index.js");\nvar _1 = __webpack_require__(/*! . */ "./build/helper/index.js");\n__exportStar(__webpack_require__(/*! ./spCfgTypes */ "./build/helper/spCfgTypes.js"), exports);\n/**\n * SharePoint Configuration\n */\nvar SPConfig = function SPConfig(cfg, webUrl) {\n  // The selected configuration type to install\n  var _cfgType;\n  // The request digest\n  var _requestDigest = null;\n  // The target name to install/uninstall\n  var _targetName;\n  /**\n   * Logging\n   */\n  var logMessage = function logMessage(message, isError) {\n    if (isError === void 0) {\n      isError = false;\n    }\n    // See if this is an error\n    if (isError) {\n      // Log the error\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n    // Call the event\n    cfg.onLogMessage ? cfg.onLogMessage(message, isError) : null;\n  };\n  /**\n   * Methods\n   */\n  // Method to create the content types\n  var createContentTypes = function createContentTypes(contentTypes, cfgContentTypes, list) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure fields exist\n      if (cfgContentTypes == null || cfgContentTypes.length == 0) {\n        // Resolve the promise\n        resolve();\n        return;\n      }\n      // Method to get the parent content type\n      var _getParentCT = function getParentCT(ctName, url) {\n        // Return a promise\n        return new Promise(function (resolve, reject) {\n          // Get the web containing the parent content type\n          (0, lib_1.Web)(url, {\n            disableCache: true\n          })\n          // Get the content types\n          .ContentTypes()\n          // Filter for the parent name\n          .query({\n            Filter: "Name eq \'" + ctName + "\'"\n          })\n          // Execute the request\n          .execute(function (cts) {\n            // See if the parent exists\n            if (cts.results[0]) {\n              // Resolve the promise\n              resolve({\n                Id: cts.results[0].Id.StringValue,\n                Url: url\n              });\n            }\n            // Else, ensure this isn\'t the root web\n            else if (url != lib_1.ContextInfo.siteServerRelativeUrl) {\n              // Check the root web for the parent content type\n              _getParentCT(ctName, lib_1.ContextInfo.siteServerRelativeUrl).then(resolve, reject);\n            } else {\n              // Reject the promise\n              reject();\n            }\n          }, reject);\n        });\n      };\n      // Parse the configuration\n      (0, _1.Executor)(cfgContentTypes, function (cfg) {\n        // Return a promise\n        return new Promise(function (resolve, reject) {\n          // See if this content type already exists\n          var ct = isInCollection("Name", cfg.Name, contentTypes.results);\n          if (ct) {\n            // Log\n            logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The content type \'" + cfg.Name + "\' already exists.");\n            // Update the configuration\n            cfg.ContentType = ct;\n            // Resolve the promise and return\n            resolve(cfg);\n            return;\n          }\n          // Log\n          logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] Creating the \'" + cfg.Name + "\' content type.");\n          // See if the parent name exists\n          if (cfg.ParentName) {\n            _getParentCT(cfg.ParentName, cfg.ParentWebUrl || webUrl).then(\n            // Success\n            function (parentInfo) {\n              // Add the content type\n              (0, _1.createContentType)({\n                ctInfo: cfg,\n                listName: list ? list.Title : null,\n                parentContentTypeId: parentInfo.Id,\n                parentContentTypeUrl: parentInfo.Url,\n                webUrl: webUrl\n              }).then(\n              // Success\n              function (ct) {\n                // Log\n                logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The content type \'" + cfg.Name + "\' was created successfully.");\n                // Update the configuration\n                cfg.ContentType = ct;\n                // Trigger the event\n                cfg.onCreated ? cfg.onCreated(ct, list) : null;\n                // Resolve the promise\n                resolve(cfg);\n              },\n              // Error\n              function (error) {\n                // Log\n                logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The content type \'" + cfg.Name + "\' failed to be created.", error);\n                // Reject the promise\n                reject(error);\n              });\n            },\n            // Error\n            function () {\n              // Log\n              logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The parent content type \'" + cfg.ParentName + "\' was not found.");\n              // Reject the promise\n              reject(ct.response);\n            });\n          } else {\n            // Create the content type\n            (0, _1.createContentType)({\n              ctInfo: cfg,\n              listName: list ? list.Title : null,\n              parentContentTypeId: cfg.Id,\n              webUrl: webUrl\n            }).then(\n            // Success\n            function (ct) {\n              // Log\n              logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The content type \'" + cfg.Name + "\' was created successfully.");\n              // Update the configuration\n              cfg.ContentType = ct;\n              // Trigger the event\n              cfg.onCreated ? cfg.onCreated(ct, list) : null;\n              // Resolve the promise\n              resolve(cfg);\n            },\n            // Error\n            function (error) {\n              // Log\n              logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] The content type \'" + cfg.Name + "\' failed to be created.");\n              logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] Error: " + error.response, true);\n              // Reject the promise\n              reject(error.response);\n            });\n          }\n        });\n      }).then(function () {\n        // Parse the configuration\n        (0, _1.Executor)(cfgContentTypes, function (cfgContentType) {\n          // Return a promise\n          return new Promise(function (resolve, reject) {\n            var cfgUpdate = {};\n            var updateFl = false;\n            // Ensure the content type exists\n            if (cfgContentType.ContentType == null) {\n              // Skip this content type\n              resolve(null);\n              return;\n            }\n            // Log\n            logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type] Updating the field references for: " + cfgContentType.Name);\n            // Create the field refs\n            (0, _1.setContentTypeFields)({\n              fields: cfgContentType.FieldRefs,\n              id: cfgContentType.ContentType.Id.StringValue,\n              listName: list ? list.Title : null,\n              webUrl: webUrl\n            }).then(function () {\n              /**\n               * See if we need to update the properties\n               */\n              // Custom form formatter\n              if (cfgContentType.ClientFormCustomFormatter != null && cfgContentType.ContentType.ClientFormCustomFormatter != cfgContentType.ClientFormCustomFormatter) {\n                // Update the configuration\n                cfgUpdate.ClientFormCustomFormatter = cfgContentType.ClientFormCustomFormatter;\n                // Set the flag\n                updateFl = true;\n              }\n              // Description\n              if (cfgContentType.Description != null && cfgContentType.ContentType.Description != cfgContentType.Description) {\n                // Update the configuration\n                cfgUpdate.Description = cfgContentType.Description;\n                // Set the flag\n                updateFl = true;\n              }\n              // Group\n              if (cfgContentType.Group != null && cfgContentType.ContentType.Group != cfgContentType.Group) {\n                // Update the configuration\n                cfgUpdate.Group = cfgContentType.Group;\n                // Set the flag\n                updateFl = true;\n              }\n              // JSLink\n              if (cfgContentType.JSLink != null && cfgContentType.ContentType.JSLink != cfgContentType.JSLink) {\n                // Update the configuration\n                cfgUpdate.JSLink = cfgContentType.JSLink;\n                // Set the flag\n                updateFl = true;\n              }\n              // Name\n              if (cfgContentType.Name != null && cfgContentType.ContentType.Name != cfgContentType.Name) {\n                // Update the configuration\n                cfgUpdate.Name = cfgContentType.Name;\n                // Set the flag\n                updateFl = true;\n              }\n              // See if an update is needed\n              if (updateFl) {\n                // Log\n                logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type][" + cfgContentType.ContentType.Name + "] Updating the content type.");\n                // Update the content type\n                cfgContentType.ContentType.update(cfgUpdate).execute(function () {\n                  // Log\n                  logMessage("[gd-sprest]" + (list ? "[" + list.Title + " List]" : "") + "[Content Type][" + cfgContentType.ContentType.Name + "] Update request completed.");\n                  // Trigger the event\n                  cfgContentType.onUpdated ? cfgContentType.onUpdated(cfgContentType.ContentType) : null;\n                  // Resolve this request\n                  resolve(null);\n                }, reject);\n              } else {\n                // Trigger the event\n                cfgContentType.onUpdated ? cfgContentType.onUpdated(cfgContentType.ContentType) : null;\n                // Resolve this request\n                resolve(null);\n              }\n            }, reject);\n          });\n        }).then(resolve, reject);\n      }, reject);\n    });\n  };\n  // Method to create the fields\n  var createFields = function createFields(fields, cfgFields, list) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var newFields = [];\n      // Ensure fields exist\n      if (cfgFields == null || cfgFields.length == 0) {\n        // Resolve the promise\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgFields, function (cfg) {\n        return new Promise(function (resolve) {\n          // See if this field already exists\n          var field = isInCollection("InternalName", cfg.name, fields.results);\n          if (field) {\n            // Log\n            logMessage("[gd-sprest][Field] The field \'" + cfg.name + "\' already exists.");\n            // Trigger the event\n            cfg.onUpdated ? cfg.onUpdated(field, list) : null;\n            // Resolve the promise\n            resolve(null);\n          } else {\n            // Log\n            logMessage("[gd-sprest][Field] Creating the \'" + cfg.name + "\' field.");\n            // See if this is an associated lookup field\n            var cfgLookup = cfg;\n            if (cfgLookup.type == _1.SPCfgFieldType.Lookup && cfgLookup.fieldRef) {\n              // Get the field reference\n              var fieldRef = isInCollection("InternalName", cfgLookup.fieldRef, fields.results) || isInCollection("InternalName", cfgLookup.fieldRef, newFields);\n              if (fieldRef) {\n                // Update the value to be the guid\n                cfgLookup.fieldRef = fieldRef.Id;\n              }\n            }\n            // Compute the schema xml\n            (0, _1.FieldSchemaXML)(cfg, webUrl).then(function (response) {\n              var schemas = typeof response === "string" ? [response] : response;\n              // Parse the fields to add\n              for (var i = 0; i < schemas.length; i++) {\n                // Add the field\n                fields.createFieldAsXml(schemas[i]).execute(function (field) {\n                  // See if it was successful\n                  if (field.InternalName) {\n                    // Log\n                    logMessage("[gd-sprest][Field] The field \'" + field.InternalName + "\' was created successfully.");\n                    // Save a reference to the field\n                    newFields.push(field);\n                    // Trigger the event\n                    cfg.onCreated ? cfg.onCreated(field, list) : null;\n                    // Resolve the promise\n                    resolve(null);\n                  } else {\n                    // Log\n                    logMessage("[gd-sprest][Field] The field \'" + cfg.name + "\' failed to be created.");\n                    logMessage("[gd-sprest][Field] Error: " + field.response, true);\n                    // Reject the promise\n                    reject();\n                  }\n                });\n              }\n            }, reject);\n          }\n        });\n      }).then(resolve);\n    });\n  };\n  // Method to create the lists\n  var createLists = function createLists(lists, cfgLists) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Execute code against each list configuration\n      (0, _1.Executor)(cfgLists, function (cfgList) {\n        // Return a promise\n        return new Promise(function (resolve) {\n          // See if the target name exists and matches this list\n          if (_cfgType && _targetName) {\n            // Ensure it\'s for this list\n            if (cfgList.ListInformation.Title.toLowerCase() != _targetName) {\n              // Do nothing\n              resolve(null);\n              return;\n            }\n          }\n          // See if this list already exists\n          var list = isInCollection("Title", cfgList.ListInformation.Title, lists.results);\n          if (list) {\n            // Log\n            logMessage("[gd-sprest][List] The list \'" + cfgList.ListInformation.Title + "\' already exists.");\n            // Resolve the promise and do nothing\n            resolve(null);\n            return;\n          }\n          // Log\n          logMessage("[gd-sprest][List] Creating the \'" + cfgList.ListInformation.Title + "\' list.");\n          // Update the list name and remove spaces\n          var listInfo = cfgList.ListInformation;\n          var listName = listInfo.Title;\n          listInfo.Title = cfgList.ListUrlName || listName.replace(/ /g, "");\n          // Add the list\n          lists.add(listInfo)\n          // Execute the request\n          .execute(function (list) {\n            cfgList["_list"] = list;\n            // Restore the list name in the configuration\n            listInfo.Title = listName;\n            // See if the request was successful\n            if (list.Id) {\n              // See if we need to update the list\n              if (list.Title != listName) {\n                // Update the list\n                list.update({\n                  Title: listName\n                }).execute(function () {\n                  // Log\n                  logMessage("[gd-sprest][List] The list \'" + list.Title + "\' was created successfully.");\n                  // Resolve the promise\n                  resolve(null);\n                });\n              } else {\n                // Log\n                logMessage("[gd-sprest][List] The list \'" + list.Title + "\' was created successfully.");\n                // Resolve the promise\n                resolve(null);\n              }\n              // Trigger the event\n              cfgList.onCreating ? cfgList.onCreating(list) : null;\n            } else {\n              // Log\n              logMessage("[gd-sprest][List] The list \'" + listInfo.Title + "\' failed to be created.");\n              logMessage("[gd-sprest][List] Error: \'" + list.response);\n              // Resolve the promise\n              resolve(null);\n            }\n          }, reject);\n        });\n      }).then(function () {\n        // Update the lists\n        updateLists(cfgLists).then(function () {\n          // Parse the lists\n          for (var i = 0; i < cfgLists.length; i++) {\n            var cfgList = cfgLists[i];\n            // Trigger the event\n            cfgList.onCreated ? cfgList.onCreated(cfgList["_list"]) : null;\n          }\n          // Resolve the promise\n          resolve();\n        }, reject);\n      });\n    });\n  };\n  // Method to create the user custom actions\n  var createUserCustomActions = function createUserCustomActions(customActions, cfgCustomActions) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the configuration type exists\n      if (_cfgType) {\n        // Ensure it\'s for this type\n        if (_cfgType != _1.SPCfgType.SiteUserCustomActions || _cfgType != _1.SPCfgType.WebUserCustomActions) {\n          // Resolve the promise\n          resolve();\n          return;\n        }\n      }\n      // Ensure the lists exist\n      if (cfgCustomActions == null || cfgCustomActions.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgCustomActions, function (cfg) {\n        // See if the target name exists\n        if (_cfgType && _targetName) {\n          // Ensure it\'s for this custom action\n          if (cfg.Name.toLowerCase() != _targetName || cfg.Title.toLowerCase() != _targetName) {\n            // Skip this custom action\n            return;\n          }\n        }\n        // See if this custom action already exists\n        if (isInCollection("Name", cfg.Name, customActions.results)) {\n          // Log\n          logMessage("[gd-sprest][Custom Action] The custom action \'" + cfg.Name + "\' already exists.");\n        } else {\n          // See if rights exist\n          if (cfg.Rights) {\n            // Update the value\n            cfg.Rights = updateBasePermissions(cfg.Rights);\n          }\n          // Add the custom action\n          customActions.add(cfg).execute(function (ca) {\n            // Ensure it exists\n            if (ca.existsFl) {\n              // Log\n              logMessage("[gd-sprest][Custom Action] The custom action \'" + ca.Name + "\' was created successfully.");\n            } else {\n              // Log\n              logMessage("[gd-sprest][Custom Action] The custom action \'" + ca.Name + "\' failed to be created.");\n              logMessage("[gd-sprest][Custom Action] Error: " + ca.response);\n            }\n          }, reject, true);\n        }\n      }).then(resolve);\n    });\n  };\n  // Method to create the list views\n  var createViews = function createViews(list, views, cfgViews) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure the list views exist\n      if (cfgViews == null || cfgViews.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgViews, function (cfg) {\n        // See if this view exists\n        var view = isInCollection("Title", cfg.ViewName, views.results);\n        if (view) {\n          // Log\n          logMessage("[gd-sprest][View] The view \'" + cfg.ViewName + "\' already exists.");\n        } else {\n          // Add the view\n          views.add({\n            DefaultView: cfg.Default,\n            Hidden: cfg.Hidden,\n            MobileDefaultView: cfg.MobileDefaultView,\n            MobileView: cfg.MobileView,\n            TabularView: cfg.Tabular,\n            Title: cfg.ViewName,\n            RowLimit: cfg.RowLimit,\n            ViewQuery: cfg.ViewQuery\n          }).execute(function (view) {\n            // Ensure it exists\n            if (view.existsFl) {\n              // Log\n              logMessage("[gd-sprest][View] The view \'" + cfg.ViewName + "\' was created successfully.");\n              // Trigger the event\n              cfg.onCreated ? cfg.onCreated(view, list) : null;\n            } else {\n              // Log\n              logMessage("[gd-sprest][View] The view \'" + cfg.ViewName + "\' failed to be created.");\n              logMessage("[gd-sprest][View] Error: " + view.response);\n            }\n          }, reject, true);\n        }\n      }).then(function () {\n        // Update the views\n        updateViews(list, views, cfgViews).then(function () {\n          // Resolve the promise\n          resolve();\n        });\n      });\n    });\n  };\n  // Method to create the web parts\n  var createWebParts = function createWebParts() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var cfgWebParts = cfg.WebPartCfg;\n      // Ensure fields exist\n      if (cfgWebParts == null || cfgWebParts.length == 0) {\n        // Resolve the promise\n        resolve();\n        return;\n      }\n      // Log\n      logMessage("[gd-sprest][WebPart] Creating the web parts.");\n      // Get the web\n      (0, lib_1.Web)(webUrl, {\n        disableCache: true,\n        requestDigest: _requestDigest\n      })\n      // Get the web part catalog\n      .getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\n      // Get the root folder\n      .RootFolder()\n      // Expand the files and items\n      .query({\n        Expand: ["Files"]\n      })\n      // Execute the request\n      .execute(function (folder) {\n        var ctr = 0;\n        var _loop_1 = function _loop_1(i) {\n          var cfgWebPart = cfgWebParts[i];\n          // See if the target name exists\n          if (_cfgType && _targetName) {\n            // Ensure it\'s for this list\n            if (cfgWebPart.FileName.toLowerCase() != _targetName) {\n              return "continue";\n            }\n          }\n          // The post execute method\n          var postExecute = function postExecute() {\n            // Increment the counter\n            if (++ctr >= cfgWebParts.length) {\n              // Resolve the promise\n              resolve();\n            }\n          };\n          // See if this webpart exists\n          var file = isInCollection("Name", cfgWebPart.FileName, folder.Files.results);\n          if (file.Name) {\n            // Log\n            logMessage("[gd-sprest][WebPart] The webpart \'" + cfgWebPart.FileName + "\' already exists.");\n            // Trigger the event\n            cfgWebPart.onUpdated ? cfgWebPart.onUpdated(file) : null;\n            // Execute the post event\n            postExecute();\n          } else {\n            // Trim the xml\n            var xml = cfgWebPart.XML.trim();\n            // Convert the string to an array buffer\n            var buffer = new ArrayBuffer(xml.length * 2);\n            var bufferView = new Uint16Array(buffer);\n            for (var j = 0; j < xml.length; j++) {\n              bufferView[j] = xml.charCodeAt(j);\n            }\n            // Create the webpart, but execute the requests one at a time\n            folder.Files.add(cfgWebPart.FileName, true, buffer).execute(\n            // Success\n            function (file) {\n              // See if group exists\n              if (cfgWebPart.Group) {\n                // Set the target to the root web\n                (0, lib_1.Web)(lib_1.ContextInfo.siteServerRelativeUrl, {\n                  disableCache: true\n                })\n                // Get the web part catalog\n                .getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\n                // Get the Items\n                .Items()\n                // Query for this webpart\n                .query({\n                  Filter: "FileLeafRef eq \'" + cfgWebPart.FileName + "\'"\n                })\n                // Execute the request\n                .execute(function (items) {\n                  // Update the item\n                  items.results[0].update({\n                    Group: cfgWebPart.Group\n                  }).execute(postExecute);\n                });\n              }\n              // Log\n              logMessage("[gd-sprest][WebPart] The \'" + file.Name + "\' webpart file was uploaded successfully.");\n              // Trigger the event\n              cfgWebPart.onCreated ? cfgWebPart.onCreated(file) : null;\n            },\n            // Error\n            function () {\n              // Log\n              logMessage("[gd-sprest][WebPart] The \'" + file.Name + "\' webpart file upload failed.");\n              // Skip this webpart\n              resolve();\n            });\n          }\n        };\n        // Parse the configuration\n        for (var i = 0; i < cfgWebParts.length; i++) {\n          _loop_1(i);\n        }\n      }, reject);\n    });\n  };\n  // Method to see if an object exists in a collection\n  var isInCollection = function isInCollection(key, value, collection) {\n    // Ensure a value exists\n    if (value) {\n      var valueLower = value ? value.toLowerCase() : "";\n      // Parse the collection\n      for (var i = 0; i < collection.length; i++) {\n        var keyValue = collection[i][key];\n        keyValue = keyValue ? keyValue.toLowerCase() : "";\n        // See if the item exists\n        if (valueLower == keyValue) {\n          // Return true\n          return collection[i];\n        }\n      }\n    }\n    // Not in the collection\n    return false;\n  };\n  // Method to remove the content type\n  var removeContentTypes = function removeContentTypes(contentTypes, cfgContentTypes) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure the content types exist\n      if (cfgContentTypes == null || cfgContentTypes.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgContentTypes, function (cfg) {\n        // Get the field\n        var ct = isInCollection("Name", cfg.Name, contentTypes.results);\n        if (ct) {\n          // Remove the field\n          ct["delete"]().execute(function () {\n            // Log\n            logMessage("[gd-sprest][Content Type] The content type \'" + ct.Name + "\' was removed.");\n          }, reject, true);\n        }\n      }).then(resolve);\n    });\n  };\n  // Method to remove the fields\n  var removeFields = function removeFields(fields, cfgFields) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure the fields exist\n      if (cfgFields == null || cfgFields.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgFields, function (cfg) {\n        // Get the field\n        var field = isInCollection("InternalName", cfg.name, fields.results);\n        if (field) {\n          // Remove the field\n          field["delete"]().execute(function () {\n            // Log\n            logMessage("[gd-sprest][Field] The field \'" + field.InternalName + "\' was removed.");\n          }, reject, true);\n        }\n      }).then(resolve);\n    });\n  };\n  // Method to remove the lists\n  var removeLists = function removeLists(lists, cfgLists) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the configuration type exists\n      if (_cfgType) {\n        // Ensure it\'s for this type\n        if (_cfgType != _1.SPCfgType.Lists) {\n          // Resolve the promise\n          resolve();\n          return;\n        }\n      }\n      // Ensure the lists exist\n      if (cfgLists == null || cfgLists.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgLists, function (cfg) {\n        // See if the target name exists\n        if (_cfgType && _targetName) {\n          // Ensure it\'s for this list\n          if (cfg.ListInformation.Title.toLowerCase() != _targetName) {\n            // Skip this list\n            return;\n          }\n        }\n        // Get the list\n        var list = isInCollection("Title", cfg.ListInformation.Title, lists.results);\n        if (list) {\n          // Remove the list\n          list["delete"]().execute(function () {\n            // Log\n            logMessage("[gd-sprest][List] The list \'" + list.Title + "\' was removed.");\n          }, reject, true);\n        }\n      }).then(resolve);\n    });\n  };\n  // Method to remove the user custom actions\n  var removeUserCustomActions = function removeUserCustomActions(customActions, cfgCustomActions) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the configuration type exists\n      if (_cfgType) {\n        // Ensure it\'s for this type\n        if (_cfgType != _1.SPCfgType.SiteUserCustomActions || _cfgType != _1.SPCfgType.WebUserCustomActions) {\n          // Resolve the promise\n          resolve();\n          return;\n        }\n      }\n      // Ensure the custom actions exist\n      if (cfgCustomActions == null || cfgCustomActions.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Parse the configuration\n      (0, _1.Executor)(cfgCustomActions, function (cfg) {\n        // See if the target name exists\n        if (_cfgType && _targetName) {\n          // Ensure it\'s for this custom action\n          if (cfg.Name.toLowerCase() != _targetName || cfg.Title.toLowerCase() != _targetName) {\n            // Skip this custom action\n            return;\n          }\n        }\n        // Get the custom action\n        var ca = isInCollection("Name", cfg.Name, customActions.results);\n        if (ca) {\n          // Remove the custom action\n          ca["delete"]().execute(function () {\n            // Log\n            logMessage("[gd-sprest][Custom Action] The custom action \'" + ca.Name + "\' was removed.");\n          }, reject, true);\n        }\n      }).then(resolve);\n    });\n  };\n  // Method to remove the web parts\n  var removeWebParts = function removeWebParts(site) {\n    var cfgWebParts = cfg.WebPartCfg;\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the configuration type exists\n      if (_cfgType) {\n        // Ensure it\'s for this type\n        if (_cfgType != _1.SPCfgType.WebParts) {\n          // Resolve the promise\n          resolve();\n          return;\n        }\n      }\n      // Ensure the configuration exists\n      if (cfgWebParts == null || cfgWebParts.length == 0) {\n        // Resolve the promise and return it\n        resolve();\n        return;\n      }\n      // Log\n      logMessage("[gd-sprest][WebPart] Removing the web parts.");\n      // Get the webpart gallery from the root web\n      site.RootWeb().getCatalog(__1.SPTypes.ListTemplateType.WebPartCatalog)\n      // Get the root folder\n      .RootFolder()\n      // Expand the files\n      .Files()\n      // Execute the request\n      .execute(function (files) {\n        var _loop_2 = function _loop_2(i) {\n          var cfgWebPart = cfgWebParts[i];\n          // See if the target name exists\n          if (_cfgType && _targetName) {\n            // Ensure it\'s for this webpart\n            if (cfgWebPart.FileName.toLowerCase() != _targetName) {\n              return "continue";\n            }\n          }\n          // Get the file\n          var file = isInCollection("Name", cfgWebPart.FileName, files.results);\n          if (file) {\n            // Remove the file\n            file["delete"]().execute(function () {\n              // Log\n              logMessage("[gd-sprest][WebPart] The webpart \'" + file.Name + "\' file was removed.");\n            }, true);\n          }\n        };\n        // Parse the configuration\n        for (var i = 0; i < cfgWebParts.length; i++) {\n          _loop_2(i);\n        }\n        // Resolve the promise\n        resolve();\n      }, reject);\n    });\n  };\n  // Method to get the web information\n  var setRequestDigest = function setRequestDigest() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      if (webUrl) {\n        // Get the web context information\n        lib_1.ContextInfo.getWeb(webUrl).execute(function (webInfo) {\n          _requestDigest = webInfo.GetContextWebInformation.FormDigestValue;\n          // Resolve the promise\n          resolve();\n        }, reject);\n      } else {\n        // Resolve the promise\n        resolve();\n      }\n    });\n  };\n  // Method to update the base permissions\n  var updateBasePermissions = function updateBasePermissions(values) {\n    var high = values.High;\n    var low = values.Low;\n    // See if this is an array\n    for (var i = 0; i < values["length"]; i++) {\n      var value = values[i];\n      // See if this is the full mask\n      if (value == 65) {\n        // Set the values\n        low = 65535;\n        high = 32767;\n        // Break from the loop\n        break;\n      }\n      // Else, see if it\'s empty\n      else if (value == 0) {\n        // Clear the values\n        low = 0;\n        high = 0;\n      }\n      // Else, update the base permission\n      else {\n        var bit = value - 1;\n        var bitValue = 1;\n        // Validate the bit\n        if (bit < 0) {\n          continue;\n        }\n        // See if it\'s a low permission\n        if (bit < 32) {\n          // Compute the value\n          bitValue = bitValue << bit;\n          // Set the low value\n          low |= bitValue;\n        }\n        // Else, it\'s a high permission\n        else {\n          // Compute the value\n          bitValue = bitValue << bit - 32;\n          // Set the high value\n          high |= bitValue;\n        }\n      }\n    }\n    // Return the base permission\n    return {\n      Low: low.toString(),\n      High: high.toString()\n    };\n  };\n  // Method to update the lists\n  var updateLists = function updateLists(cfgLists) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var _request = function request(idx, resolve) {\n        // Get the list configuration\n        var cfgList = cfgLists[idx];\n        // See if the target name exists\n        if (_targetName) {\n          // Ensure it\'s for this list\n          if (cfgList.ListInformation.Title.toLowerCase() != _targetName) {\n            // Update the next list\n            _request(idx + 1, resolve);\n            return;\n          }\n        }\n        // Ensure the configuration exists\n        if (cfgList) {\n          // Get the web\n          (0, lib_1.Web)(webUrl, {\n            disableCache: true,\n            requestDigest: _requestDigest\n          })\n          // Get the list\n          .Lists(cfgList.ListInformation.Title)\n          // Expand the content types, fields and views\n          .query({\n            Expand: ["ContentTypes", "Fields", "UserCustomActions", "Views"]\n          })\n          // Execute the request\n          .execute(function (list) {\n            // Update the title field\n            updateListTitleField(list, cfgList).then(function () {\n              // Create the fields\n              createFields(list.Fields, cfgList.CustomFields, list).then(function () {\n                // Create the content types\n                createContentTypes(list.ContentTypes, cfgList.ContentTypes, list).then(function () {\n                  // Update the views\n                  createViews(list, list.Views, cfgList.ViewInformation).then(function () {\n                    // Update the views\n                    createUserCustomActions(list.UserCustomActions, cfgList.UserCustomActions).then(function () {\n                      // Trigger the event\n                      cfgList.onUpdated ? cfgList.onUpdated(list) : null;\n                      // Update the next list\n                      _request(idx + 1, resolve);\n                    }, reject);\n                  }, reject);\n                }, reject);\n              }, reject);\n            }, reject);\n          }, reject);\n        } else {\n          // Resolve the promise\n          resolve();\n        }\n      };\n      // Execute the request\n      _request(0, resolve);\n    });\n  };\n  // Method to update the list title field\n  var updateListTitleField = function updateListTitleField(list, cfgList) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure an update is required\n      if (cfgList.TitleFieldDefaultValue || cfgList.TitleFieldDescription || cfgList.TitleFieldDisplayName || cfgList.TitleFieldIndexed || cfgList.TitleFieldRequired || cfgList.TitleFieldUniqueValues) {\n        var values = {};\n        // See if we are setting a default value\n        if (cfgList.TitleFieldDefaultValue) {\n          // Update the values\n          values["DefaultValue"] = cfgList.TitleFieldDefaultValue;\n        }\n        // See if we are setting the description\n        if (cfgList.TitleFieldDescription) {\n          // Update the values\n          values["Description"] = cfgList.TitleFieldDescription;\n        }\n        // See if the title field is being updated\n        if (cfgList.TitleFieldDisplayName) {\n          // Update the values\n          values["Title"] = cfgList.TitleFieldDisplayName;\n        }\n        // See if we are indexing the field\n        // Note - To enforce unique values, the field must be indexed\n        if (cfgList.TitleFieldUniqueValues || cfgList.TitleFieldIndexed) {\n          // Update the values\n          values["Indexed"] = true;\n        }\n        // See if we are requiring a value\n        if (typeof cfgList.TitleFieldRequired === "boolean") {\n          // Update the values\n          values["Required"] = cfgList.TitleFieldRequired;\n        }\n        // See if we are enforcing unique values\n        if (cfgList.TitleFieldUniqueValues) {\n          // Update the values\n          values["EnforceUniqueValues"] = true;\n        }\n        // Update the field name\n        list.Fields.getByInternalNameOrTitle("Title").update(values).execute(function () {\n          // Log\n          cfgList.TitleFieldDefaultValue ? logMessage("[gd-sprest][List] The \'Title\' field\'s default value was updated to \'" + cfgList.TitleFieldDefaultValue + "\'.") : null;\n          cfgList.TitleFieldDescription ? logMessage("[gd-sprest][List] The \'Title\' field\'s description was updated to \'" + cfgList.TitleFieldDescription + "\'.") : null;\n          cfgList.TitleFieldDisplayName ? logMessage("[gd-sprest][List] The \'Title\' field\'s display name was updated to \'" + cfgList.TitleFieldDisplayName + "\'.") : null;\n          cfgList.TitleFieldIndexed ? logMessage("[gd-sprest][List] The \'Title\' field\'s has been indexed.") : null;\n          cfgList.TitleFieldRequired ? logMessage("[gd-sprest][List] The \'Title\' field\'s required flag was updated to \'" + cfgList.TitleFieldRequired + "\'.") : null;\n          cfgList.TitleFieldUniqueValues ? logMessage("[gd-sprest][List] The \'Title\' field\'s unique values flag was updated to \'" + cfgList.TitleFieldUniqueValues + "\'.") : null;\n          // Resolve the promise\n          resolve();\n        }, reject);\n      } else {\n        // Resolve the promise\n        resolve();\n      }\n    });\n  };\n  // Method to update the views\n  var updateViews = function updateViews(list, views, cfgViews) {\n    // Return a promise\n    return new Promise(function (resolve) {\n      // Parse the configuration\n      (0, _1.Executor)(cfgViews, function (cfg) {\n        // Return a promise\n        return new Promise(function (resolve) {\n          // Get the view\n          var view = views.getByTitle(cfg.ViewName);\n          // See if the view fields are defined\n          if (cfg.ViewFields && cfg.ViewFields.length > 0) {\n            // Log\n            logMessage("[gd-sprest][View] Updating the view fields for the \'" + cfg.ViewName + "\' view.");\n            // Clear the view fields\n            view.ViewFields().removeAllViewFields().execute(true);\n            // Parse the view fields\n            for (var i = 0; i < cfg.ViewFields.length; i++) {\n              // Log\n              logMessage("[gd-sprest][View] Add view field \'" + cfg.ViewFields[i] + "\' to the view.");\n              // Add the view field\n              view.ViewFields().addViewField(cfg.ViewFields[i]).execute(true);\n            }\n          }\n          // See if we are updating the view properties\n          if (typeof cfg.Default === "boolean" || typeof cfg.Hidden === "boolean" || typeof cfg.MobileDefaultView === "boolean" || typeof cfg.MobileView === "boolean" || typeof cfg.Tabular === "boolean" || cfg.JSLink || cfg.RowLimit > 0 || cfg.ViewQuery) {\n            var props = {};\n            // Log\n            logMessage("[gd-sprest][View] Updating the view properties for the \'" + cfg.ViewName + "\' view.");\n            // Set the properties\n            typeof cfg.Default === "boolean" ? props["DefaultView"] = cfg.Default : null;\n            typeof cfg.Hidden === "boolean" ? props["Hidden"] = cfg.Hidden : null;\n            typeof cfg.MobileDefaultView === "boolean" ? props["MobileDefaultView"] = cfg.MobileDefaultView : null;\n            typeof cfg.MobileView === "boolean" ? props["MobileView"] = cfg.MobileView : null;\n            typeof cfg.Tabular === "boolean" ? props["TabularView"] = cfg.Tabular : null;\n            cfg.CustomFormatter ? props["CustomFormatter"] = cfg.CustomFormatter : null;\n            cfg.JSLink ? props["JSLink"] = cfg.JSLink : null;\n            cfg.RowLimit > 0 ? props["RowLimit"] = cfg.RowLimit : null;\n            cfg.ViewQuery ? props["ViewQuery"] = cfg.ViewQuery : null;\n            // Update the view\n            view.update(props).execute(true);\n          }\n          // Wait for the requests to complete\n          view.done(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            // Log\n            logMessage("[gd-sprest][View] The updates for the \'" + cfg.ViewName + "\' view has completed.");\n            // Trigger the event\n            cfg.onUpdated ? cfg.onUpdated(view, list) : null;\n            // Resolve the promise\n            resolve(null);\n          });\n        });\n      }).then(resolve);\n    });\n  };\n  // Method to uninstall the site components\n  var uninstallSite = function uninstallSite() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure we need to complete this request\n      if (cfg.CustomActionCfg != null && cfg.CustomActionCfg.Site != null || cfg.WebPartCfg != null) {\n        // Log\n        logMessage("[gd-sprest][uninstall] Loading the site information...");\n        // Get the site\n        (0, lib_1.Site)(webUrl, {\n          disableCache: true,\n          requestDigest: _requestDigest\n        })\n        // Expand the user custom actions\n        .query({\n          Expand: ["UserCustomActions"]\n        })\n        // Execute the request\n        .execute(function (site) {\n          // Remove the user custom actions\n          removeUserCustomActions(site.UserCustomActions, cfg.CustomActionCfg ? cfg.CustomActionCfg.Site : []).then(function () {\n            // Remove the webpart\n            removeWebParts(site).then(function () {\n              // Resolve the promise\n              resolve(site);\n            }, reject);\n          });\n        }, reject);\n      } else {\n        // Resolve the promise\n        resolve(null);\n      }\n    });\n  };\n  // Method to uninstall the web components\n  var uninstallWeb = function uninstallWeb() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      var Expand = [];\n      // Log\n      logMessage("[gd-sprest][uninstall] Loading the web information...");\n      // Set the query\n      if (cfg.ContentTypes) {\n        Expand.push("ContentTypes");\n      }\n      if (cfg.CustomActionCfg) {\n        Expand.push("UserCustomActions");\n      }\n      if (cfg.Fields) {\n        Expand.push("Fields");\n      }\n      if (cfg.ListCfg) {\n        Expand.push("Lists");\n      }\n      // Query the web\n      (0, lib_1.Web)(webUrl, {\n        disableCache: true,\n        requestDigest: _requestDigest\n      }).query({\n        Expand: Expand\n      })\n      // Execute the request\n      .execute(function (web) {\n        // Remove the web custom actions\n        removeUserCustomActions(web.UserCustomActions, cfg.CustomActionCfg ? cfg.CustomActionCfg.Web : null).then(function () {\n          // Remove the lists\n          removeLists(web.Lists, cfg.ListCfg).then(function () {\n            // Remove the content types\n            removeContentTypes(web.ContentTypes, cfg.ContentTypes).then(function () {\n              // Remove the fields\n              removeFields(web.Fields, cfg.Fields).then(function () {\n                // Resolve the promise\n                resolve();\n              }, reject);\n            }, reject);\n          }, reject);\n        }, reject);\n      }, reject);\n    });\n  };\n  /**\n   * Public Interface\n   */\n  return {\n    // The configuration\n    _configuration: cfg,\n    // Method to get the web url to target\n    getWebUrl: function getWebUrl() {\n      return webUrl;\n    },\n    // Method to install the configuration\n    install: function install() {\n      var initSPLib = function initSPLib() {\n        return new Promise(function (resolve) {\n          // See if the SP lib exists\n          if (window["SP"]) {\n            resolve(null);\n            return;\n          }\n          // Load the core and taxonomy libraries\n          (0, _1.loadSPCore)(["sp.taxonomy"]).then(function () {\n            resolve(null);\n          });\n        });\n      };\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // Ensure the SP core lib exists\n        initSPLib().then(function () {\n          // Set the request digest\n          setRequestDigest().then(function () {\n            // Log\n            logMessage("[gd-sprest] Installing the web assets...");\n            // Get the web\n            var web = (0, lib_1.Web)(webUrl, {\n              disableCache: true,\n              requestDigest: _requestDigest\n            });\n            // Create the site fields\n            var createSiteFields = function createSiteFields() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are creating fields\n                if (cfg.Fields && cfg.Fields.length > 0) {\n                  // Log\n                  logMessage("[gd-sprest][Fields] Starting the requests.");\n                  // Get the fields\n                  web.Fields().execute(function (fields) {\n                    // Create the fields\n                    createFields(fields, cfg.Fields).then(function () {\n                      // Log\n                      logMessage("[gd-sprest][Fields] Completed the requests.");\n                      // Resolve the promise\n                      resolve(null);\n                    }, reject);\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve(null);\n                }\n              });\n            };\n            // Create the site content types\n            var createSiteContentTypes = function createSiteContentTypes() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are creating the content types\n                if (cfg.ContentTypes && cfg.ContentTypes.length > 0) {\n                  // Log\n                  logMessage("[gd-sprest][Content Types] Starting the requests.");\n                  // Get the content types\n                  web.ContentTypes().execute(function (contentTypes) {\n                    // Create the content types\n                    createContentTypes(contentTypes, cfg.ContentTypes).then(function () {\n                      // Log\n                      logMessage("[gd-sprest][Content Types] Completed the requests.");\n                      // Resolve the promise\n                      resolve();\n                    }, reject);\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            };\n            // Create the site lists\n            var createSiteLists = function createSiteLists() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are creating the lists\n                if (cfg.ListCfg && cfg.ListCfg.length) {\n                  // Log\n                  logMessage("[gd-sprest][Lists] Starting the requests.");\n                  // Get the lists\n                  web.Lists().execute(function (lists) {\n                    // Create the lists\n                    createLists(lists, cfg.ListCfg).then(function () {\n                      // Log\n                      logMessage("[gd-sprest][Lists] Completed the requests.");\n                      // Resolve the promise\n                      resolve();\n                    }, reject);\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            };\n            // Create the site webparts\n            var createSiteWebParts = function createSiteWebParts() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are creating the webparts\n                if (cfg.WebPartCfg && cfg.WebPartCfg.length > 0) {\n                  // Log\n                  logMessage("[gd-sprest][WebParts] Starting the requests.");\n                  // Create the webparts\n                  createWebParts().then(function () {\n                    // Log\n                    logMessage("[gd-sprest][WebParts] Completed the requests.");\n                    // Resolve the promise\n                    resolve();\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            };\n            // Create the custom actions\n            var createSiteCollectionCustomActions = function createSiteCollectionCustomActions() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are targeting the site collection\n                if (cfg.CustomActionCfg && cfg.CustomActionCfg.Site) {\n                  // Log\n                  logMessage("[gd-sprest][Site Custom Actions] Starting the requests.");\n                  // Get the site\n                  (0, lib_1.Site)(webUrl, {\n                    disableCache: true,\n                    requestDigest: _requestDigest\n                  })\n                  // Get the user custom actions\n                  .UserCustomActions().execute(function (customActions) {\n                    // Create the user custom actions\n                    createUserCustomActions(customActions, cfg.CustomActionCfg.Site).then(function () {\n                      // Log\n                      logMessage("[gd-sprest][Site Custom Actions] Completed the requests.");\n                      // Resolve the promise\n                      resolve();\n                    }, reject);\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            };\n            // Create the custom actions\n            var createSiteCustomActions = function createSiteCustomActions() {\n              // Return a promise\n              return new Promise(function (resolve, reject) {\n                // See if we are targeting the web\n                if (cfg.CustomActionCfg && cfg.CustomActionCfg.Web) {\n                  // Log\n                  logMessage("[gd-sprest][Web Custom Actions] Starting the requests.");\n                  // Get the user custom actions\n                  web.UserCustomActions().execute(function (customActions) {\n                    // Create the user custom actions\n                    createUserCustomActions(customActions, cfg.CustomActionCfg.Web).then(function () {\n                      // Log\n                      logMessage("[gd-sprest][Web Custom Actions] Completed the requests.");\n                      // Resolve the promise\n                      resolve();\n                    });\n                  }, reject);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            };\n            // Create the site fields\n            createSiteFields().then(function () {\n              // Create the site content types\n              createSiteContentTypes().then(function () {\n                // Create the site lists\n                createSiteLists().then(function () {\n                  // Create the webparts\n                  createSiteWebParts().then(function () {\n                    // Create the site collection custom actions\n                    createSiteCollectionCustomActions().then(function () {\n                      // Create the site custom actions\n                      createSiteCustomActions().then(function () {\n                        // Log\n                        logMessage("[gd-sprest] The configuration script completed, but some requests may still be running.");\n                        // Resolve the request\n                        resolve();\n                      }, reject);\n                    }, reject);\n                  }, reject);\n                }, reject);\n              }, reject);\n            }, reject);\n          }, reject);\n        });\n      });\n    },\n    // Method to update the web url to target\n    setWebUrl: function setWebUrl(url) {\n      webUrl = url;\n    },\n    // Method to uninstall the configuration\n    uninstall: function uninstall() {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // Set the request digest\n        setRequestDigest().then(function () {\n          // Uninstall the web components\n          uninstallWeb().then(function () {\n            // Uninstall the site components\n            uninstallSite().then(function () {\n              // Log\n              logMessage("[gd-sprest] The configuration script completed, but some requests may still be running.");\n              // Resolve the promise\n              resolve();\n            }, reject);\n          }, reject);\n        });\n      });\n    }\n  };\n};\nexports.SPConfig = SPConfig;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/spCfg.js?')},"./build/helper/spCfgTypes.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SPCfgType = exports.SPCfgFieldType = void 0;\n/**\n * SharePoint Configuration Field Types\n */\nexports.SPCfgFieldType = {\n  Boolean: 0,\n  Calculated: 1,\n  Choice: 2,\n  Currency: 3,\n  Date: 4,\n  Geolocation: 5,\n  Guid: 6,\n  Image: 7,\n  Lookup: 8,\n  MMS: 9,\n  Note: 10,\n  Number: 11,\n  Text: 12,\n  Url: 13,\n  User: 14\n};\n/**\n * SharePoint Configuration Types\n * The value determines the order to install the object type.\n */\nexports.SPCfgType = {\n  Fields: 0,\n  ContentTypes: 1,\n  Lists: 2,\n  SiteUserCustomActions: 3,\n  WebParts: 5,\n  WebUserCustomActions: 4\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/spCfgTypes.js?')},"./build/helper/sp/calloutManager.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.CalloutManager = void 0;\n/**\n * Callout Manager\n */\nexports.CalloutManager = function () {\n  // Return the callout manager\n  return {\n    /** Closes all callouts on the page. */\n    closeAll: function closeAll() {\n      // Load the library and call the method\n      return window["CalloutManager"].closeAll();\n    },\n    /** Returns true if the associated callout is open. */\n    containsOneCalloutOpen: function containsOneCalloutOpen(el) {\n      // Load the library and call the method\n      return window["CalloutManager"].containsOneCalloutOpen(el);\n    },\n    /** Returns an callout action entry. */\n    createAction: function createAction(options) {\n      // Create the callout action options entry\n      var caOptions = new window["CalloutActionOptions"]();\n      // Update the options\n      for (var key in options) {\n        // Set the option\n        caOptions[key] = options[key];\n      }\n      // Create the action\n      return new window["CalloutAction"](caOptions);\n    },\n    /** Returns an callout action menu entries. */\n    createMenuEntries: function createMenuEntries(entries) {\n      var menuEntries = [];\n      // Parse the action options\n      for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n        // Add the action\n        menuEntries.push(new window["CalloutActionMenuEntry"](entry.text, entry.onClickCallback, entry.iconUrl));\n      }\n      // Return the action menu entries\n      return menuEntries;\n    },\n    /** Creates a new callout. */\n    createNew: function createNew(options) {\n      // Load the library and call the method\n      return window["CalloutManager"].createNew(options);\n    },\n    /** Checks if the callout id exists, before creating it. */\n    createNewIfNecessary: function createNewIfNecessary(options) {\n      // Load the library and call the method\n      return window["CalloutManager"].createNewIfNecessary(options);\n    },\n    /** Performs an action on each callout on the page. */\n    forEach: function forEach(callback) {\n      // Load the library and call the method\n      return window["CalloutManager"].forEach(callback);\n    },\n    /** Finds the closest launch point and returns the callout associated with it. */\n    getFromCalloutDescendant: function getFromCalloutDescendant(descendant) {\n      return window["CalloutManager"].getFromCalloutDescendant(descendant);\n    },\n    /** Returns the callout from the specified launch point. */\n    getFromLaunchPoint: function getFromLaunchPoint(launchPoint) {\n      return window["CalloutManager"].getFromLaunchPoint(launchPoint);\n    },\n    /** Returns the callout for the specified launch point, null if it doesn\'t exist. */\n    getFromLaunchPointIfExists: function getFromLaunchPointIfExists(launchPoint) {\n      return window["CalloutManager"].getFromLaunchPointIfExists(launchPoint);\n    },\n    /** Returns true if at least one callout is defined on the page is opened or opening. */\n    isAtLeastOneCalloutOn: function isAtLeastOneCalloutOn() {\n      return window["CalloutManager"].isAtLeastOneCalloutOn();\n    },\n    /** Returns true if at least one callout is opened on the page. */\n    isAtLeastOneCalloutOpen: function isAtLeastOneCalloutOpen() {\n      return window["CalloutManager"].isAtLeastOneCalloutOpen();\n    },\n    // Ensures the core library is loaded\n    init: function init() {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // See if the class exists\n        if (window["CalloutManager"]) {\n          resolve();\n        } else {\n          // Wait for the core script to be loaded\n          window["SP"].SOD.executeFunc("callout.js", "Callout", function () {\n            // Resolve the promise\n            resolve();\n          });\n        }\n      });\n    },\n    /** Removes the callout and destroys it. */\n    remove: function remove(callout) {\n      // Load the library and call the method\n      return window["CalloutManager"].remove(callout);\n    }\n  };\n}();\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/calloutManager.js?')},"./build/helper/sp/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SP = void 0;\nvar calloutManager_1 = __webpack_require__(/*! ./calloutManager */ "./build/helper/sp/calloutManager.js");\nvar modalDialog_1 = __webpack_require__(/*! ./modalDialog */ "./build/helper/sp/modalDialog.js");\nvar notify_1 = __webpack_require__(/*! ./notify */ "./build/helper/sp/notify.js");\nvar ribbon_1 = __webpack_require__(/*! ./ribbon */ "./build/helper/sp/ribbon.js");\nvar sod_1 = __webpack_require__(/*! ./sod */ "./build/helper/sp/sod.js");\nvar status_1 = __webpack_require__(/*! ./status */ "./build/helper/sp/status.js");\nexports.SP = {\n  CalloutManager: calloutManager_1.CalloutManager,\n  ModalDialog: modalDialog_1.ModalDialog,\n  Notify: notify_1.Notify,\n  Ribbon: ribbon_1.Ribbon,\n  SOD: sod_1.SOD,\n  Status: status_1.Status\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/index.js?')},"./build/helper/sp/modalDialog.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ModalDialog = void 0;\n/**\n * Modal Dialog\n */\nexports.ModalDialog = function () {\n  // Adds the custom methods to the dialog\n  var getDialog = function getDialog(dialog) {\n    // Shows the dialog\n    dialog.show = function () {\n      // Get the modal dialog element\n      var el = dialog.get_dialogElement();\n      if (el) {\n        // Show the dialog\n        el.style.display = "";\n      }\n      // Get the iframe element\n      el = dialog.get_frameElement();\n      if (el) {\n        // Show the dialog\n        el.style.display = "";\n      }\n    };\n    // Updates the title\n    dialog.setTitle = function (value) {\n      // Get the title element\n      var elDlg = dialog.get_dialogElement();\n      var elTitle = elDlg ? elDlg.querySelector(".ms-dlgLoadingTextDiv .ms-core-pageTitle") : null;\n      elTitle = elTitle || elDlg.querySelector(".ms-dlgTitle .ms-dlgTitleText");\n      if (elTitle) {\n        // Update the title\n        elTitle.innerHTML = value;\n      }\n    };\n    // Updates the sub-title\n    dialog.setSubTitle = function (value) {\n      // Get the sub-title element\n      var elDlg = dialog.get_dialogElement();\n      var elSubTitle = elDlg ? elDlg.querySelector(".ms-dlgLoadingTextDiv ~ div") : null;\n      if (elSubTitle) {\n        // Update the sub-title\n        elSubTitle.innerHTML = value;\n      }\n    };\n    // Return the dialog\n    return dialog;\n  };\n  // Return the modal dialog\n  return {\n    // Close the dialog\n    commonModalDialogClose: function commonModalDialogClose(dialogResult, returnVal) {\n      // Load the library and call the method\n      exports.ModalDialog.load().then(function () {\n        window["SP"].UI.ModalDialog.commonModalDialogClose(dialogResult, returnVal);\n      });\n    },\n    // Open a dialog\n    commonModalDialogOpen: function commonModalDialogOpen(url, options, callback, args) {\n      // Load the library and call the method\n      exports.ModalDialog.load().then(function () {\n        window["SP"].UI.ModalDialog.commonModalDialogOpen(url, options, callback, args);\n      });\n    },\n    // Method to ensure the core library is loaded\n    load: function load() {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // See if the class exists\n        if (window["SP"] && window["SP"].UI && window["SP"].UI.ModalDialog) {\n          resolve();\n        } else {\n          // Wait for the core script to be loaded\n          window["SP"].SOD.executeFunc("sp.js", "SP.UI.ModalDialog", function () {\n            // Resolve the promise\n            resolve();\n          });\n        }\n      });\n    },\n    // Opens a pop-up page\n    OpenPopUpPage: function OpenPopUpPage(url, callback, width, height) {\n      // Load the library and call the method\n      exports.ModalDialog.load().then(function () {\n        window["SP"].UI.ModalDialog.OpenPopUpPage(url, callback, width, height);\n      });\n    },\n    // Refreshes the page\n    RefreshPage: function RefreshPage(dialogResult) {\n      // Load the library and call the method\n      exports.ModalDialog.load().then(function () {\n        window["SP"].UI.ModalDialog.RefreshPage(dialogResult);\n      });\n    },\n    // Shows a modal dialog\n    showModalDialog: function showModalDialog(options) {\n      // Return a promise\n      return new Promise(function (resolve) {\n        // Load the library and call the method\n        exports.ModalDialog.load().then(function () {\n          // Resolve the promise\n          resolve(getDialog(window["SP"].UI.ModalDialog.showModalDialog(options)));\n        });\n      });\n    },\n    // Shows a pop-up dialog\n    ShowPopupDialog: function ShowPopupDialog(url) {\n      // Load the library and call the method\n      exports.ModalDialog.load().then(function () {\n        window["SP"].UI.ModalDialog.ShowPopupDialog(url);\n      });\n    },\n    // Shows a wait screen\n    showWaitScreenSize: function showWaitScreenSize(title, message, callback, height, width) {\n      // Return a promise\n      return new Promise(function (resolve) {\n        // Load the library and call the method\n        exports.ModalDialog.load().then(function () {\n          // Resolve the promise\n          resolve(getDialog(window["SP"].UI.ModalDialog.showWaitScreenSize(title, message, callback, height, width)));\n        });\n      });\n    },\n    // Shows a wait screen w/ no close button\n    showWaitScreenWithNoClose: function showWaitScreenWithNoClose(title, message, height, width) {\n      // Return a promise\n      return new Promise(function (resolve) {\n        // Load the library and call the method\n        exports.ModalDialog.load().then(function () {\n          // Resolve the promise\n          resolve(getDialog(window["SP"].UI.ModalDialog.showWaitScreenWithNoClose(title, message, height, width)));\n        });\n      });\n    }\n  };\n}();\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/modalDialog.js?')},"./build/helper/sp/notify.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Notify = void 0;\n/**\n * Notification\n */\nexports.Notify = {\n  // Adds a notification\n  addNotification: function addNotification(html, sticky) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the library and call the method\n      exports.Notify.load().then(function () {\n        resolve(window["SP"].UI.Notify.addNotification(html, sticky));\n      });\n    });\n  },\n  // Method to ensure the core library is loaded\n  load: function load() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the class exists\n      if (window["SP"] && window["SP"].UI && window["SP"].UI.Notify) {\n        resolve();\n      } else {\n        // Wait for the core script to be loaded\n        window["SP"].SOD.executeFunc("sp.js", "SP.UI.Notify", function () {\n          // Resolve the promise\n          resolve();\n        });\n      }\n    });\n  },\n  // Removes a notification\n  removeNotification: function removeNotification(id) {\n    // Load the library and call the method\n    exports.Notify.load().then(function () {\n      window["SP"].UI.Notify.removeNotification(id);\n    });\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/notify.js?')},"./build/helper/sp/ribbon.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Ribbon = void 0;\n/**\n * Ribbon\n */\nexports.Ribbon = {\n  get exists() {\n    return window["Ribbon"] != null && window["Ribbon"].PageState != null;\n  },\n  PageState: {\n    Handlers: {\n      get isApproveEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isApproveEnabled : null;\n      },\n      get isCancelApprovalEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isCancelApprovalEnabled : null;\n      },\n      get isCheckinEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isCheckinEnabled : null;\n      },\n      get isCheckoutEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isCheckoutEnabled : null;\n      },\n      get isDeleteEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isDeleteEnabled : null;\n      },\n      get isDiscardcheckoutEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isDiscardcheckoutEnabled : null;\n      },\n      get isDontSaveAndStopEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isDontSaveAndStopEnabled : null;\n      },\n      get isEditEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isEditEnabled : null;\n      },\n      get isInEditMode() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isInEditMode : null;\n      },\n      get isOverrideCheckoutEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isOverrideCheckoutEnabled : null;\n      },\n      get isPublishEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isPublishEnabled : null;\n      },\n      get isRejectEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isRejectEnabled : null;\n      },\n      get isSaveAndStopEditEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isSaveAndStopEditEnabled : null;\n      },\n      get isSaveEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isSaveEnabled : null;\n      },\n      get isSubmitForApprovalEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isSubmitForApprovalEnabled : null;\n      },\n      get isUnpublishEnabled() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.isUnpublishEnabled : null;\n      },\n      get onCancelButton() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.onCancelButton : null;\n      },\n      get onOkButton() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.onOkButton : null;\n      },\n      get showStateChangeDialog() {\n        return window["Ribbon"] && window["Ribbon"].PageState && window["Ribbon"].PageState.Handlers ? window["Ribbon"].PageState.Handlers.showStateChangeDialog : null;\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/ribbon.js?')},"./build/helper/sp/sod.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SOD = void 0;\n/**\n * Script on Demand (SOD)\n */\nexports.SOD = {\n  // Executes the specified function in the specified file with the optional arguments.\n  execute: function execute(key, functionName) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    window["SP"] ? window["SP"].SOD.execute(key, functionName, args) : null;\n  },\n  // Ensures that the specified file that contains the specified function is loaded and then runs the specified callback function.\n  executeFunc: function executeFunc(key, functionName, fn) {\n    window["SP"] ? window["SP"].SOD.executeFunc(key, functionName, fn) : null;\n  },\n  // Executes the specified function if the specified event has occurred; otherwise, adds the function to the pending job queue.\n  executeOrDelayUntilEventNotified: function executeOrDelayUntilEventNotified(func, eventName) {\n    window["SP"] ? window["SP"].SOD.executeOrDelayUntilEventNotified(func, eventName) : null;\n  },\n  // Executes the specified function if the file containing it is loaded; otherwise, adds it to the pending job queue.\n  executeOrDelayUntilScriptLoaded: function executeOrDelayUntilScriptLoaded(func, depScriptFileName) {\n    window["SP"] ? window["SP"].SOD.executeOrDelayUntilScriptLoaded(func, depScriptFileName) : null;\n  },\n  // Records the event and executes any jobs in the pending job queue that are waiting on the event.\n  notifyEventAndExecuteWaitingJobs: function notifyEventAndExecuteWaitingJobs(eventName) {\n    window["SP"] ? window["SP"].SOD.notifyEventAndExecuteWaitingJobs(eventName) : null;\n  },\n  // Records that the script file is loaded and executes any jobs in the pending job queue that are waiting for the script file to be loaded.\n  notifyScriptLoadedAndExecuteWaitingJobs: function notifyScriptLoadedAndExecuteWaitingJobs(scriptFileName) {\n    window["SP"] ? window["SP"].SOD.notifyScriptLoadedAndExecuteWaitingJobs(scriptFileName) : null;\n  },\n  // Registers the specified file at the specified URL.\n  registerSod: function registerSod(key, url) {\n    window["SP"] ? window["SP"].SOD.registerSod(key, url) : null;\n  },\n  // Registers the specified file as a dependency of another file.\n  registerSodDep: function registerSodDep(key, dep) {\n    window["SP"] ? window["SP"].SOD.registerSodDep(key, dep) : null;\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/sod.js?')},"./build/helper/sp/status.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Status = void 0;\n/**\n * Status\n */\nexports.Status = {\n  // Adds a status\n  addStatus: function addStatus(title, html, prepend) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the library\n      exports.Status.load().then(function () {\n        // Add the status and resolve the promise\n        resolve(window["SP"].UI.Status.addStatus(title, html, prepend));\n      });\n    });\n  },\n  // Appends a status\n  appendStatus: function appendStatus(id, title, html) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the library\n      exports.Status.load().then(function () {\n        // Add the status and resolve the promise\n        resolve(window["SP"].UI.Status.appendStatus(id, title, html));\n      });\n    });\n  },\n  // Method to ensure the core library is loaded\n  load: function load() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // See if the class exists\n      if (window["SP"] && window["SP"].UI && window["SP"].UI.Status) {\n        resolve();\n      } else {\n        // Wait for the core script to be loaded\n        window["SP"].SOD.executeFunc("sp.js", "SP.UI.Status", function () {\n          // Resolve the promise\n          resolve();\n        });\n      }\n    });\n  },\n  // Removes all status messages\n  removeAllStatus: function removeAllStatus(hide) {\n    // Load the library and call the method\n    exports.Status.load().then(function () {\n      window["SP"].UI.Status.removeAllStatus(hide);\n    });\n  },\n  // Removes a status\n  removeStatus: function removeStatus(id) {\n    // Load the library and call the method\n    exports.Status.load().then(function () {\n      window["SP"].UI.Status.removeStatus(id);\n    });\n  },\n  // Sets the status color\n  setStatusPriColor: function setStatusPriColor(id, color) {\n    // Load the library and call the method\n    exports.Status.load().then(function () {\n      window["SP"].UI.Status.setStatusPriColor(id, color);\n    });\n  },\n  // Updates the status\n  updateStatus: function updateStatus(id, html) {\n    // Load the library and call the method\n    exports.Status.load().then(function () {\n      window["SP"].UI.Status.updateStatus(id, html);\n    });\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/sp/status.js?')},"./build/helper/taxonomy.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Taxonomy = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ../lib/contextInfo */ "./build/lib/contextInfo.js");\n/**\n * Taxonomy Helper Class\n */\nexports.Taxonomy = {\n  /**\n   * Method to find a term by id\n   */\n  findById: function findById(term, termId) {\n    // See if this is the root node\n    if (term.info && term.info.id == termId) {\n      // Return the root node\n      return term;\n    }\n    // Parse the child nodes\n    for (var prop in term) {\n      // Skip the info and parent\n      if (prop == "info" || prop == "parent") {\n        continue;\n      }\n      // Find the term by id\n      var childTerm = exports.Taxonomy.findById(term[prop], termId);\n      if (childTerm) {\n        return childTerm;\n      }\n    }\n  },\n  /**\n   * Method to find a term by name\n   */\n  findByName: function findByName(term, termName) {\n    // See if this is the root node\n    if (term.info && term.info.name == termName) {\n      // Return the root node\n      return term;\n    }\n    // Parse the child nodes\n    for (var prop in term) {\n      // Skip the info and parent\n      if (prop == "info" || prop == "parent") {\n        continue;\n      }\n      // Find the term by id\n      var childTerm = exports.Taxonomy.findByName(term[prop], termName);\n      if (childTerm) {\n        return childTerm;\n      }\n    }\n  },\n  /**\n   * Method to get the terms\n   */\n  getTerms: function getTerms(termSet, termSetTerms) {\n    var terms = [];\n    // Add the root term\n    terms.push({\n      description: termSet.get_description(),\n      id: termSet.get_id().toString(),\n      name: termSet.get_name(),\n      path: [],\n      pathAsString: "",\n      props: termSet.get_customProperties()\n    });\n    // Parse the term sets terms\n    var enumerator = termSetTerms.getEnumerator();\n    while (enumerator.moveNext()) {\n      var term = enumerator.get_current();\n      // Create the terms\n      terms.push({\n        description: term.get_description(),\n        id: term.get_id().toString(),\n        name: term.get_name(),\n        path: term.get_pathOfTerm().split(";"),\n        pathAsString: term.get_pathOfTerm(),\n        props: term.get_customProperties()\n      });\n    }\n    // Sort the terms\n    terms = terms.sort(function (a, b) {\n      if (a.pathAsString < b.pathAsString) {\n        return -1;\n      }\n      if (a.pathAsString > b.pathAsString) {\n        return 1;\n      }\n      return 0;\n    });\n    // Return the terms\n    return terms;\n  },\n  /**\n   * Method to get the term group\n   */\n  getTermGroup: function getTermGroup(groupName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the scripts\n      exports.Taxonomy.loadScripts().then(function () {\n        // Get the taxonomy session\n        var context = SP.ClientContext.get_current();\n        var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\n        // See if we are getting a specific group name\n        if (groupName) {\n          // Resolve the promise\n          var termStores_1 = session.get_termStores();\n          context.load(termStores_1, "Include(Groups)");\n          context.executeQueryAsync(function () {\n            // Get the default store\n            var enumerator = termStores_1.getEnumerator();\n            var termStore = enumerator.moveNext() ? enumerator.get_current() : null;\n            if (termStore) {\n              // Get the term group\n              var termGroup = termStore.get_groups().getByName(groupName);\n              context.load(termGroup);\n              // Resolve the promise\n              resolve({\n                context: context,\n                termGroup: termGroup\n              });\n            } else {\n              // Reject the promise\n              reject("Unable to find the taxonomy store.");\n            }\n          }, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            // Reject the promise\n            reject(args[1].get_message());\n          });\n        } else {\n          // Get the default site collection group\n          var termStore = session.getDefaultSiteCollectionTermStore();\n          var termGroup = termStore.getSiteCollectionGroup(context.get_site());\n          context.load(termGroup);\n          // Resolve the promise\n          resolve({\n            context: context,\n            termGroup: termGroup\n          });\n        }\n      });\n    });\n  },\n  /**\n   * Method to get the term groups\n   */\n  getTermGroups: function getTermGroups() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the scripts\n      exports.Taxonomy.loadScripts().then(function () {\n        // Get the taxonomy session\n        var context = SP.ClientContext.get_current();\n        var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\n        // Resolve the promise\n        var termStores = session.get_termStores();\n        context.load(termStores, "Include(Groups)");\n        context.executeQueryAsync(function () {\n          // Get the default store\n          var enumerator = termStores.getEnumerator();\n          var termStore = enumerator.moveNext() ? enumerator.get_current() : null;\n          if (termStore) {\n            // Get the term groups\n            var termGroups_1 = termStore.get_groups();\n            context.load(termGroups_1, "Include(Description, Id, Name)");\n            // Execute the request\n            context.executeQueryAsync(\n            // Success\n            function () {\n              var groups = [];\n              // Parse the groups\n              var enumerator = termGroups_1.getEnumerator();\n              while (enumerator.moveNext()) {\n                var group = enumerator.get_current();\n                // Add the group information\n                groups.push({\n                  description: group.get_description(),\n                  id: group.get_id().toString(),\n                  name: group.get_name()\n                });\n              }\n              // Resolve the promise\n              resolve(groups);\n            }, function () {\n              var args = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n              }\n              // Reject the promise\n              reject(args[1].get_message());\n            });\n          } else {\n            // Reject the promise\n            reject("Unable to find the taxonomy store.");\n          }\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      });\n    });\n  },\n  /**\n   * Method to get the term sets for a group\n   */\n  getTermSets: function getTermSets(groupName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the term gruop\n      exports.Taxonomy.getTermGroup(groupName).then(\n      // Success\n      function (_a) {\n        var context = _a.context,\n          termGroup = _a.termGroup;\n        // Get the term group information\n        var termGroupInfo = termGroup.get_termSets();\n        context.load(termGroupInfo, "Include(CustomProperties, Description, Id, Name)");\n        // Execute the request\n        context.executeQueryAsync(function () {\n          var termSets = [];\n          // Parse the term group information\n          var enumerator = termGroupInfo.getEnumerator();\n          while (enumerator.moveNext()) {\n            var termSet = enumerator.get_current();\n            // Add the group information\n            termSets.push({\n              description: termSet.get_description(),\n              id: termSet.get_id().toString(),\n              name: termSet.get_name(),\n              props: termSet.get_customProperties()\n            });\n          }\n          // Resolve the promise\n          resolve(termSets);\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      },\n      // Error\n      function (reason) {\n        // Reject the promise\n        reject(reason);\n      });\n    });\n  },\n  /**\n   * Method to get the term sets from the default site collection.\n   */\n  getTermSetsFromDefaultSC: function getTermSetsFromDefaultSC() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the scripts\n      exports.Taxonomy.loadScripts().then(function () {\n        // Get the taxonomy session\n        var context = SP.ClientContext.get_current();\n        var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\n        // Get the terms sets from the default site collection\n        var termStore = session.getDefaultSiteCollectionTermStore();\n        var termGroup = termStore.getSiteCollectionGroup(context.get_site());\n        var termGroupInfo = termGroup.get_termSets();\n        context.load(termGroupInfo, "Include(CustomProperties, Description, Id, Name)");\n        // Execute the request\n        context.executeQueryAsync(\n        // Success\n        function () {\n          var termSets = [];\n          // Parse the term group information\n          var enumerator = termGroupInfo.getEnumerator();\n          while (enumerator.moveNext()) {\n            var termSet = enumerator.get_current();\n            // Add the group information\n            termSets.push({\n              description: termSet.get_description(),\n              id: termSet.get_id().toString(),\n              name: termSet.get_name(),\n              props: termSet.get_customProperties()\n            });\n          }\n          // Resolve the promise\n          resolve(termSets);\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      });\n    });\n  },\n  /**\n   * Method to get the terms by id\n   */\n  getTermsById: function getTermsById(termStoreId, termSetId) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Load the scripts\n      exports.Taxonomy.loadScripts().then(function () {\n        // Get the taxonomy session\n        var context = SP.ClientContext.get_current();\n        var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\n        // Get the term set terms\n        var termStore = session.get_termStores().getById(termStoreId);\n        var termSet = termStore.getTermSet(termSetId);\n        var terms = termSet.getAllTerms();\n        context.load(termSet);\n        context.load(terms, "Include(CustomProperties, Description, Id, Name, PathOfTerm)");\n        // Execute the request\n        context.executeQueryAsync(function () {\n          // Resolve the promise\n          resolve(exports.Taxonomy.getTerms(termSet, terms));\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      });\n    });\n  },\n  /**\n   * Method to get the term set by id\n   */\n  getTermSetById: function getTermSetById(termStoreId, termSetId) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the terms\n      exports.Taxonomy.getTermsById(termStoreId, termSetId).then(\n      // Success\n      function (terms) {\n        // Resolve the promise\n        resolve(exports.Taxonomy.toObject(terms));\n      },\n      // Error\n      function (reason) {\n        // Reject the promise\n        reject(reason);\n      });\n    });\n  },\n  /**\n   * Method to get the terms from the default site collection\n   */\n  getTermsFromDefaultSC: function getTermsFromDefaultSC(termSetName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the term group\n      exports.Taxonomy.getTermGroup().then(\n      // Success\n      function (_a) {\n        var context = _a.context,\n          termGroup = _a.termGroup;\n        // Get the term set terms\n        var termSet = termGroup.get_termSets().getByName(termSetName);\n        var terms = termSet.getAllTerms();\n        context.load(termSet);\n        context.load(terms, "Include(CustomProperties, Description, Id, Name, PathOfTerm)");\n        // Execute the request\n        context.executeQueryAsync(function () {\n          // Resolve the promise\n          resolve(exports.Taxonomy.getTerms(termSet, terms));\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      },\n      // Error\n      function (reason) {\n        // Reject the promise\n        reject(reason);\n      });\n    });\n  },\n  /**\n   * Method to get the term set from the default site collection\n   */\n  getTermSetFromDefaultSC: function getTermSetFromDefaultSC(termSetName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the terms\n      exports.Taxonomy.getTermsFromDefaultSC(termSetName).then(\n      // Success\n      function (terms) {\n        // Resolve the object\n        resolve(exports.Taxonomy.toObject(terms));\n      },\n      // Error\n      function (reason) {\n        // Reject the promise\n        reject(reason);\n      });\n    });\n  },\n  /**\n   * Method to get a terms from a specified group\n   */\n  getTermsByGroupName: function getTermsByGroupName(termSetName, groupName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the term group\n      exports.Taxonomy.getTermGroup(groupName).then(function (_a) {\n        var context = _a.context,\n          termGroup = _a.termGroup;\n        // Get the term set terms\n        var termSet = termGroup.get_termSets().getByName(termSetName);\n        var terms = termSet.getAllTerms();\n        context.load(termSet);\n        context.load(terms, "Include(CustomProperties, Description, Id, Name, PathOfTerm)");\n        // Execute the request\n        context.executeQueryAsync(function () {\n          // Resolve the promise\n          resolve(exports.Taxonomy.getTerms(termSet, terms));\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Reject the promise\n          reject(args[1].get_message());\n        });\n      });\n    });\n  },\n  /**\n   * Method to get the term set from the default site collection\n   */\n  getTermSetByGroupName: function getTermSetByGroupName(termSetName, groupName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Get the terms\n      exports.Taxonomy.getTermsByGroupName(termSetName, groupName).then(\n      // Success\n      function (terms) {\n        // Resolve the object\n        resolve(exports.Taxonomy.toObject(terms));\n      },\n      // Error\n      function (reason) {\n        // Reject the promise\n        reject(reason);\n      });\n    });\n  },\n  /**\n   * Method to ensure the taxonomy script references are loaded.\n   */\n  loadScripts: function loadScripts() {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Ensure the core script is loaded\n      SP.SOD.executeFunc("sp.js", "SP.Utilities.Utility", function () {\n        // Ensure the taxonomy script is loaded\n        SP.SOD.registerSod("sp.taxonomy.js", contextInfo_1.ContextInfo.webServerRelativeUrl + "/_layouts/15/sp.taxonomy.js");\n        SP.SOD.executeFunc("sp.taxonomy.js", "SP.Taxonomy.TaxonomySession", function () {\n          // Resolve the promise\n          resolve();\n        });\n      }, "sp.js");\n    });\n  },\n  /**\n   * Method to convert a term to an array of term information\n   */\n  toArray: function toArray(term) {\n    var terms = [];\n    // Recursive method to extract the child terms\n    var _getChildTerms = function getChildTerms(term, terms) {\n      // Parse the properties\n      for (var prop in term) {\n        // Skip the info and parent properties\n        if (prop == "info" || prop == "parent") {\n          continue;\n        }\n        // Add the child term\n        var childTerm = term[prop];\n        terms.push(childTerm.info);\n        // Add the child terms\n        _getChildTerms(childTerm, terms);\n      }\n    };\n    // Ensure the term exists\n    if (term) {\n      // See if the root node contains term information\n      if (term.info) {\n        // Add the root term\n        terms.push(term.info);\n      }\n      // Get the child terms\n      _getChildTerms(term, terms);\n    }\n    // Return the child terms\n    return terms;\n  },\n  /**\n   * Method to convert a term to a field value\n   */\n  toFieldValue: function toFieldValue(term) {\n    var termInfo = term ? term["info"] || term : null;\n    // Ensure the term exists\n    if (termInfo) {\n      return {\n        __metadata: {\n          "type": "SP.Taxonomy.TaxonomyFieldValue"\n        },\n        Label: termInfo.name,\n        TermGuid: termInfo.id,\n        WssId: -1\n      };\n    }\n    // Return nothing\n    return null;\n  },\n  /**\n   * Method to convert a collection of terms to a field value\n   */\n  toFieldMultiValue: function toFieldMultiValue(terms) {\n    var results = [];\n    // Ensure terms exist\n    if (terms && terms.length > 0) {\n      // Parse the terms\n      for (var i = 0; i < terms.length; i++) {\n        var termInfo = terms[i]["info"] || terms[i];\n        // Add the term\n        results.push(";#" + termInfo.name + "|" + termInfo.id);\n      }\n    }\n    // Return a blank array\n    return {\n      __metadata: {\n        type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"\n      },\n      results: results\n    };\n  },\n  /**\n   * Method to convert the terms to an object\n   */\n  toObject: function toObject(terms) {\n    var root = {};\n    // Recursive method to add terms\n    var addTerm = function addTerm(node, info, path) {\n      var term = node;\n      var termName = "";\n      // Loop for each term\n      while (path.length > 0) {\n        // Ensure the term exists\n        termName = path[0];\n        if (term[termName] == null) {\n          // Create the term\n          term[termName] = {};\n        }\n        // Set the term\n        var parent_1 = term;\n        term = term[termName];\n        // Set the parent\n        term.parent = parent_1;\n        // Remove the term from the path\n        path.splice(0, 1);\n      }\n      // Set the info\n      term.info = info;\n    };\n    // Ensure the terms exist\n    if (terms && terms.length > 0) {\n      // Parse the terms\n      for (var i = 0; i < terms.length; i++) {\n        var term = terms[i];\n        // See if this is the root term\n        if (term.pathAsString == "") {\n          // Set the root information\n          root.info = term;\n        } else {\n          // Add the term\n          addTerm(root, term, term.pathAsString.split(";"));\n        }\n      }\n      // Return the root term\n      return exports.Taxonomy.findById(root, terms[0].id);\n    }\n    // Return nothing\n    return null;\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/helper/taxonomy.js?')},"./build/helper/webpart.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.WebPart = void 0;\nvar ribbon_1 = __webpack_require__(/*! ./sp/ribbon */ "./build/helper/sp/ribbon.js");\n/**\n * Web Part\n */\nvar _WebPart = /** @class */function () {\n  /**\n   * Constructor\n   * @param props - The webpart properties.\n   */\n  function _WebPart(props) {\n    var _this = this;\n    this._props = null;\n    this._wp = null;\n    /**\n     * Method to add the help link to a script part editor.\n     * @wpId - The webpart id.\n     */\n    this.addHelpLink = function () {\n      // Ensure the help properties exist\n      if (_this._props.helpProps) {\n        // Get the webpart\'s "Snippet"\n        var link = document.querySelector("div[webpartid=\'" + _this._wp.wpId + "\'] a[title=\'Edit Snippet\']");\n        if (link) {\n          // Create the help link\n          var helpLink = document.createElement("a");\n          helpLink.href = _this._props.helpProps.url || "#";\n          helpLink.style.paddingLeft = "10px";\n          helpLink.setAttribute("role", "button");\n          helpLink.title = _this._props.helpProps.title || "Help";\n          helpLink.innerHTML = "<span class=\'ms-metadata\'>" + helpLink.title + "</span>";\n          helpLink.target = "_blank";\n          // Append the link\n          link.parentElement.appendChild(helpLink);\n        }\n      }\n    };\n    /**\n     * Method to get the webpart id for a specified element\n     * @param el - The target element.\n     */\n    this.getWebPartId = function (el) {\n      // Loop until we find the webpart id\n      while (el) {\n        // See if this element contains the webpart id\n        var wpId = el.getAttribute("webpartid");\n        if (wpId) {\n          // Return the webpart id\n          return wpId;\n        }\n        // Check the parent\n        el = el.parentElement;\n      }\n      // Unable to detect\n      return "";\n    };\n    /**\n     * Method to get the webpart information\n     */\n    this.getWebPartInfo = function () {\n      var targetInfo = {\n        cfg: null,\n        el: null,\n        wpId: null\n      };\n      // Ensure the element id exists\n      if (_this._props.elementId) {\n        // Get the webpart elements\n        var elements = document.querySelectorAll("#" + _this._props.elementId);\n        for (var i = 0; i < elements.length; i++) {\n          var elWebPart = elements[i];\n          // See if we have already configured this element\n          if (elWebPart.getAttribute("data-isConfigured")) {\n            continue;\n          }\n          // Get the webpart id\n          var wpId = _this.getWebPartId(elWebPart);\n          if (wpId) {\n            // See if the configuration element exists\n            var elCfg = _this._props.cfgElementId ? elWebPart.parentElement.querySelector("#" + _this._props.cfgElementId) : null;\n            if (elCfg) {\n              try {\n                // Parse the configuration\n                var cfg = JSON.parse(elCfg.innerText.trim());\n                // See if the webaprt id exists\n                if (cfg.WebPartId) {\n                  // See if it\'s for this webpart\n                  if (cfg.WebPartId == wpId) {\n                    // Set the target information\n                    targetInfo = {\n                      cfg: cfg,\n                      el: elWebPart,\n                      wpId: wpId\n                    };\n                    break;\n                  }\n                } else {\n                  // Set the target information\n                  targetInfo = {\n                    cfg: {\n                      WebPartId: wpId\n                    },\n                    el: elWebPart,\n                    wpId: wpId\n                  };\n                  break;\n                }\n              } catch (ex) {\n                // Set the target information\n                targetInfo = {\n                  cfg: {\n                    WebPartId: wpId\n                  },\n                  el: elWebPart,\n                  wpId: wpId\n                };\n                // Log\n                console.log("[sp-webpart] Error parsing the configuration for element \'" + _this._props.cfgElementId + "\'.");\n              }\n              // Break from the loop\n              break;\n            } else {\n              // Set the target information\n              targetInfo = {\n                cfg: {\n                  WebPartId: wpId\n                },\n                el: elWebPart,\n                wpId: wpId\n              };\n              break;\n            }\n          }\n        }\n        // Ensure elements were found\n        if (elements.length == 0) {\n          // Log\n          console.log("[sp-webpart] Error - Unable to find elements with id \'" + _this._props.elementId + "\'.");\n        }\n      } else {\n        // Log\n        console.log("[sp-webpart] The target element id is not defined.");\n      }\n      // Ensure the target element exists\n      if (targetInfo.el) {\n        // Set the configuration flag\n        targetInfo.el.setAttribute("data-isConfigured", "true");\n      }\n      // Return the target information\n      return targetInfo;\n    };\n    /**\n     * Method to render the webpart\n     */\n    this.render = function () {\n      var element = null;\n      // Get the webpart information\n      _this._wp = _this.getWebPartInfo();\n      if (_this._wp == null || _this._wp.el == null) {\n        // Log\n        console.log("[sp-webpart] The target webpart element \'" + _this._props.elementId + "\' was not found.");\n        return;\n      }\n      // See if the page is being edited\n      var returnVal = null;\n      if (exports.WebPart.isEditMode()) {\n        // Add the help link\n        _this.addHelpLink();\n        // Call the render event\n        if (_this._props.onRenderEdit) {\n          // Execute the render edit event\n          returnVal = _this._props.onRenderEdit(_this._wp);\n        }\n      } else {\n        // See if the configuration is defined, but has no value\n        if (_this._wp.cfg || (_this._props.cfgElementId || "").length == 0) {\n          // Execute the render edit event\n          returnVal = _this._props.onRenderDisplay(_this._wp);\n        } else {\n          // Render a message\n          _this._wp.el.innerHTML = \'<h3>Please edit the page and configure the webpart.</h3>\';\n        }\n      }\n      // See if a promise was returned\n      if (returnVal && returnVal.then) {\n        // Wait for the request to complete\n        returnVal.then(function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          // Execute the post render event\n          _this._props.onPostRender ? _this._props.onPostRender(_this._wp) : null;\n        });\n      } else {\n        // Execute the post render event\n        _this._props.onPostRender ? _this._props.onPostRender(_this._wp) : null;\n      }\n    };\n    // Set the properties\n    this._props = props || {};\n    // Add a load event\n    window.addEventListener("load", function () {\n      // Render the component\n      _this.render();\n    });\n  }\n  // Method to create an instance of the webpart\n  _WebPart.create = function (props) {\n    // Return an instance of the webpart\n    return new _WebPart(props);\n  };\n  // Generates the XML for a content editor webpart\n  _WebPart.generateContentEditorXML = function (props) {\n    return "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<WebPart xmlns=\\"http://schemas.microsoft.com/WebPart/v2\\">\\n    <Assembly>Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c</Assembly>\\n    <TypeName>Microsoft.SharePoint.WebPartPages.ContentEditorWebPart</TypeName>\\n    <Title>[[Title]]</Title>\\n    <Description>[[Description]]</Description>\\n    <FrameType>[[FrameType]]</FrameType>\\n    <ContentLink xmlns=\\"http://schemas.microsoft.com/WebPart/v2/ContentEditor\\">[[ContentLink]]</ContentLink>\\n    <Content xmlns=\\"http://schemas.microsoft.com/WebPart/v2/ContentEditor\\"><![CDATA[[[Content]]]]></Content>\\n</WebPart>".replace(/\\r?\\n/g, \'\').replace(/\\[\\[FrameType\\]\\]/g, props.frameType || "Default").replace(/\\[\\[Content\\]\\]/g, props.content || "").replace(/\\[\\[ContentLink\\]\\]/g, props.contentLink || "").replace(/\\[\\[Description\\]\\]/g, props.description || "").replace(/\\[\\[Title\\]\\]/g, props.title || "");\n  };\n  // Generates the XML for a script editor webpart\n  _WebPart.generateScriptEditorXML = function (props) {\n    return "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<webParts>\\n    <webPart xmlns=\\"http://schemas.microsoft.com/WebPart/v3\\">\\n        <metaData>\\n            <type name=\\"Microsoft.SharePoint.WebPartPages.ScriptEditorWebPart, Microsoft.SharePoint, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c\\" />\\n            <importErrorMessage>$Resources:core,ImportantErrorMessage;</importErrorMessage>\\n        </metaData>\\n        <data>\\n            <properties>\\n            <property name=\\"Title\\" type=\\"string\\">[[Title]]</property>\\n            <property name=\\"Description\\" type=\\"string\\">[[Description]]</property>\\n            <property name=\\"ChromeType\\" type=\\"chrometype\\">[[ChromeType]]</property>\\n            <property name=\\"Content\\" type=\\"string\\">[[Content]]</property>\\n        </properties>\\n        </data>\\n    </webPart>\\n</webParts>".replace(/\\r?\\n/g, \'\').replace(/\\[\\[ChromeType\\]\\]/g, props.chromeType || "TitleOnly").replace(/\\[\\[Content\\]\\]/g, props.content.replace(/\\</g, \'&lt;\').replace(/\\>/g, \'&gt;\')).replace(/\\[\\[Description\\]\\]/g, props.description || "").replace(/\\[\\[Title\\]\\]/g, props.title || "");\n  };\n  /**\n   * Method to detect if a page is being edited\n   */\n  _WebPart.isEditMode = function () {\n    // See if the ribbon page state exists\n    if (ribbon_1.Ribbon.PageState.Handlers.isInEditMode != null) {\n      // Return the mode\n      return ribbon_1.Ribbon.PageState.Handlers.isInEditMode;\n    }\n    // Get the form\n    var formName = window["MSOWebPartPageFormName"];\n    var form = formName ? document.forms[formName] : null;\n    if (form) {\n      // Get the wiki page mode\n      var wikiPageMode = form._wikiPageMode ? form._wikiPageMode.value : null;\n      // Get the webpart page mode\n      var wpPageMode = form.MSOLayout_InDesignMode ? form.MSOLayout_InDesignMode.value : null;\n      // Determine if the page is being edited\n      return wikiPageMode == "Edit" || wpPageMode == "1";\n    }\n    // Unable to determine\n    return false;\n  };\n  return _WebPart;\n}();\nexports.WebPart = _WebPart;\n\n//# sourceURL=webpack://gd-sprest/./build/helper/webpart.js?')},"./build/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.v2 = exports.Helper = void 0;\n// Type definitions for gd-sprest\n// Project: https://dattabase.com\n// Definitions by: Gunjan Datta <https://github.com/gunjandatta>\n/***************************************************************************************************\nMIT License\n\nCopyright (c) 2016 Dattabase, LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n***************************************************************************************************/\nvar Helper = __webpack_require__(/*! ./helper */ "./build/helper/index.js");\nexports.Helper = Helper;\n__exportStar(__webpack_require__(/*! ./lib */ "./build/lib/index.js"), exports);\n__exportStar(__webpack_require__(/*! ./mapper */ "./build/mapper/index.js"), exports);\n__exportStar(__webpack_require__(/*! ./rest */ "./build/rest.js"), exports);\n__exportStar(__webpack_require__(/*! ./sptypes */ "./build/sptypes/index.js"), exports);\nvar v2 = __webpack_require__(/*! ./v2 */ "./build/v2/index.js");\nexports.v2 = v2;\n\n//# sourceURL=webpack://gd-sprest/./build/index.js?')},"./build/lib/apps.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Apps = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Apps\n */\nexports.Apps = function (targetInfo) {\n  var apps = new utils_1.Base(targetInfo);\n  // Default the properties\n  apps.targetInfo.defaultToWebFl = true;\n  apps.targetInfo.endpoint = "apps";\n  // Add the methods\n  utils_1.Request.addMethods(apps, {\n    __metadata: {\n      type: "Microsoft.AppServices.AppCollection"\n    }\n  });\n  // Return the apps\n  return apps;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/apps.js?')},"./build/lib/contextInfo.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ContextInfo = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Context Information\n */\nvar _ContextInfo = /** @class */function () {\n  function _ContextInfo() {}\n  Object.defineProperty(_ContextInfo, "_contextInfo", {\n    // The current context information\n    get: function get() {\n      // Return the page context by default\n      if (this.window["_spPageContextInfo"]) {\n        return this.window["_spPageContextInfo"];\n      }\n      // See if the SPFx context was set\n      if (this._spfxPageContext && this._spfxPageContext.legacyPageContext) {\n        return this._spfxPageContext.legacyPageContext;\n      }\n      // Return a default object\n      return {\n        existsFl: false,\n        isAppWeb: false,\n        isHubSite: false,\n        isSPO: false,\n        siteAbsoluteUrl: "",\n        siteServerRelativeUrl: "",\n        userId: 0,\n        webAbsoluteUrl: "",\n        webServerRelativeUrl: ""\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ;\n  Object.defineProperty(_ContextInfo, "aadInstanceUrl", {\n    /**\n     * Properties\n     */\n    get: function get() {\n      return this._contextInfo.aadInstanceUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "aadTenantId", {\n    get: function get() {\n      return this._contextInfo.aadTenantId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "alertsEnabled", {\n    get: function get() {\n      return this._contextInfo.alertsEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "allowSilverlightPrompt", {\n    get: function get() {\n      return this._contextInfo.allowSilverlightPrompt == "True" ? true : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "canUserCreateMicrosoftForm", {\n    get: function get() {\n      return this._contextInfo.canUserCreateMicrosoftForm;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "canUserCreateVisioDrawing", {\n    get: function get() {\n      return this._contextInfo.canUserCreateVisioDrawing;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "cdnPrefix", {\n    get: function get() {\n      return this._contextInfo.cdnPrefix;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "clientServerTimeDelta", {\n    get: function get() {\n      return this._contextInfo.clientServerTimeDelta;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "CorrelationId", {\n    get: function get() {\n      return this._contextInfo.CorrelationId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "crossDomainPhotosEnabled", {\n    get: function get() {\n      return this._contextInfo.crossDomainPhotosEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "currentCultureName", {\n    get: function get() {\n      return this._contextInfo.currentCultureName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "currentLanguage", {\n    get: function get() {\n      return this._contextInfo.currentLanguage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "currentUICultureName", {\n    get: function get() {\n      return this._contextInfo.currentUICultureName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "departmentId", {\n    get: function get() {\n      return this._contextInfo.departmentId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "DesignPackageId", {\n    get: function get() {\n      return this._contextInfo.DesignPackageId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "disableAppViews", {\n    get: function get() {\n      return this._contextInfo.disableAppViews;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "disableFlows", {\n    get: function get() {\n      return this._contextInfo.disableFlows;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "document", {\n    get: function get() {\n      return this.window ? this.window.document : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "env", {\n    get: function get() {\n      return this._contextInfo.env;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "existsFl", {\n    get: function get() {\n      return this._contextInfo.existsFl == null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "farmLabel", {\n    get: function get() {\n      return this._contextInfo.farmLabel;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "fid", {\n    get: function get() {\n      return this._contextInfo.fid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "formDigestTimeoutSeconds", {\n    get: function get() {\n      return this._contextInfo.formDigestTimeoutSeconds;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "formDigestValue", {\n    get: function get() {\n      return this._contextInfo.formDigestValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "groupColor", {\n    get: function get() {\n      return this._contextInfo.groupColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "groupHasHomepage", {\n    get: function get() {\n      return this._contextInfo.groupHasHomepage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "groupId", {\n    get: function get() {\n      return this._contextInfo.groupId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "groupType", {\n    get: function get() {\n      return this._contextInfo.groupType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "guestsEnabled", {\n    get: function get() {\n      return this._contextInfo.guestsEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "hasManageWebPermissions", {\n    get: function get() {\n      return this._contextInfo.hasManageWebPermissions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "hasPendingWebTemplateExtension", {\n    get: function get() {\n      return this._contextInfo.hasPendingWebTemplateExtension;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "hideSyncButtonOnODB", {\n    get: function get() {\n      return this._contextInfo.hideSyncButtonOnODB;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "hubSiteId", {\n    get: function get() {\n      return this._contextInfo.hubSiteId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "idleSessionSignOutEnabled", {\n    get: function get() {\n      return this._contextInfo.idleSessionSignOutEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isAnonymousGuestUser", {\n    get: function get() {\n      return this._contextInfo.isAnonymousGuestUser;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isAppWeb", {\n    get: function get() {\n      return this._contextInfo.isAppWeb;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isArchived", {\n    get: function get() {\n      return this._contextInfo.isArchived;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isEmailAuthenticationGuestUser", {\n    get: function get() {\n      return this._contextInfo.isEmailAuthenticationGuestUser;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isExternalGuestUser", {\n    get: function get() {\n      return this._contextInfo.isExternalGuestUser;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isGroupRelatedSite", {\n    get: function get() {\n      return this._contextInfo.isGroupRelatedSite;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isGroupifyDisabled", {\n    get: function get() {\n      return this._contextInfo.isGroupifyDisabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isGroupifyMenuButtonFeatureOff", {\n    get: function get() {\n      return this._contextInfo.isGroupifyMenuButtonFeatureOff;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isHubSite", {\n    get: function get() {\n      return this._contextInfo.isHubSite;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isLocationserviceAvailable", {\n    get: function get() {\n      return this._contextInfo.isLocationserviceAvailable;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isMultiGeoODBMode", {\n    get: function get() {\n      return this._contextInfo.isMultiGeoODBMode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isMultiGeoTenant", {\n    get: function get() {\n      return this._contextInfo.isMultiGeoTenant;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isNoScriptEnabled", {\n    get: function get() {\n      return this._contextInfo.isNoScriptEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isSiteAdmin", {\n    get: function get() {\n      return this._contextInfo.isSiteAdmin;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isSiteOwner", {\n    get: function get() {\n      return this._contextInfo.isSiteOwner;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isSPO", {\n    get: function get() {\n      return this._contextInfo.isSPO;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isShareByLinkEnabled", {\n    get: function get() {\n      return this._contextInfo.isShareByLinkEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isTeamsChannelSite", {\n    get: function get() {\n      return this._contextInfo.isTeamsChannelSite;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isTeamsConnectedSite", {\n    get: function get() {\n      return this._contextInfo.isTeamsConnectedSite;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isTenantDevSite", {\n    get: function get() {\n      return this._contextInfo.isTenantDevSite;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isUnauthorizedTenant", {\n    get: function get() {\n      return this._contextInfo.isUnauthorizedTenant;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "isWebWelcomePage", {\n    get: function get() {\n      return this._contextInfo.isWebWelcomePage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "layoutsUrl", {\n    get: function get() {\n      return this._contextInfo.layoutsUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listBaseTemplate", {\n    get: function get() {\n      return this._contextInfo.listBaseTemplate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listBaseType", {\n    get: function get() {\n      return this._contextInfo.listBaseType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listId", {\n    get: function get() {\n      return this._contextInfo.listId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listItemCount", {\n    get: function get() {\n      return this._contextInfo.listItemCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listTitle", {\n    get: function get() {\n      return this._contextInfo.listTitle;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listPermsMask", {\n    get: function get() {\n      return this._contextInfo.listPermsMask;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "listUrl", {\n    get: function get() {\n      return this._contextInfo.listUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "maximumFileSize", {\n    get: function get() {\n      return this._contextInfo.maximumFileSize;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "modernThemingEnabled", {\n    get: function get() {\n      return this._contextInfo.modernThemingEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "msGraphEndpointUrl", {\n    get: function get() {\n      return this._contextInfo.msGraphEndpointUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "msMruEndpointUrl", {\n    get: function get() {\n      return this._contextInfo.msMruEndpointUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "multiGeoInfo", {\n    get: function get() {\n      return this._contextInfo.multiGeoInfo;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "navigationInfo", {\n    get: function get() {\n      return this._contextInfo.navigationInfo;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "nid", {\n    get: function get() {\n      return this._contextInfo.nid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "openInClient", {\n    get: function get() {\n      return this._contextInfo.openInClient;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "pageItemId", {\n    get: function get() {\n      return this._contextInfo.pageItemId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "pageListId", {\n    get: function get() {\n      return this._contextInfo.pageListId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "pagePermsMask", {\n    get: function get() {\n      return this._contextInfo.pagePermsMask;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "pagePersonalizationScope", {\n    get: function get() {\n      return this._contextInfo.pagePersonalizationScope;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "preferUserTimeZone", {\n    get: function get() {\n      return this._contextInfo.preferUserTimeZone;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "PreviewFeaturesEnabled", {\n    get: function get() {\n      return this._contextInfo.PreviewFeaturesEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "portalUrl", {\n    get: function get() {\n      return this._contextInfo.portalUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "profileUrl", {\n    get: function get() {\n      return this._contextInfo.profileUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "PublishingFeatureOn", {\n    get: function get() {\n      return this._contextInfo.PublishingFeatureOn;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "RecycleBinItemCount", {\n    get: function get() {\n      return this._contextInfo.RecycleBinItemCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "serverRedirectedUrl", {\n    get: function get() {\n      return this._contextInfo.serverRedirectedUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "serverRequestPath", {\n    get: function get() {\n      return this._contextInfo.serverRequestPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "serverTime", {\n    get: function get() {\n      return this._contextInfo.serverTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "showNGSCDialogForSyncOnODB", {\n    get: function get() {\n      return this._contextInfo.showNGSCDialogForSyncOnODB;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "showNGSCDialogForSyncOnTS", {\n    get: function get() {\n      return this._contextInfo.showNGSCDialogForSyncOnTS;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteAbsoluteUrl", {\n    get: function get() {\n      return this._contextInfo.siteAbsoluteUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteClassification", {\n    get: function get() {\n      return this._contextInfo.siteClassification;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteClientTag", {\n    get: function get() {\n      return this._contextInfo.siteClientTag;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteColor", {\n    get: function get() {\n      return this._contextInfo.siteColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteId", {\n    get: function get() {\n      return this._contextInfo.siteId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "sitePagesEnabled", {\n    get: function get() {\n      return this._contextInfo.sitePagesEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "sitePagesFeatureVersion", {\n    get: function get() {\n      return this._contextInfo.sitePagesFeatureVersion;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteServerRelativeUrl", {\n    get: function get() {\n      return this._contextInfo.siteServerRelativeUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "siteSubscriptionId", {\n    get: function get() {\n      return this._contextInfo.siteSubscriptionId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "socialBarEnabled", {\n    get: function get() {\n      return this._contextInfo.socialBarEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "supportPercentStorePage", {\n    get: function get() {\n      return this._contextInfo.supportPercentStorePage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "supportPoundStorePath", {\n    get: function get() {\n      return this._contextInfo.supportPoundStorePath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "systemUserKey", {\n    get: function get() {\n      return this._contextInfo.systemUserKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "teamsChannelType", {\n    get: function get() {\n      return this._contextInfo.teamsChannelType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "tenantAppVersion", {\n    get: function get() {\n      return this._contextInfo.tenantAppVersion;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "tenantDisplayName", {\n    get: function get() {\n      return this._contextInfo.tenantDisplayName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "theme", {\n    get: function get() {\n      return (this.window && this.window["__themeState__"] ? this.window["__themeState__"].theme : null) || {};\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "themeCacheToken", {\n    get: function get() {\n      return this._contextInfo.themeCacheToken;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "themedCssFolderUrl", {\n    get: function get() {\n      return this._contextInfo.themedCssFolderUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "themedImageFileNames", {\n    get: function get() {\n      return this._contextInfo.themedImageFileNames;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "updateFromDigestPageLoaded", {\n    get: function get() {\n      return this._contextInfo.updateFromDigestPageLoaded;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userDisplayName", {\n    get: function get() {\n      return this._contextInfo.userDisplayName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userEmail", {\n    get: function get() {\n      return this._contextInfo.userEmail;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userFirstDayOfWeek", {\n    get: function get() {\n      return this._contextInfo.userFirstDayOfWeek;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userId", {\n    get: function get() {\n      return this._contextInfo.userId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userLoginName", {\n    get: function get() {\n      return this._contextInfo.userLoginName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userPhotoCdnBaseUrl", {\n    get: function get() {\n      return this._contextInfo.userPhotoCdnBaseUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userPrincipalName", {\n    get: function get() {\n      return this._contextInfo.userPrincipalName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userTime24", {\n    get: function get() {\n      return this._contextInfo.userTime24;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userTimeZoneData", {\n    get: function get() {\n      return this._contextInfo.userTimeZoneData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "userVoiceForFeedbackEnabled", {\n    get: function get() {\n      return this._contextInfo.userVoiceForFeedbackEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "viewId", {\n    get: function get() {\n      return this._contextInfo.viewId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "viewOnlyExperienceEnabled", {\n    get: function get() {\n      return this._contextInfo.viewOnlyExperienceEnabled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webAbsoluteUrl", {\n    get: function get() {\n      return this._contextInfo.webAbsoluteUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webDescription", {\n    get: function get() {\n      return this._contextInfo.webDescription;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webDomain", {\n    get: function get() {\n      return this._contextInfo.webDomain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webFirstDayOfWeek", {\n    get: function get() {\n      return this._contextInfo.webFirstDayOfWeek;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webId", {\n    get: function get() {\n      return this._contextInfo.webId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webLanguage", {\n    get: function get() {\n      return this._contextInfo.webLanguage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webLanguageName", {\n    get: function get() {\n      return this._contextInfo.webLanguageName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webLogoUrl", {\n    get: function get() {\n      return this._contextInfo.webLogoUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webPermMasks", {\n    get: function get() {\n      return this._contextInfo.webPermMasks;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webServerRelativeUrl", {\n    get: function get() {\n      return this._contextInfo.webServerRelativeUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webTemplate", {\n    get: function get() {\n      return this._contextInfo.webTemplate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webTemplateConfiguration", {\n    get: function get() {\n      return this._contextInfo.webTemplateConfiguration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webTime24", {\n    get: function get() {\n      return this._contextInfo.webTime24;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webTimeZoneData", {\n    get: function get() {\n      return this._contextInfo.webTimeZoneData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webTitle", {\n    get: function get() {\n      return this._contextInfo.webTitle;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "webUIVersion", {\n    get: function get() {\n      return this._contextInfo.webUIVersion;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(_ContextInfo, "window", {\n    get: function get() {\n      return typeof window == "undefined" ? {} : window;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Methods\n   */\n  // Method to generate a guid\n  _ContextInfo.generateGUID = function () {\n    // Set the batch id\n    return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == \'x\' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  };\n  // The page context information from an spfx project\n  _ContextInfo._spfxPageContext = null;\n  // Method to get the context information for a web\n  _ContextInfo.getWeb = function (url) {\n    // Create a new base object\n    return new utils_1.Base({\n      endpoint: "contextinfo",\n      method: "POST",\n      url: url\n    });\n  };\n  // Method to set the page context information from an SPFX project\n  _ContextInfo.setPageContext = function (spfxPageContext) {\n    exports.ContextInfo._spfxPageContext = spfxPageContext;\n  };\n  return _ContextInfo;\n}();\nexports.ContextInfo = _ContextInfo;\n\n//# sourceURL=webpack://gd-sprest/./build/lib/contextInfo.js?')},"./build/lib/graph.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Graph = void 0;\nvar sptypes_1 = __webpack_require__(/*! ../sptypes */ "./build/sptypes/index.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n// Default Token\n//export const Token\n/**\n * Graph\n */\nexports.Graph = function (props) {\n  var graph = new utils_1.Base({\n    accessToken: props && props.accessToken ? props.accessToken : exports.Graph.Token\n  });\n  // Default the target information\n  graph.targetInfo.requestType = (props && props.requestType ? props.requestType : "").toLowerCase() == "post" ? utils_1.RequestType.GraphPost : utils_1.RequestType.GraphGet;\n  // Set the endpoint\n  graph.targetInfo.data = props ? props.data : null;\n  graph.targetInfo.endpoint = props && props.cloud ? props.cloud : exports.Graph.Cloud || sptypes_1.SPTypes.CloudEnvironment.Default;\n  graph.targetInfo.endpoint += "/" + (props && props.version ? props.version : exports.Graph.Version || "v1.0");\n  // See if the url is set\n  if (props && props.url) {\n    // Set the endpoint\n    graph.targetInfo.endpoint += "/" + props.url;\n  } else {\n    // Add the default methods\n    utils_1.Request.addMethods(graph, {\n      __metadata: {\n        type: "graph"\n      }\n    });\n  }\n  // Return the graph\n  return graph;\n};\n// Default Values\nexports.Graph.Cloud = "";\nexports.Graph.Token = "";\nexports.Graph.Version = "";\n// Method to get the graph token from a classic page\nexports.Graph.getAccessToken = function (resource, tokenType) {\n  // Set the data \n  var data = {\n    "resource": resource || exports.Graph.Cloud || sptypes_1.SPTypes.CloudEnvironment.Default\n  };\n  // Set the token type\n  if (tokenType) {\n    data["tokenType"] = tokenType;\n  }\n  // Get the access token\n  return new utils_1.Base({\n    endpoint: "SP.OAuth.Token/Acquire",\n    method: "POST",\n    data: data\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/graph.js?')},"./build/lib/groupService.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.GroupService = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Group Service\n */\nexports.GroupService = function (targetInfo) {\n  var svc = new utils_1.Base(targetInfo);\n  // Default the properties\n  svc.targetInfo.defaultToWebFl = true;\n  svc.targetInfo.endpoint = "groupservice";\n  // Add the methods\n  utils_1.Request.addMethods(svc, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Portal.GroupService"\n    }\n  });\n  // Return the group service\n  return svc;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/groupService.js?')},"./build/lib/groupSiteManager.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.GroupSiteManager = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Group Site Manager\n */\nexports.GroupSiteManager = function (targetInfo) {\n  var mgr = new utils_1.Base(targetInfo);\n  // Default the properties\n  mgr.targetInfo.defaultToWebFl = true;\n  mgr.targetInfo.endpoint = "groupsitemanager";\n  // Add the methods\n  utils_1.Request.addMethods(mgr, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Portal.GroupSiteManager"\n    }\n  });\n  // Return the group site manager\n  return mgr;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/groupSiteManager.js?')},"./build/lib/hubSites.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.HubSites = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Hub Sites\n */\nexports.HubSites = function (targetInfo) {\n  var hubs = new utils_1.Base(targetInfo);\n  // Default the properties\n  hubs.targetInfo.defaultToWebFl = true;\n  hubs.targetInfo.endpoint = "hubsites";\n  // Add the methods\n  utils_1.Request.addMethods(hubs, {\n    __metadata: {\n      type: "SP.HubSite.Collection"\n    }\n  });\n  // Return the hub sites\n  return hubs;\n};\n// Static method to see if the current user can create hub sites\nexports.HubSites.canCreate = function () {\n  // Return the base object\n  return new utils_1.Base({\n    endpoint: "SP.HubSites.CanCreate"\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/hubSites.js?')},"./build/lib/hubSitesUtility.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.HubSitesUtility = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Hub Sites Utility\n */\nexports.HubSitesUtility = function (targetInfo) {\n  var utility = new utils_1.Base(targetInfo);\n  // Default the properties\n  utility.targetInfo.defaultToWebFl = true;\n  utility.targetInfo.endpoint = "hubsitesutility";\n  // Add the methods\n  utils_1.Request.addMethods(utility, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Portal.SPHubSitesUtility"\n    }\n  });\n  // Return the hub sites utility\n  return utility;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/hubSitesUtility.js?')},"./build/lib/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./apps */ "./build/lib/apps.js"), exports);\n__exportStar(__webpack_require__(/*! ./contextInfo */ "./build/lib/contextInfo.js"), exports);\n__exportStar(__webpack_require__(/*! ./graph */ "./build/lib/graph.js"), exports);\n__exportStar(__webpack_require__(/*! ./groupService */ "./build/lib/groupService.js"), exports);\n__exportStar(__webpack_require__(/*! ./groupSiteManager */ "./build/lib/groupSiteManager.js"), exports);\n__exportStar(__webpack_require__(/*! ./hubSites */ "./build/lib/hubSites.js"), exports);\n__exportStar(__webpack_require__(/*! ./hubSitesUtility */ "./build/lib/hubSitesUtility.js"), exports);\n__exportStar(__webpack_require__(/*! ./list */ "./build/lib/list.js"), exports);\n__exportStar(__webpack_require__(/*! ./navigation */ "./build/lib/navigation.js"), exports);\n__exportStar(__webpack_require__(/*! ./peopleManager */ "./build/lib/peopleManager.js"), exports);\n__exportStar(__webpack_require__(/*! ./peoplePicker */ "./build/lib/peoplePicker.js"), exports);\n__exportStar(__webpack_require__(/*! ./profileLoader */ "./build/lib/profileLoader.js"), exports);\n__exportStar(__webpack_require__(/*! ./search */ "./build/lib/search.js"), exports);\n__exportStar(__webpack_require__(/*! ./site */ "./build/lib/site.js"), exports);\n__exportStar(__webpack_require__(/*! ./siteIconManager */ "./build/lib/siteIconManager.js"), exports);\n__exportStar(__webpack_require__(/*! ./siteManager */ "./build/lib/siteManager.js"), exports);\n__exportStar(__webpack_require__(/*! ./sitePages */ "./build/lib/sitePages.js"), exports);\n__exportStar(__webpack_require__(/*! ./socialFeed */ "./build/lib/socialFeed.js"), exports);\n__exportStar(__webpack_require__(/*! ./themeManager */ "./build/lib/themeManager.js"), exports);\n__exportStar(__webpack_require__(/*! ./userProfile */ "./build/lib/userProfile.js"), exports);\n__exportStar(__webpack_require__(/*! ./utility */ "./build/lib/utility.js"), exports);\n__exportStar(__webpack_require__(/*! ./web */ "./build/lib/web.js"), exports);\n__exportStar(__webpack_require__(/*! ./webTemplateExtensions */ "./build/lib/webTemplateExtensions.js"), exports);\n__exportStar(__webpack_require__(/*! ./wfInstanceService */ "./build/lib/wfInstanceService.js"), exports);\n__exportStar(__webpack_require__(/*! ./wfSubscriptionService */ "./build/lib/wfSubscriptionService.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/lib/index.js?')},"./build/lib/list.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.List = void 0;\nvar sptypes_1 = __webpack_require__(/*! ../sptypes */ "./build/sptypes/index.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nvar graph_1 = __webpack_require__(/*! ./graph */ "./build/lib/graph.js");\nvar web_1 = __webpack_require__(/*! ./web */ "./build/lib/web.js");\n/**\n * List\n */\nexports.List = function (listName, targetInfo) {\n  var list = new utils_1.Base(targetInfo);\n  // Default the properties\n  list.targetInfo.defaultToWebFl = true;\n  list.targetInfo.endpoint = "web/lists/getByTitle(\'" + listName.replace(/\\\'/g, "\'\'") + "\')";\n  // Add the methods\n  utils_1.Request.addMethods(list, {\n    __metadata: {\n      type: "SP.List"\n    }\n  });\n  // Return the list\n  return list;\n};\n// Static method to get the list by the entity name.\nexports.List.getByEntityName = function (props) {\n  // Query for the list\n  var query = (0, web_1.Web)(props.url, props.targetInfo)\n  // Get the lists\n  .Lists()\n  // Set the query\n  .query({\n    Filter: "EntityTypeName eq \'" + props.name + "\'",\n    Top: 1\n  });\n  // See if the callback exists\n  if (props.callback) {\n    // Execute the request asynchronously\n    query.execute(function (lists) {\n      // Execute the callback method\n      props.callback(lists.results ? lists.results[0] : null);\n    });\n  } else {\n    // Execute the request synchronously and return it\n    var list = query.executeAndWait();\n    return list.results ? list.results[0] : list;\n  }\n};\n// Static method to get the list data from the SP.List.getListDataAsStream endpoint\nexports.List.getDataAsStream = function (listFullUrl, parameters) {\n  if (parameters === void 0) {\n    parameters = {};\n  }\n  var params = "?listFullUrl=\'" + listFullUrl + "\'";\n  // Parse the parameters\n  for (var key in parameters) {\n    // Append the parameter\n    params += "&" + key + "=" + parameters[key];\n  }\n  // Return the base object\n  return new utils_1.Base({\n    endpoint: "SP.List.getListDataAsStream" + params\n  });\n};\n// Static method for executing a flow against a list item\nexports.List.runFlow = function (props) {\n  // Determine the urls\n  var authUrl = "";\n  var flowUrl = "";\n  switch (props.cloudEnv) {\n    case sptypes_1.SPTypes.CloudEnvironment.USL4:\n      authUrl = sptypes_1.SPTypes.CloudEnvironment.FlowHigh;\n      flowUrl = sptypes_1.SPTypes.CloudEnvironment.FlowHighAPI;\n      break;\n    case sptypes_1.SPTypes.CloudEnvironment.USL5:\n      authUrl = sptypes_1.SPTypes.CloudEnvironment.FlowDoD;\n      flowUrl = sptypes_1.SPTypes.CloudEnvironment.FlowDoDAPI;\n      break;\n    // Default\n    default:\n      authUrl = sptypes_1.SPTypes.CloudEnvironment.Flow;\n      flowUrl = sptypes_1.SPTypes.CloudEnvironment.FlowAPI;\n      break;\n  }\n  // Return a promise\n  return new Promise(function (resolve) {\n    // Gets the graph token\n    var getGraphToken = function getGraphToken() {\n      // Return a promise\n      return new Promise(function (resolveAuth) {\n        // Get the graph token\n        graph_1.Graph.getAccessToken(authUrl).execute(function (auth) {\n          // Resolve the request\n          resolveAuth(auth.access_token);\n        },\n        // Error\n        function (ex) {\n          // Resolve the request\n          resolve({\n            executed: false,\n            errorDetails: ex.response,\n            errorMessage: "Auth Error: Unable to get the flow token."\n          });\n        });\n      });\n    };\n    // Gets the flow token\n    var getFlowToken = function getFlowToken(flowInfo) {\n      // Return a promise\n      return new Promise(function (resolveAuth) {\n        // See if the flow token is provided\n        if (props.token) {\n          // Resolve the request\n          resolveAuth(props.token);\n        } else {\n          // Get the graph token\n          getGraphToken().then(function (token) {\n            // Set the url\n            var authUrl = "".concat(flowUrl).concat(flowInfo.properties.environment.id, "/users/me/onBehalfOfTokenBundle?api-version=2016-11-01");\n            // Get the graph token from SharePoint\n            new utils_1.Base({\n              endpoint: authUrl,\n              method: "POST",\n              requestType: utils_1.RequestType.GraphPost,\n              requestHeader: {\n                "authorization": "bearer " + token\n              }\n            }).execute(function (tokenInfo) {\n              // Resolve the request\n              resolveAuth(tokenInfo.audienceToToken["https://" + flowInfo.properties.connectionReferences.shared_sharepointonline.swagger.host] || token);\n            },\n            // Error\n            function (ex) {\n              // Resolve the request\n              resolve({\n                executed: false,\n                errorDetails: ex.response,\n                errorMessage: "Auth Error: Unable to get the flow token for cloud: ".concat(props.cloudEnv)\n              });\n            });\n          });\n        }\n      });\n    };\n    // Get the flow information\n    (0, web_1.Web)(props.webUrl).Lists(props.list).syncFlowInstance(props.id).execute(\n    // Success\n    function (flow) {\n      // Get the flow information\n      var flowInfo = JSON.parse(flow.SynchronizationData);\n      if (flowInfo) {\n        // Get the flow token\n        getFlowToken(flowInfo).then(function (token) {\n          // Trigger the flow\n          new utils_1.Base({\n            accessToken: token,\n            requestType: utils_1.RequestType.GraphPost,\n            endpoint: flowInfo.properties.flowTriggerUri,\n            data: {\n              rows: [{\n                entity: props.data\n              }]\n            }\n          }).execute(\n          // Success\n          function () {\n            // Resolve the request\n            resolve({\n              executed: true,\n              flowToken: token\n            });\n          },\n          // Error\n          function (ex) {\n            // Resolve the request\n            resolve({\n              executed: false,\n              errorDetails: ex.response,\n              errorMessage: "Error triggering the flow."\n            });\n          });\n        });\n      } else {\n        // Resolve the request\n        resolve({\n          executed: false,\n          errorDetails: "The flow with id " + props.id + " doesn\'t exist.",\n          errorMessage: "Error getting the flow instance."\n        });\n      }\n    },\n    // Error\n    function (ex) {\n      // Resolve the request\n      resolve({\n        executed: false,\n        errorDetails: ex.response,\n        errorMessage: "Error getting the flow information."\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/list.js?')},"./build/lib/navigation.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Navigation = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Navigation\n */\nexports.Navigation = function (url, targetInfo) {\n  var navigation = new utils_1.Base(targetInfo);\n  // Default the properties\n  navigation.targetInfo.defaultToWebFl = true;\n  navigation.targetInfo.endpoint = "navigation";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    navigation.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(navigation, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Navigation.REST.NavigationServiceRest"\n    }\n  });\n  // Return the navigation\n  return navigation;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/navigation.js?')},"./build/lib/peopleManager.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PeopleManager = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * People Manager\n */\nexports.PeopleManager = function (targetInfo) {\n  var peopleManager = new utils_1.Base(targetInfo);\n  // Default the properties\n  peopleManager.targetInfo.defaultToWebFl = true;\n  peopleManager.targetInfo.endpoint = "sp.userprofiles.peoplemanager";\n  // Add the methods\n  utils_1.Request.addMethods(peopleManager, {\n    __metadata: {\n      type: "SP.UserProfiles.PeopleManager"\n    }\n  });\n  // Return the people manager\n  return peopleManager;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/peopleManager.js?')},"./build/lib/peoplePicker.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PeoplePicker = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * People Picker\n */\nexports.PeoplePicker = function (targetInfo) {\n  var peoplePicker = new utils_1.Base(targetInfo);\n  // Default the properties\n  peoplePicker.targetInfo.defaultToWebFl = true;\n  peoplePicker.targetInfo.endpoint = "SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface";\n  peoplePicker.targetInfo.overrideDefaultRequestToHostFl = true;\n  // Add the methods\n  utils_1.Request.addMethods(peoplePicker, {\n    __metadata: {\n      type: "peoplepicker"\n    }\n  });\n  // Return the people picker\n  return peoplePicker;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/peoplePicker.js?')},"./build/lib/profileLoader.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ProfileLoader = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Profile Loader\n */\nexports.ProfileLoader = function (targetInfo) {\n  var profileLoader = new utils_1.Base(targetInfo);\n  // Default the properties\n  profileLoader.targetInfo.defaultToWebFl = true;\n  profileLoader.targetInfo.endpoint = "sp.userprofiles.profileloader.getprofileloader";\n  profileLoader.targetInfo.method = "POST";\n  // Add the methods\n  utils_1.Request.addMethods(profileLoader, {\n    __metadata: {\n      type: "SP.UserProfiles.ProfileLoader"\n    }\n  });\n  // Return the profile loader\n  return profileLoader;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/profileLoader.js?')},"./build/lib/search.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Search = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Search\n */\nexports.Search = function (url, targetInfo) {\n  var base = new utils_1.Base(targetInfo);\n  var search = base;\n  // Default the properties\n  base.targetInfo.defaultToWebFl = true;\n  base.targetInfo.endpoint = "search";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    base.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(search, {\n    __metadata: {\n      type: "Microsoft.Office.Server.Search.REST.SearchService"\n    }\n  });\n  /** The search query method */\n  search.searchquery = function (settings) {\n    // Execute the request\n    return search.executeMethod("query", {\n      argNames: ["query"],\n      name: "query?[[query]]",\n      requestType: utils_1.RequestType.GetReplace\n    }, exports.Search.getQuery(settings));\n  };\n  // Return the search\n  return search;\n};\n// Static method to compute the query\nexports.Search.getQuery = function (parameters) {\n  var query = "";\n  // Parse the parameters\n  for (var key in parameters) {\n    // Append the parameter to the query\n    query += (query == "" ? "" : "&") + key + "=\'" + parameters[key] + "\'";\n  }\n  // Return the query\n  return [query];\n};\n// Static post query method\nexports.Search.postQuery = function (props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    var queryProps = props.query;\n    // Set the get all items flag\n    var getAllItems = typeof props.getAllItems === "boolean" ? props.getAllItems : false;\n    // Compute the row count\n    var rowCount = 500;\n    if (typeof queryProps.RowLimit === "number") {\n      // Set the custom limit\n      rowCount = queryProps.RowLimit;\n    } else {\n      // Default to the max size\n      queryProps.RowLimit = rowCount;\n    }\n    // Query the first batch\n    (0, exports.Search)(props.url, props.targetInfo).postquery(queryProps).execute(\n    // Success\n    function (request) {\n      // Updates the table\n      var updateRequest = function updateRequest(searchResult) {\n        // Ensure the results exist\n        if (searchResult) {\n          // Call the event\n          props.onQueryCompleted ? props.onQueryCompleted(searchResult) : null;\n          // Parse rows\n          for (var i = 0; i < searchResult.PrimaryQueryResult.RelevantResults.Table.Rows.results.length; i++) {\n            var row = searchResult.PrimaryQueryResult.RelevantResults.Table.Rows.results[i];\n            // Append the result\n            request.postquery.PrimaryQueryResult.RelevantResults.Table.Rows.results.push(row);\n          }\n          // Append the results\n          request.postquery["results"] = request.postquery["results"].concat(searchResult["results"]);\n        }\n      };\n      // Call the event\n      props.onQueryCompleted ? props.onQueryCompleted(request.postquery) : null;\n      // See if more results exist\n      var results = request.postquery.PrimaryQueryResult.RelevantResults;\n      if (getAllItems && results.TotalRows > results.RowCount) {\n        var search = (0, exports.Search)(props.url, props.targetInfo);\n        var useBatch = typeof props.useBatch === "boolean" ? props.useBatch : true;\n        // Compute the total # of requests that we need to make\n        var totalPages = Math.ceil(results.TotalRows / rowCount);\n        // Loop for the total # of requests\n        for (var i = 1; i < totalPages; i++) {\n          // Set the start row\n          queryProps.StartRow = i * rowCount;\n          // See if we are making a batch request\n          if (useBatch) {\n            // Create a batch request\n            search.postquery(queryProps).batch(\n            // Success\n            function (batchRequest) {\n              // Update the request\n              updateRequest(batchRequest.postquery);\n            },\n            // Limit to 100 per request\n            i % 100 == 0);\n          } else {\n            // Create the request\n            search.postquery(queryProps).execute(\n            // Success\n            function (batchRequest) {\n              // Update the request\n              updateRequest(batchRequest.postquery);\n            },\n            // Wait for the previous request to complete\n            true);\n          }\n        }\n        // See if we are making a batch request\n        if (useBatch) {\n          // Execute the batch requests\n          search.execute(function () {\n            // Resolve the request\n            resolve(request.postquery);\n          }, reject);\n        } else {\n          // Wait for the requests to complete\n          search.done(function () {\n            // Resolve the request\n            resolve(request.postquery);\n          });\n        }\n      } else {\n        // Resolve the request\n        resolve(request.postquery);\n      }\n    },\n    // Error\n    reject);\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/search.js?')},"./build/lib/site.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Site = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Site\n */\nexports.Site = function (url, targetInfo) {\n  var site = new utils_1.Base(targetInfo);\n  // Default the properties\n  site.targetInfo.defaultToWebFl = true;\n  site.targetInfo.endpoint = "site";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    site.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(site, {\n    __metadata: {\n      type: "SP.Site"\n    }\n  });\n  // Return the site\n  return site;\n};\n// Static method to see if a site exists\nexports.Site.exists = function (url) {\n  // Return the base object\n  return new utils_1.Base({\n    data: {\n      url: url\n    },\n    defaultToWebFl: true,\n    endpoint: "SP.Site.Exists",\n    method: "POST"\n  });\n};\n// Static method to get the app context\nexports.Site.getAppContext = function (siteUrl) {\n  // Return the base object\n  return new utils_1.Base({\n    data: {\n      siteUrl: siteUrl\n    },\n    defaultToWebFl: true,\n    endpoint: "SP.AppContextSite",\n    method: "POST"\n  });\n};\n// Method to get the url by id\nexports.Site.getUrlById = function (id) {\n  // Return the base object\n  return new utils_1.Base({\n    data: {\n      id: id\n    },\n    defaultToWebFl: true,\n    endpoint: "SP.Site.GetUrlById",\n    method: "POST"\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/site.js?')},"./build/lib/siteIconManager.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SiteIconManager = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Site Icon Manager\n */\nexports.SiteIconManager = function (url, targetInfo) {\n  var siteIconMgr = new utils_1.Base(targetInfo);\n  // Default the properties\n  siteIconMgr.targetInfo.defaultToWebFl = true;\n  siteIconMgr.targetInfo.endpoint = "SiteIconManager";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    siteIconMgr.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(siteIconMgr, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Portal.SiteIconManager"\n    }\n  });\n  // Return the site\n  return siteIconMgr;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/siteIconManager.js?')},"./build/lib/siteManager.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SiteManager = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Site Manager\n */\nexports.SiteManager = function (url, targetInfo) {\n  var siteMgr = new utils_1.Base(targetInfo);\n  // Default the properties\n  siteMgr.targetInfo.defaultToWebFl = true;\n  siteMgr.targetInfo.endpoint = "SPSiteManager";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    siteMgr.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(siteMgr, {\n    __metadata: {\n      type: "Microsoft.SharePoint.Portal.SPSiteManager"\n    }\n  });\n  // Return the site\n  return siteMgr;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/siteManager.js?')},"./build/lib/sitePages.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SitePages = void 0;\nvar web_1 = __webpack_require__(/*! ./web */ "./build/lib/web.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nvar contextInfo_1 = __webpack_require__(/*! ./contextInfo */ "./build/lib/contextInfo.js");\n/**\n * Site Pages\n */\nexports.SitePages = function (url, targetInfo) {\n  var sitePages = new utils_1.Base(targetInfo);\n  // Default the properties\n  sitePages.targetInfo.defaultToWebFl = true;\n  sitePages.targetInfo.endpoint = "SitePages";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    sitePages.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(sitePages, {\n    __metadata: {\n      type: "SP.Publishing.SitePageService"\n    }\n  });\n  // Return the site pages\n  return sitePages;\n};\n// Static method to convert a modern page type\nexports.SitePages.convertPage = function (pageUrl, layout, webUrl) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the page\n    var getPage = function getPage(pageUrl) {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // See if the web url is specified\n        if (webUrl) {\n          // Get the context info\n          contextInfo_1.ContextInfo.getWeb(webUrl).execute(function (context) {\n            // Get the page\n            (0, web_1.Web)(webUrl, {\n              requestDigest: context.GetContextWebInformation.FormDigestValue\n            }).Lists("Site Pages").Items().query({\n              Filter: "FileLeafRef eq \'" + pageUrl + "\'"\n            }).execute(function (items) {\n              // Resolve the request\n              resolve(items.results[0]);\n            }, reject);\n          }, reject);\n        } else {\n          // Get the page\n          (0, web_1.Web)().Lists("Site Pages").Items().query({\n            Filter: "FileLeafRef eq \'" + pageUrl + "\'"\n          }).execute(function (items) {\n            // Resolve the request\n            resolve(items.results[0]);\n          }, reject);\n        }\n      });\n    };\n    // Get the page\n    getPage(pageUrl).then(function (item) {\n      // Update the item\n      item.update({\n        PageLayoutType: layout\n      }).execute(resolve, reject);\n    }, function () {\n      // Log\n      console.error("Unable to get the page: " + pageUrl);\n      // Reject the request\n      reject();\n    });\n  });\n};\n// Static method to create a modern page\nexports.SitePages.createPage = function (pageName, pageTitle, pageTemplate, url, targetInfo) {\n  var getContext = function getContext() {\n    return new Promise(function (resolve) {\n      // See if the web url doesn\'t exists\n      if (url == null) {\n        resolve(null);\n      }\n      // Get the context of target web\n      contextInfo_1.ContextInfo.getWeb(url).execute(function (context) {\n        // Resolve the request\n        resolve(context.GetContextWebInformation.FormDigestValue);\n      });\n    });\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Method called after the updates have completed\n    var onComplete = function onComplete(itemId, fileUrl) {\n      var web = (0, web_1.Web)(url, targetInfo);\n      var results = {\n        file: null,\n        item: null,\n        page: null\n      };\n      // Get the file\n      web.getFileByUrl(fileUrl).query({\n        Select: ["*", "ListId"]\n      }).execute(function (file) {\n        // Set the file\n        results.file = file;\n        // Get the list\n        web.Lists().getById(file.ListId).Items(itemId).execute(function (item) {\n          // Set the item\n          results.item = item;\n          // Get the page\n          (0, exports.SitePages)(url, targetInfo).Pages(itemId).execute(function (page) {\n            // Set the page\n            results.page = page;\n            // Resolve the request\n            resolve(results);\n          }, reject);\n        }, reject);\n      }, reject);\n    };\n    // Get the context information\n    getContext().then(function (requestDigest) {\n      // Set the target information\n      targetInfo = __assign({\n        requestDigest: requestDigest\n      }, targetInfo);\n      // Create the page\n      (0, exports.SitePages)(url, targetInfo).Pages().createAppPage({\n        Title: pageTitle,\n        PageLayoutType: pageTemplate\n      }).execute(function (page) {\n        // Update the file name\n        (0, web_1.Web)(url, targetInfo).Lists("Site Pages").Items(page.Id).update({\n          FileLeafRef: pageName\n        }).execute(\n        // Updated the file name successfully\n        function () {\n          // Update the file url\n          var idx = page.Url.lastIndexOf(\'/\');\n          var fileUrl = page.Url.substring(0, idx + 1) + pageName;\n          // Complete the request\n          onComplete(page.Id, fileUrl);\n        },\n        // Unable to update the file name, but still return the object\n        function () {\n          // Complete the request\n          onComplete(page.Id, page.Url);\n        });\n      }, reject);\n    });\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/sitePages.js?')},"./build/lib/socialFeed.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SocialFeed = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Social Feed\n */\nexports.SocialFeed = function (targetInfo) {\n  var base = new utils_1.Base(targetInfo);\n  var socialFeed = base;\n  // Default the properties\n  base.targetInfo.defaultToWebFl = true;\n  base.targetInfo.endpoint = "social.feed";\n  // Add the methods\n  utils_1.Request.addMethods(socialFeed, {\n    __metadata: {\n      type: "SP.Social.SocialRestFeedManager"\n    }\n  });\n  // Return the social feed\n  return socialFeed;\n};\n// Method to post to another user\'s feed\nexports.SocialFeed.postToFeed = function (accountName, creationData) {\n  var postInfo = {\n    ID: null,\n    creationData: creationData\n  };\n  // Set the post metadata\n  postInfo["__metadata"] = {\n    type: "SP.Social.SocialRestPostCreationData"\n  };\n  postInfo.creationData["__metadata"] = {\n    type: "SP.Social.SocialPostCreationData"\n  };\n  // Execute the request\n  return (0, exports.SocialFeed)().executeMethod("postToMyFeed", {\n    argNames: ["restCreationData"],\n    name: "actor(item=@v)/feed?@v=\'" + encodeURIComponent(accountName) + "\'",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  }, [postInfo]);\n};\n// Method to post to the current user\'s feed\nexports.SocialFeed.postToMyFeed = function (creationData) {\n  var postInfo = {\n    ID: null,\n    creationData: creationData\n  };\n  // Set the post metadata\n  postInfo["__metadata"] = {\n    type: "SP.Social.SocialRestPostCreationData"\n  };\n  postInfo.creationData["__metadata"] = {\n    type: "SP.Social.SocialPostCreationData"\n  };\n  // Execute the request\n  return (0, exports.SocialFeed)().executeMethod("postToMyFeed", {\n    argNames: ["restCreationData"],\n    name: "my/feed/post",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  }, [postInfo]);\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/socialFeed.js?')},"./build/lib/themeManager.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ThemeManager = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Theme Manager\n */\nexports.ThemeManager = function (targetInfo) {\n  var mgr = new utils_1.Base(targetInfo);\n  // Default the properties\n  mgr.targetInfo.defaultToWebFl = true;\n  mgr.targetInfo.endpoint = "thememanager";\n  // Add the methods\n  utils_1.Request.addMethods(mgr, {\n    __metadata: {\n      type: "SP.Utilities.ThemeManager"\n    }\n  });\n  // Return the theme manager\n  return mgr;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/themeManager.js?')},"./build/lib/userProfile.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.UserProfile = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * User Profile\n */\nexports.UserProfile = function (targetInfo) {\n  var userProfile = new utils_1.Base(targetInfo);\n  // Default the properties\n  userProfile.targetInfo.defaultToWebFl = true;\n  userProfile.targetInfo.endpoint = "sp.userprofiles.profileloader.getprofileloader/getUserProfile";\n  userProfile.targetInfo.method = "POST";\n  // Add the methods\n  utils_1.Request.addMethods(userProfile, {\n    __metadata: {\n      type: "SP.UserProfiles.UserProfile"\n    }\n  });\n  // Return the user profile\n  return userProfile;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/userProfile.js?')},"./build/lib/utility.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Utility = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Utility\n */\nexports.Utility = function (url, targetInfo) {\n  var base = new utils_1.Base(targetInfo);\n  var utility = base;\n  // Default the properties\n  base.targetInfo.defaultToWebFl = true;\n  base.targetInfo.endpoint = "SP.Utilities.Utility";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    base.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(utility, {\n    __metadata: {\n      type: "utility"\n    }\n  });\n  // Method to create a wiki page\n  utility.createWikiPage = function (listUrl, content) {\n    if (content === void 0) {\n      content = "";\n    }\n    var parameters = {\n      ServerRelativeUrl: listUrl,\n      WikiHtmlContent: content\n    };\n    // Execute the method\n    return utility.executeMethod("createWikiPage", {\n      argNames: ["parameters"],\n      name: "SP.Utilities.Utility.CreateWikiPageInContextWeb",\n      replaceEndpointFl: true,\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }, [parameters]);\n  };\n  // Method to send an email\n  utility.sendEmail = function (properties) {\n    // Parse the email properties\n    for (var _i = 0, _a = ["To", "CC", "BCC"]; _i < _a.length; _i++) {\n      var propName = _a[_i];\n      var propValue = properties[propName];\n      // Ensure the value exists\n      if (propValue) {\n        // See if it\'s a string\n        if (typeof propValue === "string") {\n          // Add the results property\n          properties[propName] = {\n            \'results\': [propValue]\n          };\n        }\n        // Else, assume it\'s an array\n        else {\n          // Add the results property\n          properties[propName] = {\n            \'results\': propValue\n          };\n        }\n      }\n    }\n    // Execute the method\n    return utility.executeMethod("sendEmail", {\n      argNames: ["properties"],\n      metadataType: "SP.Utilities.EmailProperties",\n      name: "SP.Utilities.Utility.sendEmail",\n      replaceEndpointFl: true,\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }, [properties]);\n  };\n  // Return the utility\n  return utility;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/utility.js?')},"./build/lib/web.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Web = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ./contextInfo */ "./build/lib/contextInfo.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nexports.Web = function (url, targetInfo) {\n  var web = new utils_1.Base(targetInfo);\n  // Default the properties\n  web.targetInfo.defaultToWebFl = true;\n  web.targetInfo.endpoint = "web";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    web.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(web, {\n    __metadata: {\n      type: "SP.Web"\n    }\n  });\n  // Return the web\n  return web;\n};\n// Static method to get a remote web\nexports.Web.getRemoteWeb = function (requestUrl) {\n  // Return the remote web information\n  return new utils_1.Base({\n    data: {\n      requestUrl: requestUrl\n    },\n    defaultToWebFl: true,\n    endpoint: "SP.RemoteWeb?$expand=Web",\n    method: "POST"\n  });\n};\n// Static method to get the url of a web from a page url\nexports.Web.getWebUrlFromPageUrl = function (pageUrl) {\n  // Return the remote web information\n  return new utils_1.Base({\n    endpoint: "SP.Web.GetWebUrlFromPageUrl(@v)?@v=\'" + pageUrl + "\'",\n    method: "POST"\n  });\n};\n// Static method to execute a process query request\nexports.Web.processQuery = function (query, webUrl) {\n  // Minify the xml query\n  var data = query.replace(/\\r?\\n/g, \'\').replace(/  /g, \'\');\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    var processResponse = function processResponse(resp) {\n      // See if there was an error\n      if (resp[0] && resp[0].ErrorInfo) {\n        // Reject the request\n        console.error("[Error] " + resp[0].ErrorInfo.ErrorMessage, resp[0].ErrorInfo);\n        reject(resp[0].ErrorInfo);\n      } else {\n        // Resolve the request\n        resolve(resp);\n      }\n    };\n    // See if the web url exist\n    if (webUrl) {\n      // Get the context information for the web\n      contextInfo_1.ContextInfo.getWeb(webUrl).execute(\n      // Success\n      function (ctx) {\n        // Execute the request\n        new utils_1.Base({\n          data: data,\n          endpoint: "_vti_bin/client.svc/ProcessQuery",\n          method: "POST",\n          requestDigest: ctx.GetContextWebInformation.FormDigestValue,\n          requestType: utils_1.RequestType.Post,\n          url: webUrl\n        }).execute(processResponse, reject);\n      },\n      // Error\n      function () {\n        // Reject the request\n        reject("Error getting the context information for the web.");\n      });\n    } else {\n      // Execute the request\n      new utils_1.Base({\n        data: data,\n        endpoint: "_vti_bin/client.svc/ProcessQuery",\n        method: "POST",\n        requestDigest: contextInfo_1.ContextInfo.formDigestValue,\n        requestType: utils_1.RequestType.Post\n      }).execute(processResponse, reject);\n    }\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/web.js?')},"./build/lib/webTemplateExtensions.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.WebTemplateExtensions = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Web Template Extensions\n */\nexports.WebTemplateExtensions = function (url, targetInfo) {\n  var webTemplateExtensions = new utils_1.Base(targetInfo);\n  // Default the properties\n  webTemplateExtensions.targetInfo.defaultToWebFl = true;\n  webTemplateExtensions.targetInfo.endpoint = "Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptUtility";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    webTemplateExtensions.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(webTemplateExtensions, {\n    __metadata: {\n      type: "webTemplateExtensions"\n    }\n  });\n  // Return the web template extension utilities\n  return webTemplateExtensions;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/webTemplateExtensions.js?')},"./build/lib/wfInstanceService.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.WorkflowInstanceService = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Workflow Instance Service\n */\nexports.WorkflowInstanceService = function (url, targetInfo) {\n  var wfs = new utils_1.Base(targetInfo);\n  // Default the properties\n  wfs.targetInfo.defaultToWebFl = true;\n  wfs.targetInfo.endpoint = "SP.WorkflowServices.WorkflowInstanceService.Current";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    wfs.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(wfs, {\n    __metadata: {\n      type: "SP.WorkflowServices.WorkflowInstanceService"\n    }\n  });\n  // Return the workflow service\n  return wfs;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/wfInstanceService.js?')},"./build/lib/wfSubscriptionService.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.WorkflowSubscriptionService = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Workflow Subscription Service\n */\nexports.WorkflowSubscriptionService = function (url, targetInfo) {\n  var wfs = new utils_1.Base(targetInfo);\n  // Default the properties\n  wfs.targetInfo.defaultToWebFl = true;\n  wfs.targetInfo.endpoint = "SP.WorkflowServices.WorkflowSubscriptionService.Current";\n  // See if the web url exists\n  if (url) {\n    // Set the settings\n    wfs.targetInfo.url = url;\n  }\n  // Add the methods\n  utils_1.Request.addMethods(wfs, {\n    __metadata: {\n      type: "SP.WorkflowServices.WorkflowSubscriptionService"\n    }\n  });\n  // Return the workflow service\n  return wfs;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/lib/wfSubscriptionService.js?')},"./build/mapper/custom/audit.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.audit = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Audit\n */\nexports.audit = {\n  // Queries the collection\n  query: {\n    argNames: ["oData"],\n    requestType: utils_1.RequestType.OData\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/audit.js?')},"./build/mapper/custom/graph.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.graph = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Graph\n */\nexports.graph = {\n  // Me\n  me: {\n    requestType: utils_1.RequestType.GraphGet\n  },\n  // Group\n  group: {\n    argNames: ["id"],\n    name: "groups/[[id]]",\n    requestType: utils_1.RequestType.GraphGetReplace\n  },\n  // Groups\n  groups: {\n    name: "groups",\n    requestType: utils_1.RequestType.GraphGet\n  },\n  // List\n  list: {\n    argNames: ["siteId", "id"],\n    name: "sites/[[siteId]]/lists/[[id]]",\n    requestType: utils_1.RequestType.GraphGetReplace\n  },\n  // Lists\n  lists: {\n    argNames: ["siteId"],\n    name: "sites/[[siteId]]/lists",\n    requestType: utils_1.RequestType.GraphGetReplace\n  },\n  // Queries the collection\n  query: {\n    argNames: ["oData"],\n    requestType: utils_1.RequestType.OData\n  },\n  // Root Site\n  root: {\n    requestType: utils_1.RequestType.GraphGet\n  },\n  // Site\n  site: {\n    argNames: ["id"],\n    name: "sites/[[id]]",\n    requestType: utils_1.RequestType.GraphGetReplace\n  },\n  // Sites\n  sites: {\n    name: "sites",\n    requestType: utils_1.RequestType.GraphGet\n  },\n  // User\n  user: {\n    argNames: ["id"],\n    name: "users/[[id]]",\n    requestType: utils_1.RequestType.GraphGetReplace\n  },\n  // Users\n  users: {\n    requestType: utils_1.RequestType.GraphGet\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/graph.js?')},"./build/mapper/custom/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./audit */ "./build/mapper/custom/audit.js"), exports);\n__exportStar(__webpack_require__(/*! ./graph */ "./build/mapper/custom/graph.js"), exports);\n__exportStar(__webpack_require__(/*! ./odata */ "./build/mapper/custom/odata.js"), exports);\n__exportStar(__webpack_require__(/*! ./old */ "./build/mapper/custom/old.js"), exports);\n__exportStar(__webpack_require__(/*! ./peoplePicker */ "./build/mapper/custom/peoplePicker.js"), exports);\n__exportStar(__webpack_require__(/*! ./propertyValues */ "./build/mapper/custom/propertyValues.js"), exports);\n__exportStar(__webpack_require__(/*! ./utility */ "./build/mapper/custom/utility.js"), exports);\n__exportStar(__webpack_require__(/*! ./webTemplateExtensions */ "./build/mapper/custom/webTemplateExtensions.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/index.js?')},"./build/mapper/custom/odata.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.odata = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * OData\n */\nexports.odata = {\n  // Adds the odata query option\n  query: {\n    argNames: ["oData"],\n    requestType: utils_1.RequestType.OData\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/odata.js?')},"./build/mapper/custom/old.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.webinfos = exports.webs = exports.web = exports.viewfieldcollection = exports.views = exports.view = exports.versions = exports.usercustomactions = exports.usercustomaction = exports.users = exports.user = exports.tenantappcatalog = exports.tenantapps = exports.tenantapp = exports.sitecollectionappcatalog = exports.site = exports.search = exports.roledefinitions = exports.roledefinition = exports.roleassignments = exports.roleassignment = exports.items = exports.listitem = exports.lists = exports.list = exports.limitedwebpartmanager = exports.sitegroups = exports.group = exports.folders = exports.folder = exports.fileversions = exports.fileversion = exports.files = exports.file = exports.fieldlinks = exports.fields = exports.field = exports.features = exports.eventreceivers = exports.eventreceiver = exports.attachmentfiles = void 0;\nvar def_1 = __webpack_require__(/*! ../def */ "./build/mapper/def.js");\n/**\n * This is required for dynamic metadata types\n */\nexports.attachmentfiles = def_1.Mapper["SP.Attachment.Collection"];\nexports.eventreceiver = def_1.Mapper["SP.EventReceiverDefinition"];\nexports.eventreceivers = def_1.Mapper["SP.EventReceiverDefinition.Collection"];\nexports.features = def_1.Mapper["SP.Feature.Collection"];\nexports.field = def_1.Mapper["SP.Field"];\nexports.fields = def_1.Mapper["SP.Field.Collection"];\nexports.fieldlinks = def_1.Mapper["SP.FieldLink.Collection"];\nexports.file = def_1.Mapper["SP.File"];\nexports.files = def_1.Mapper["SP.File.Collection"];\nexports.fileversion = def_1.Mapper["SP.FileVersion"];\nexports.fileversions = def_1.Mapper["SP.FileVersion.Collection"];\nexports.folder = def_1.Mapper["SP.Folder"];\nexports.folders = def_1.Mapper["SP.Folder.Collection"];\nexports.group = def_1.Mapper["SP.Group"];\nexports.sitegroups = def_1.Mapper["SP.Directory.Group.Collection"];\nexports.limitedwebpartmanager = def_1.Mapper["SP.WebParts.LimitedWebPartManager"];\nexports.list = def_1.Mapper["SP.List"];\nexports.lists = def_1.Mapper["SP.List.Collection"];\nexports.listitem = def_1.Mapper["SP.ListItem"];\nexports.items = def_1.Mapper["SP.ListItem.Collection"];\nexports.roleassignment = def_1.Mapper["SP.RoleAssignment"];\nexports.roleassignments = def_1.Mapper["SP.RoleAssignment.Collection"];\nexports.roledefinition = def_1.Mapper["SP.RoleDefinition"];\nexports.roledefinitions = def_1.Mapper["SP.RoleDefinition.Collection"];\nexports.search = def_1.Mapper["Microsoft.Office.Server.Search.REST.SearchService"];\nexports.site = def_1.Mapper["SP.Site"];\nexports.sitecollectionappcatalog = def_1.Mapper["Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor"];\nexports.tenantapp = def_1.Mapper["Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata"];\nexports.tenantapps = def_1.Mapper["Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection"];\nexports.tenantappcatalog = def_1.Mapper["Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor"];\nexports.user = def_1.Mapper["SP.User"];\nexports.users = def_1.Mapper["SP.User.Collection"];\nexports.usercustomaction = def_1.Mapper["SP.UserCustomAction"];\nexports.usercustomactions = def_1.Mapper["SP.UserCustomAction.Collection"];\nexports.versions = def_1.Mapper["SP.FileVersion.Collection"];\nexports.view = def_1.Mapper["SP.View"];\nexports.views = def_1.Mapper["SP.View.Collection"];\nexports.viewfieldcollection = def_1.Mapper["SP.ViewFieldCollection"];\nexports.web = def_1.Mapper["SP.Web"];\nexports.webs = def_1.Mapper["SP.Web.Collection"];\nexports.webinfos = def_1.Mapper["SP.WebInformation.Collection"];\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/old.js?')},"./build/mapper/custom/peoplePicker.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.peoplepicker = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * People Picker\n */\nexports.peoplepicker = {\n  clientPeoplePickerResolveUser: {\n    argNames: ["queryParams"],\n    metadataType: "SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters",\n    name: "SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  clientPeoplePickerSearchUser: {\n    argNames: ["queryParams"],\n    metadataType: "SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters",\n    name: "SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerSearchUser",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/peoplePicker.js?')},"./build/mapper/custom/propertyValues.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.propertyvalues = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Property Values\n */\nexports.propertyvalues = {\n  // Queries the collection\n  query: {\n    argNames: ["oData"],\n    requestType: utils_1.RequestType.OData\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/propertyValues.js?')},"./build/mapper/custom/utility.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.utility = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Utility\n */\nexports.utility = {\n  createEmailBodyForInvitation: {\n    argNames: ["pageAddress"],\n    name: "SP.Utilities.Utility.CreateEmailBodyForInvitation",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  createWikiPage: {\n    argNames: ["parameters"],\n    name: "SP.Utilities.Utility.CreateWikiPageInContextWeb",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getAppLicenseDeploymentId: {\n    name: "SP.Utilities.Utility.GetAppLicenseDeploymentId",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.Get\n  },\n  getAppLicenseInformation: {\n    name: "SP.Utilities.Utility.GetAppLicenseInformation",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.Get\n  },\n  getCurrentUserEmailAddresses: {\n    name: "SP.Utilities.Utility.GetCurrentUserEmailAddresses",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.Get\n  },\n  getLocalizedString: {\n    argNames: ["sourceValue"],\n    name: "SP.Utilities.Utility.GetLocalizedString",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.GetWithArgsValueOnly\n  },\n  getLowerCaseString: {\n    argNames: ["sourceValue", "lcid"],\n    name: "SP.Utilities.Utility.GetLowerCaseString",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  importAppLicense: {\n    argNames: ["url"],\n    name: "SP.Utilities.Utility.ImportAppLicense",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgs\n  },\n  isUserLicensedForEntityInContext: {\n    argNames: ["url"],\n    name: "SP.Utilities.Utility.IsUserLicensedForEntityInContext",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgs\n  },\n  localizeWebPartGallery: {\n    argNames: ["url"],\n    name: "SP.Utilities.Utility.LocalizeWebPartGallery",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgs\n  },\n  markDiscussionAsFeatured: {\n    argNames: ["url"],\n    name: "SP.Utilities.Utility.MarkDiscussionAsFeatured",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgs\n  },\n  resolvePrincipal: {\n    name: "SP.Utilities.Utility.ResolvePrincipalInCurrentContext",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.Post\n  },\n  searchPrincipals: {\n    name: "SP.Utilities.Utility.SearchPrincipalsUsingContextWeb",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.Post\n  },\n  sendEmail: {\n    argNames: ["properties"],\n    metadataType: "SP.Utilities.EmailProperties",\n    name: "SP.Utilities.Utility.sendEmail",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  unmarkDiscussionAsFeatured: {\n    argNames: ["url"],\n    name: "SP.Utilities.Utility.UnmarkDiscussionAsFeatured",\n    replaceEndpointFl: true,\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/utility.js?')},"./build/mapper/custom/webTemplateExtensions.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.webtemplateextensions = void 0;\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./build/utils/index.js");\n/**\n * Web Template Extensions\n * https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-rest-api\n */\nexports.webtemplateextensions = {\n  applySiteDesign: {\n    argNames: ["siteDesignId", "webUrl"],\n    appendEndpointFl: true,\n    name: "ApplySiteDesign",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  addSiteDesignTaskToCurrentWeb: {\n    argNames: ["siteDesignId"],\n    appendEndpointFl: true,\n    name: "AddSiteDesignTaskToCurrentWeb",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  createSiteDesign: {\n    argNames: ["info"],\n    appendEndpointFl: true,\n    name: "CreateSiteDesign",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  createSiteScript: {\n    argNames: ["title", "content"],\n    appendEndpointFl: true,\n    name: "CreateSiteScript(@title)?@title=\'[[title]]",\n    requestType: utils_1.RequestType.PostReplaceWithData\n  },\n  deleteSiteDesign: {\n    argNames: ["id"],\n    appendEndpointFl: true,\n    name: "DeleteSiteDesign",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  deleteSiteScript: {\n    argNames: ["id"],\n    appendEndpointFl: true,\n    name: "DeleteSiteScript",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getSiteDesigns: {\n    argNames: [],\n    appendEndpointFl: true,\n    name: "GetSiteDesigns",\n    requestType: utils_1.RequestType.Post\n  },\n  getSiteDesignMetadata: {\n    argNames: ["id"],\n    appendEndpointFl: true,\n    name: "GetSiteDesignMetadata",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getSiteScripts: {\n    argNames: [],\n    appendEndpointFl: true,\n    name: "GetSiteScripts",\n    requestType: utils_1.RequestType.Post\n  },\n  getSiteScriptFromWeb: {\n    argNames: ["webUrl", "info"],\n    appendEndpointFl: true,\n    name: "GetSiteScriptFromWeb",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getSiteScriptFromList: {\n    argNames: ["listUrl"],\n    appendEndpointFl: true,\n    name: "GetSiteScriptFromList",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getSiteScriptMetadata: {\n    argNames: ["id"],\n    appendEndpointFl: true,\n    name: "GetSiteScriptMetadata",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  getSiteDesignRights: {\n    argNames: ["id"],\n    appendEndpointFl: true,\n    name: "GetSiteDesignRights",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  grantSiteDesignRights: {\n    argNames: ["id", "principalNames", "grantedRights"],\n    appendEndpointFl: true,\n    name: "GrantSiteDesignRights",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  revokeSiteDesignRights: {\n    argNames: ["id", "principalNames"],\n    appendEndpointFl: true,\n    name: "RevokeSiteDesignRights",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  updateSiteDesign: {\n    argNames: ["updateInfo"],\n    appendEndpointFl: true,\n    name: "UpdateSiteDesign",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  },\n  updateSiteScript: {\n    argNames: ["updateInfo"],\n    appendEndpointFl: true,\n    name: "UpdateSiteScript",\n    requestType: utils_1.RequestType.PostWithArgsInBody\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/custom/webTemplateExtensions.js?')},"./build/mapper/def.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Mapper = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nexports.Mapper = {\n  "MS.FileServices.File": {\n    copyTo: {\n      argNames: ["target", "overwrite"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    download: {},\n    moveTo: {\n      argNames: ["target", "overwrite"]\n    },\n    upload: {\n      argNames: ["stream"]\n    }\n  },\n  "MS.FileServices.FileSystemItem.Collection": {\n    add: {\n      argNames: ["name", "overwrite", "content"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "MS.FileServices.Folder": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    moveTo: {\n      argNames: ["target"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.AppServices.AppCollection": {\n    getAppsFromStore: {\n      argNames: ["addInType", "queryString"]\n    },\n    getByType: {\n      argNames: ["type"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningHub": {\n    checkAIBuilderAccess: {\n      argNames: ["environmentName", "isTestEnvironment", "userId"]\n    },\n    getByContentTypeId: {\n      argNames: ["contentTypeId"]\n    },\n    getCDSMetadata: {\n      argNames: ["environmentName", "isTestEnvironment"]\n    },\n    getColumnLLMInfo: {\n      argNames: ["docLibId", "columnId"]\n    },\n    getLibraryLLMInfo: {\n      argNames: ["docLibId"]\n    },\n    getMachineLearningFlags: {\n      argNames: ["docLibId"]\n    },\n    getModelIdForContentType: {\n      argNames: ["contentTypeName"]\n    },\n    getModels: {\n      argNames: ["listId", "modelTypes", "publicationTypes", "includeManagementNotAllowedModels"]\n    },\n    getRetentionLabel: {\n      argNames: ["retentionLabelId"]\n    },\n    getRetentionLabels: {},\n    getSyntexPoweredColumnPrompts: {\n      argNames: ["docLibId"]\n    },\n    invokeDataverseQuery: {},\n    query: {\n      argNames: ["oData"]\n    },\n    setColumnLLMInfo: {\n      argNames: ["docLibId", "columnId", "autofillPrompt", "isEnabled"]\n    },\n    setMachineLearningFlags: {\n      argNames: ["docLibId", "machineLearningFlags"]\n    },\n    setSyntexPoweredColumnPrompts: {\n      argNames: ["docLibId", "syntexPoweredColumnPrompts"]\n    },\n    verifyModelUrls: {\n      argNames: ["urls"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningModel": {\n    addModelDependency: {\n      argNames: ["modelId", "updateExisting"]\n    },\n    copy: {\n      argNames: ["copyTo"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {},\n    importMeta: {},\n    invokeConnectorQuery: {},\n    removeModelDependency: {\n      argNames: ["modelId"]\n    },\n    rename: {\n      argNames: ["renameTo"]\n    },\n    renameExtractor: {\n      argNames: ["fromExtractorName", "toExtractorName", "toColumnType"]\n    },\n    setAsModelAuthor: {},\n    update: {},\n    updateModelSettings: {\n      argNames: ["ModelSettings"]\n    },\n    updateModelTypeSpecificSettings: {\n      argNames: ["Settings"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningModel.Collection": {\n    getByTitle: {\n      argNames: ["title"]\n    },\n    getByUniqueId: {\n      argNames: ["uniqueId"]\n    },\n    getExtractorNames: {\n      argNames: ["packageName"]\n    },\n    "import": {\n      argNames: ["packageName"]\n    },\n    query: {\n      argNames: ["oData"]\n    },\n    setupPrimedLibrary: {\n      argNames: ["primedLibraryName", "packageName", "isTileViewEnabled", "serverRelativeLibraryPath"]\n    },\n    unbindModelFromContentType: {\n      argNames: ["contentTypeId"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningPublication": {\n    "delete": {},\n    update: {}\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningPublication.Collection": {\n    batchDelete: {\n      argNames: ["publications"]\n    },\n    batchRemove: {\n      argNames: ["modelSiteUrl", "modelWebServerRelativeUrl", "publications"]\n    },\n    batchUnpromote: {\n      argNames: ["promotions"]\n    },\n    checkTenantPublishPermissions: {},\n    getByModelUniqueId: {\n      argNames: ["modelUniqueId"]\n    },\n    getByModelUniqueIdAndPublicationType: {\n      argNames: ["modelUniqueId", "publicationType"]\n    },\n    getByUniqueId: {\n      argNames: ["uniqueId"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningSample": {\n    update: {}\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningSample.Collection": {\n    getByModelId: {\n      argNames: ["modelID"]\n    },\n    getByTitle: {\n      argNames: ["title"]\n    },\n    getByUniqueId: {\n      argNames: ["uniqueId"]\n    },\n    getByUniqueIdWithTokenization: {\n      argNames: ["uniqueId"]\n    },\n    getTemplateByModelId: {\n      argNames: ["modelID"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Office.Server.ContentCenter.SPMachineLearningWorkItem.Collection": {\n    getByIdentifier: {\n      argNames: ["identifier"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Office.Server.Search.REST.SearchService": {\n    autocompletions: {\n      argNames: ["querytext", "sources", "numberOfCompletions", "cursorPosition"]\n    },\n    "export": {\n      argNames: ["userName", "startTime"]\n    },\n    exportmanualsuggestions: {},\n    exportpopulartenantqueries: {\n      argNames: ["count"]\n    },\n    postquery: {\n      argNames: ["request"],\n      metadataType: "Microsoft.Office.Server.Search.REST.SearchRequest",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    query: {\n      argNames: ["querytext", "queryTemplate", "enableInterleaving", "sourceId", "rankingModelId", "startRow", "rowLimit", "rowsPerPage", "selectProperties", "culture", "refinementFilters", "refiners", "hiddenConstraints", "sortList", "enableStemming", "trimDuplicates", "timeout", "enableNicknames", "enablePhonetic", "enableFQL", "hitHighlightedProperties", "propertiesToGenerateAcronyms", "bypassResultTypes", "processBestBets", "clientType", "personalizationData", "resultsUrl", "queryTag", "trimDuplicatesIncludeId", "totalRowsExactMinimum", "impressionId", "properties", "enableQueryRules", "summaryLength", "maxSnippetLength", "desiredSnippetLength", "uiLanguage", "blockDedupeMode", "generateBlockRankLog", "enableSorting", "collapseSpecification", "processPersonalFavorites", "enableOrderingHitHighlightedProperty", "hitHighlightedMultivaluePropertyLimit", "queryTemplatePropertiesUrl", "timeZoneId", "useOLSQuery", "OLSQuerySession"]\n    },\n    recordPageClick: {\n      argNames: ["pageInfo", "clickType", "blockType", "clickedResultId", "subResultIndex", "immediacySourceId", "immediacyQueryString", "immediacyTitle", "immediacyUrl"]\n    },\n    resultspageaddress: {},\n    searchcenterurl: {},\n    searchquery: {\n      argNames: ["request"]\n    },\n    suggest: {\n      argNames: ["querytext", "iNumberOfQuerySuggestions", "iNumberOfResultSuggestions", "iNumberOfPopularResultSuggestions", "fPreQuerySuggestions", "fHitHighlighting", "fCapitalizeFirstLetters", "culture", "enableStemming", "showPeopleNameSuggestions", "enableQueryRules", "fPrefixMatchAllTerms", "sourceId", "clientType", "useOLSQuery", "OLSQuerySession", "zeroTermSuggestions"]\n    }\n  },\n  "Microsoft.Office.Server.Search.REST.SearchSetting": {\n    exportSearchReports: {\n      argNames: ["TenantId", "ReportType", "Interval", "StartDate", "EndDate", "SiteCollectionId"]\n    },\n    getpromotedresultqueryrules: {\n      argNames: ["siteCollectionLevel", "offset", "numberOfRules"]\n    },\n    getqueryconfiguration: {\n      argNames: ["callLocalSearchFarmsOnly", "skipGroupObjectIdLookup", "throwOnRemoteApiCheck"]\n    },\n    getxssearchpolicy: {},\n    pingadminendpoint: {},\n    scspartialupdateendpointinfo: {},\n    setxssearchpolicy: {\n      argNames: ["policy"]\n    }\n  },\n  "Microsoft.Online.SharePoint.AppLauncher.AppLauncher": {\n    getData: {\n      argNames: ["suiteVersion", "isMobileRequest", "locale", "onPremVer"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Common.MigrationUrlParser": {\n    parseUrl: {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Common.UrlParseResult": {\n    setDisplayUrl: {\n      argNames: ["displayUrl"]\n    },\n    setSPListInformation: {\n      argNames: ["spListInformationList"]\n    },\n    updateSiteProvisionInformation: {\n      argNames: ["spListInformation", "uri", "originalUrl", "errorCode", "message", "freeSiteStorageBytes", "isCurrentUserSiteAdmin"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.AgentGroup": {\n    "delete": {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.AgentGroup.Collection": {\n    createByName: {\n      argNames: ["Name"]\n    },\n    deleteByName: {\n      argNames: ["Name"]\n    },\n    getByName: {\n      argNames: ["Name"]\n    },\n    getGroupList: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.AllowedDataLocation": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.AllowedDataLocation.Collection": {\n    getByLocation: {\n      argNames: ["location"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmGroupMoveJob.Collection": {\n    getByMoveId: {\n      argNames: ["moveId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmSiteMoveJob": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmSiteMoveJob.Collection": {\n    getByMoveId: {\n      argNames: ["moveId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmUserMoveJob": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossFarmUserMoveJob.Collection": {\n    getByMoveId: {\n      argNames: ["moveId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossGeoTenantProperty": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.CrossGeoTenantProperty.Collection": {\n    getByPropertyNameAndGeoLocation: {\n      argNames: ["propertyName", "geo"]\n    },\n    getChanges: {\n      argNames: ["startTimeInUtc"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GeoAdministrator": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GeoAdministrator.Collection": {\n    create: {\n      argNames: ["parameters"]\n    },\n    getByLoginName: {\n      argNames: ["loginName"]\n    },\n    getByLoginNameAndType: {\n      argNames: ["loginName", "memberType"]\n    },\n    getByObjectId: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GeoExperience": {\n    upgradeAllInstancesToSPOMode: {},\n    upgradeToSPOMode: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GeoTenantInstanceInformation.Collection": {\n    getByGeoLocation: {\n      argNames: ["geoLocation"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GroupMoveJob": {\n    cancel: {},\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.GroupMoveJob.Collection": {\n    getByGroupName: {\n      argNames: ["groupname"]\n    },\n    getMoveReport: {\n      argNames: ["moveState", "moveDirection", "limit", "startTime", "endTime"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.MoveSiteROState": {\n    updateSiteROState: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.MoveSiteROState.Collection": {\n    getBySiteId: {\n      argNames: ["siteId"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.MultiGeoServicesBeta": {\n    compatibleDB: {\n      argNames: ["dbSchemaVersion", "siteSubscriptionId", "siteUrl"]\n    },\n    dBSchemaCompatibilityCheck: {},\n    geoMoveCompatibilityChecks: {},\n    hasMnALicense: {\n      argNames: ["mnALicenseType"]\n    },\n    mnAGroupMoveValidationResult: {\n      argNames: ["encodedQuery"]\n    },\n    orgRelationGroupManagedPath: {\n      argNames: ["encodedNotificationQuery"]\n    },\n    orgRelationNotification: {\n      argNames: ["encodedNotificationQuery"]\n    },\n    orgRelationVerification: {\n      argNames: ["encodedVerificationQuery"]\n    },\n    restoreWorkflowCount: {\n      argNames: ["isCrossTenant"]\n    },\n    userMnAODMoveValidationResult: {\n      argNames: ["encodedQuery"]\n    },\n    userPersonalSiteId: {\n      argNames: ["userPrincipalName"]\n    },\n    userPersonalSiteLocation: {\n      argNames: ["userPrincipalName"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    xTenantMoveCompatibilityCheck: {\n      argNames: ["targetTenantHostUrl"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.SiteMoveJob": {\n    cancel: {},\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.SiteMoveJob.Collection": {\n    getByUrl: {\n      argNames: ["url"]\n    },\n    getMoveJobByUrl: {\n      argNames: ["SourceSiteUrl", "SubscriptionId", "SourceDataLocation", "EnableSiteToMoveDatastore"]\n    },\n    getMoveReport: {\n      argNames: ["moveState", "moveDirection", "limit", "startTime", "endTime"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.StorageQuota": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.StorageQuota.Collection": {\n    getByLocation: {\n      argNames: ["geoLocation"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.TaxonomyReplicationParameters": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.UnifiedGroup.Collection": {\n    getByAlias: {\n      argNames: ["alias"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.UserMoveJob": {\n    cancel: {},\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.UserMoveJob.Collection": {\n    getByDirection: {\n      argNames: ["direction"]\n    },\n    getByMoveId: {\n      argNames: ["odbMoveId"]\n    },\n    getByUpn: {\n      argNames: ["upn"]\n    },\n    getByValidPdl: {\n      argNames: ["validPdl"]\n    },\n    getMoveReport: {\n      argNames: ["moveState", "moveDirection", "limit", "startTime", "endTime"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.Onboarding.RestService.PrioritySiteRename.PrioritySiteRenameJob.Collection": {\n    cancel: {\n      argNames: ["url"]\n    },\n    get: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.Onboarding.RestService.Service.SiteRenameJob.Collection": {\n    getBySiteUrl: {\n      argNames: ["siteUrl"]\n    },\n    getJobsByParentId: {\n      argNames: ["parentId"]\n    },\n    getJobsByParentIdAndState: {\n      argNames: ["parentId", "state"]\n    },\n    getJobsBySiteUrl: {\n      argNames: ["url"]\n    },\n    getSiteRenameReport: {\n      argNames: ["state"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.Onboarding.RestService.TenantRename.TenantRenameJob.Collection": {\n    cancel: {},\n    get: {},\n    getWarningMessages: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.SPLogger.LogExport": {\n    getFiles: {\n      argNames: ["partitionId", "logType"]\n    },\n    getLogTypes: {},\n    getPartitions: {\n      argNames: ["logType"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdmin.MiddleTier.DDIAdapter": {\n    getList: {\n      argNames: ["schema", "workflow", "stream"]\n    },\n    getObject: {\n      argNames: ["schema", "workflow", "stream"]\n    },\n    multiObjectExecute: {\n      argNames: ["schema", "workflow", "stream"]\n    },\n    newObject: {\n      argNames: ["schema", "workflow", "stream"]\n    },\n    removeObjects: {\n      argNames: ["schema", "workflow", "stream"]\n    },\n    setObject: {\n      argNames: ["schema", "workflow", "stream"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.HubSiteProperties": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal": {\n    getIsolatedAppDomainsByAppId: {\n      argNames: ["appIds"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeAppsToDelete: {\n      argNames: ["domainsToDelete"]\n    },\n    update: {},\n    updateSpfxClientSecret: {\n      argNames: ["secretValue"]\n    },\n    updateSpfxThirdPartyAppId: {\n      argNames: ["appId"]\n    },\n    updateSpfxThirdPartyIsolatedComponentFields: {\n      argNames: ["catalogItemId", "apAppObjectId", "spObjectId", "appId"]\n    },\n    updateSpfxThirdPartyIsolatedSecret: {\n      argNames: ["servicePrincipalId", "secretValue"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionGrant": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionGrant.Collection": {\n    getByObjectId: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionRequest": {\n    approve: {},\n    deny: {}\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipalPermissionRequest.Collection": {\n    approve: {\n      argNames: ["resource", "scope"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Office365CommsMessagesServiceProxy": {\n    messageCenterMessages: {\n      argNames: ["messagesFieldsData"]\n    },\n    serviceHealthMessages: {\n      argNames: ["messagesFieldsData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPDataGovernanceInsightRestApiClient": {\n    createDataAccessGovernanceReport: {\n      argNames: ["reportEntity", "workload", "reportType", "fileSensitivityLabelName", "fileSensitivityLabelGUID", "name", "template", "privacy", "siteSensitivityLabelGUID", "countOfUsersMoreThan"]\n    },\n    exportSPODataAccessGovernanceInsight: {\n      argNames: ["reportId"]\n    },\n    getSPODataAccessGovernanceInsight: {\n      argNames: ["reportEntity", "workLoad"]\n    },\n    getSPODataAccessGovernanceInsightById: {\n      argNames: ["reportId"]\n    },\n    getSPODataAccessGovernanceInsightV2: {\n      argNames: ["reportEntity"]\n    },\n    removeDataAccessGovernanceReport: {\n      argNames: ["reportId"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPDataGovernanceSARRestApiClient": {\n    getSPOSiteReview: {\n      argNames: ["reportEntity", "siteReviewtatus", "siteReviewID", "siteID"]\n    },\n    startSPOSiteReview: {\n      argNames: ["detailedSourceReportId", "siteId", "adminComment"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPOContentSecurityPolicyConfiguration": {\n    add: {\n      argNames: ["source"]\n    },\n    remove: {\n      argNames: ["source"]\n    },\n    updateScriptSources: {\n      argNames: ["added", "removed"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPOGroup": {\n    addAsGroupOwnerAndMember: {\n      argNames: ["groupId", "userId", "userPrincipalName"]\n    },\n    addGroupMember: {\n      argNames: ["groupId", "memberId", "memberPrincipalName"]\n    },\n    addGroupOwner: {\n      argNames: ["groupId", "ownerId", "ownerPrincipalName"]\n    },\n    getGroupInfo: {\n      argNames: ["groupId"]\n    },\n    removeAsGroupOwnerAndMember: {\n      argNames: ["groupId", "userId"]\n    },\n    removeGroupMember: {\n      argNames: ["groupId", "memberId"]\n    },\n    removeGroupOwner: {\n      argNames: ["groupId", "ownerId"]\n    },\n    updateGroupProperties: {\n      argNames: ["groupId", "displayName"]\n    },\n    updateGroupPropertiesBySiteId: {\n      argNames: ["groupId", "siteId", "displayName"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPOMalwareFile": {\n    getMalwareFileStream: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPORestrictedContentDiscoverabilityClient": {\n    createRestrictedContentDiscoverabilityReport: {},\n    getAllRestrictedContentDiscoverabilityReports: {},\n    getRestrictContentOrgWideSearchUsageInsightsReportContent: {\n      argNames: ["reportId"]\n    },\n    getSPODataAccessGovernanceInsightById: {\n      argNames: ["reportId"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SPOWebAppServicePrincipalPublic": {\n    addCustomSpfx3rdPartyAppPrincipal: {\n      argNames: ["appId", "appUri", "clientSecret"]\n    },\n    getCustomSpfx3rdPartyAppPrincipal: {},\n    removeCustomSpfx3rdPartyAppPrincipal: {},\n    updateCustomSpfx3rdPartyAppPrincipalClientSecret: {\n      argNames: ["clientSecret"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SiteProperties": {\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.SiteProperties.Collection": {\n    checkSiteIsArchivedById: {\n      argNames: ["siteId"]\n    },\n    getById: {\n      argNames: ["siteId"]\n    },\n    getGroupSiteRelationship: {\n      argNames: ["siteId"]\n    },\n    getLockStateById: {\n      argNames: ["siteId"]\n    },\n    getSiteStateProperties: {\n      argNames: ["siteId"]\n    },\n    getSiteUserGroups: {\n      argNames: ["siteId", "userGroupIds"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Tenant": {\n    acceptSyntexRepositoryTermsOfService: {},\n    activateApplicationBillingPolicy: {\n      argNames: ["billingPolicyId"]\n    },\n    addBrandFontPackage: {\n      argNames: ["creationInformation"]\n    },\n    addHomeSite: {\n      argNames: ["homeSiteUrl", "order", "audiences"]\n    },\n    addRecentAdminAction: {\n      argNames: ["payload"]\n    },\n    addRecentAdminActionReport: {\n      argNames: ["payload"]\n    },\n    addRecentAdminActions: {\n      argNames: ["payload"]\n    },\n    addSPOContainerUserRole: {\n      argNames: ["ContainerId", "loginName", "role"]\n    },\n    addSPORestrictedSearchAllowedList: {\n      argNames: ["siteUrls"]\n    },\n    addTenantAdminListItem: {\n      argNames: ["columnValues", "listName"]\n    },\n    addTenantAdminListView: {\n      argNames: ["parameters"]\n    },\n    addToOrgAssetsLibAndCdnV2: {\n      argNames: ["cdnType", "libUrl", "thumbnailUrl", "orgAssetType", "defaultOriginAdded"]\n    },\n    addToOrgAssetsLibAndCdnWithType: {\n      argNames: ["cdnType", "libUrl", "thumbnailUrl", "orgAssetType"]\n    },\n    addToOrgAssetsLibWithConfig: {\n      argNames: ["cdnType", "libUrl", "thumbnailUrl", "orgAssetType", "defaultOriginAdded", "configParam"]\n    },\n    archiveSiteById: {\n      argNames: ["siteId"]\n    },\n    bootstrapPolicyAutomationResources: {},\n    checkTenantIntuneLicense: {},\n    checkTenantLicenses: {\n      argNames: ["licenses"]\n    },\n    clearRestrictedAccessControlOneDrive: {},\n    clearRestrictedAccessControlSharePoint: {},\n    connectSiteToHubSiteById: {\n      argNames: ["siteUrl", "hubSiteId"]\n    },\n    createApplicationBillingPolicyValidation: {\n      argNames: ["applicationId"]\n    },\n    createPolicyDefinition: {\n      argNames: ["policyInputParameters"]\n    },\n    createSite: {\n      argNames: ["siteCreationProperties"]\n    },\n    deletePolicyDefinition: {\n      argNames: ["itemId"]\n    },\n    deleteRecentAdminActionReport: {\n      argNames: ["reportId"]\n    },\n    disableCollaborationInsightsDataCollection: {},\n    downloadRansomwareImpactedAssetsReport: {\n      argNames: ["driveId", "fileName", "reportNameType"]\n    },\n    downloadSPOContainers: {\n      argNames: ["active"]\n    },\n    downloadSharingInsights: {\n      argNames: ["queryMode", "insightsType"]\n    },\n    enableCollaborationInsightsDataCollection: {},\n    ensureBrandCenterFeature: {},\n    exportAdminListToCSV: {\n      argNames: ["viewXml", "listName"]\n    },\n    exportCSVFile: {\n      argNames: ["timeZoneId"]\n    },\n    exportToCSV: {\n      argNames: ["viewXml", "timeZoneId", "columnsInfo", "listName"]\n    },\n    exportUnlicensedOneDriveForBusinessListToCSV: {},\n    getAdminListViews: {},\n    getBillingPolicyIdForApp: {\n      argNames: ["applicationId"]\n    },\n    getBrandCenterConfiguration: {},\n    getBrandFontPackages: {},\n    getCollaborationInsightsData: {},\n    getCollaborationInsightsOverview: {},\n    getFileVersionBatchDeleteJobProgress: {\n      argNames: ["siteUrl"]\n    },\n    getFileVersionBatchDeleteJobProgressForLibrary: {\n      argNames: ["siteUrl", "listParams"]\n    },\n    getFileVersionExpirationReportJobProgress: {\n      argNames: ["siteUrl", "reportUrl"]\n    },\n    getFileVersionExpirationReportJobProgressForLibrary: {\n      argNames: ["siteUrl", "listParams", "reportUrl"]\n    },\n    getFileVersionPolicyForLibrary: {\n      argNames: ["siteUrl", "listParams"]\n    },\n    getFilteredSPListItems: {\n      argNames: ["columnName", "columnValue", "columnType", "listName"]\n    },\n    getHomeSites: {},\n    getHomeSitesDetails: {},\n    getIBVersionForTenant: {},\n    getIdleSessionSignOutForUnmanagedDevices: {},\n    getInsightsSummary: {\n      argNames: ["insightsScenario", "dataFileName", "pageIndex", "modelName", "maxTokenSize", "maxContentSize", "timeoutMS"]\n    },\n    getOneDriveSiteSharingInsights: {\n      argNames: ["queryMode"]\n    },\n    getOrgAssets: {},\n    getPowerAppsEnvironments: {},\n    getRansomwareActivities: {\n      argNames: ["parameters"]\n    },\n    getRansomwareActivitiesOverview: {\n      argNames: ["eventId"]\n    },\n    getRansomwareEvents: {\n      argNames: ["parameters"]\n    },\n    getRansomwareEventsOverview: {},\n    getSPHSiteUrl: {},\n    getSPListItemCount: {\n      argNames: ["listName"]\n    },\n    getSPListRootFolderProperties: {\n      argNames: ["listName"]\n    },\n    getSPOAllWebTemplates: {\n      argNames: ["cultureName", "compatibilityLevel"]\n    },\n    getSPOAppBillingPolicies: {},\n    getSPOContainerByContainerId: {\n      argNames: ["containerId"]\n    },\n    getSPOContainerByContainerSiteUrl: {\n      argNames: ["containerSiteUrl"]\n    },\n    getSPOContainerTypeById: {\n      argNames: ["containerTypeId", "containerTenantType"]\n    },\n    getSPOContainerTypeConfigurationByContainerTypeId: {\n      argNames: ["containerTypeId"]\n    },\n    getSPOContainerTypes: {\n      argNames: ["containerTenantType"]\n    },\n    getSPOContainersByApplicationId: {\n      argNames: ["owningApplicationId", "paged", "pagingToken"]\n    },\n    getSPODeletedContainers: {},\n    getSPORestrictedSearchAllowedList: {},\n    getSPORestrictedSearchMode: {},\n    getSPOSiteCreationSources: {},\n    getSPOSyntexApplications: {},\n    getSPOSyntexConsumingApplications: {\n      argNames: ["owningApplicationId", "applicationId"]\n    },\n    getSPOTenantAllWebTemplates: {},\n    getSPOTenantWebTemplates: {\n      argNames: ["localeId", "compatibilityLevel"]\n    },\n    getSPOWebTemplatesAllowedForArchiving: {},\n    getSharePointSettingData: {},\n    getSharePointSiteSharingInsights: {\n      argNames: ["queryMode"]\n    },\n    getSiteCohortsSummary: {\n      argNames: ["view"]\n    },\n    getSiteAdministrators: {\n      argNames: ["siteId"]\n    },\n    getSiteHealthStatus: {\n      argNames: ["sourceUrl"]\n    },\n    getSitePropertiesByUrl: {\n      argNames: ["url", "includeDetail"]\n    },\n    getSitePropertiesFromSharePointByFilters: {\n      argNames: ["speFilter"]\n    },\n    getSiteSecondaryAdministrators: {\n      argNames: ["secondaryAdministratorsFieldsData"]\n    },\n    getSiteSubscriptionId: {},\n    getSiteThumbnailLogo: {\n      argNames: ["siteUrl"]\n    },\n    getSitesByState: {\n      argNames: ["states"]\n    },\n    getSitesFromSubstrate: {\n      argNames: ["searchText"]\n    },\n    getSortedSPOContainersByApplicationId: {\n      argNames: ["owningApplicationId", "ascending", "paged", "pagingToken"]\n    },\n    getTargetedSitesDetails: {},\n    getTargetedSitesDetailsByUserId: {\n      argNames: ["userId"]\n    },\n    getTenantAllOrCompatibleIBSegments: {\n      argNames: ["segments"]\n    },\n    getTenantSendFromAddress: {},\n    getTenantSiteCreationSource: {},\n    getTopFilesSharingInsights: {\n      argNames: ["queryMode"]\n    },\n    getTrackViewFeatureAlwaysVisible: {},\n    getVersionPolicyForDocLibsJobProgress: {\n      argNames: ["siteUrl"]\n    },\n    getViewByDisplayName: {\n      argNames: ["viewName", "listName"]\n    },\n    getVivaConnectionsLicense: {},\n    grantHubSiteRightsById: {\n      argNames: ["hubSiteId", "principals", "grantedRights"]\n    },\n    hasValidEducationLicense: {},\n    isSyntexRepositoryTermsOfServiceAccepted: {},\n    newFileVersionBatchDeleteJob: {\n      argNames: ["siteUrl", "batchDeleteParams"]\n    },\n    newFileVersionBatchDeleteJobForLibrary: {\n      argNames: ["siteUrl", "listParams", "batchDeleteParams"]\n    },\n    newFileVersionExpirationReportJob: {\n      argNames: ["siteUrl", "reportUrl"]\n    },\n    newFileVersionExpirationReportJobForLibrary: {\n      argNames: ["siteUrl", "listParams", "reportUrl"]\n    },\n    newSPOContainerType: {\n      argNames: ["containerTypeProperties"]\n    },\n    purgeContainer: {\n      argNames: ["containerId"]\n    },\n    purgeSPODeletedContainerByContainerId: {\n      argNames: ["containerId"]\n    },\n    purgeSPODeletedContainerByContainerSiteUrl: {\n      argNames: ["containerSiteUrl"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recentAdminActionReportIsAuditEnabled: {},\n    registerHubSite: {\n      argNames: ["siteUrl"]\n    },\n    registerHubSiteWithCreationInformation: {\n      argNames: ["siteUrl", "creationInformation"]\n    },\n    removeContainer: {\n      argNames: ["containerId"]\n    },\n    removeDeletedSite: {\n      argNames: ["siteUrl"]\n    },\n    removeDeletedSitePreferId: {\n      argNames: ["siteUrl", "siteId"]\n    },\n    removeFileVersionBatchDeleteJob: {\n      argNames: ["siteUrl"]\n    },\n    removeFileVersionBatchDeleteJobForLibrary: {\n      argNames: ["siteUrl", "listParams"]\n    },\n    removeFromOrgAssets: {\n      argNames: ["libUrl", "listId"]\n    },\n    removeHomeSite: {\n      argNames: ["homeSiteUrl"]\n    },\n    removeSPHSite: {},\n    removeSPListItem: {\n      argNames: ["listItemId", "listName"]\n    },\n    removeSPOContainerByContainerId: {\n      argNames: ["containerId"]\n    },\n    removeSPOContainerByContainerSiteUrl: {\n      argNames: ["containerSiteUrl"]\n    },\n    removeSPOContainerType: {\n      argNames: ["spDeletedContainerTypeProperties"]\n    },\n    removeSPOContainerUserRole: {\n      argNames: ["ContainerId", "loginName", "role"]\n    },\n    removeSPORestrictedSearchAllowedList: {\n      argNames: ["siteUrls"]\n    },\n    removeSite: {\n      argNames: ["siteUrl"]\n    },\n    removeTargetedSite: {\n      argNames: ["siteId"]\n    },\n    removeTenantAdminListView: {\n      argNames: ["viewId"]\n    },\n    removeVersionPolicyForDocLibsJob: {\n      argNames: ["siteUrl"]\n    },\n    renderActiveContainers: {\n      argNames: ["containerId", "viewXml"]\n    },\n    renderAdminListData: {\n      argNames: ["parameters", "overrideParameters", "listName"]\n    },\n    renderContainersAdminApplicationsData: {},\n    renderContainersAdminListData: {\n      argNames: ["orderByColumnsList", "filterByColumnsList", "pageSize", "pagingToken", "containerStatus", "searchParameters"]\n    },\n    renderDeletedContainers: {\n      argNames: ["viewXml"]\n    },\n    renderFilteredAdminListData: {\n      argNames: ["parameters", "listName"]\n    },\n    renderFilteredAdminListDataByGroupId: {\n      argNames: ["groupId"]\n    },\n    renderIBSegmentListDataAsStream: {\n      argNames: ["parameters", "segments", "CascDelWarnMessage", "CustomAction", "DrillDown", "Field", "FieldInternalName", "Filter", "FilterData", "FilterData1", "FilterData10", "FilterData2", "FilterData3", "FilterData4", "FilterData5", "FilterData6", "FilterData7", "FilterData8", "FilterData9", "FilterField", "FilterField1", "FilterField10", "FilterField2", "FilterField3", "FilterField4", "FilterField5", "FilterField6", "FilterField7", "FilterField8", "FilterField9", "FilterFields", "FilterFields1", "FilterFields10", "FilterFields2", "FilterFields3", "FilterFields4", "FilterFields5", "FilterFields6", "FilterFields7", "FilterFields8", "FilterFields9", "FilterLookupId", "FilterLookupId1", "FilterLookupId10", "FilterLookupId2", "FilterLookupId3", "FilterLookupId4", "FilterLookupId5", "FilterLookupId6", "FilterLookupId7", "FilterLookupId8", "FilterLookupId9", "FilterOp", "FilterOp1", "FilterOp10", "FilterOp2", "FilterOp3", "FilterOp4", "FilterOp5", "FilterOp6", "FilterOp7", "FilterOp8", "FilterOp9", "FilterValue", "FilterValue1", "FilterValue10", "FilterValue2", "FilterValue3", "FilterValue4", "FilterValue5", "FilterValue6", "FilterValue7", "FilterValue8", "FilterValue9", "FilterValues", "FilterValues1", "FilterValues10", "FilterValues2", "FilterValues3", "FilterValues4", "FilterValues5", "FilterValues6", "FilterValues7", "FilterValues8", "FilterValues9", "GroupString", "HasOverrideSelectCommand", "ID", "InplaceFullListSearch", "InplaceSearchQuery", "IsCSR", "IsGroupRender", "IsXslView", "ListViewPageUrl", "OverrideRowLimit", "OverrideScope", "OverrideSelectCommand", "PageFirstRow", "PageLastRow", "QueryParams", "RootFolder", "RootFolderUniqueId", "SortDir", "SortDir1", "SortDir10", "SortDir2", "SortDir3", "SortDir4", "SortDir5", "SortDir6", "SortDir7", "SortDir8", "SortDir9", "SortField", "SortField1", "SortField10", "SortField2", "SortField3", "SortField4", "SortField5", "SortField6", "SortField7", "SortField8", "SortField9", "SortFields", "SortFieldValues", "View", "ViewCount", "ViewId", "ViewPath", "WebPartId", "FilterIBSegmentsBasedOnAndCondition"]\n    },\n    renderIBSegmentListFilterData: {\n      argNames: ["parameters"]\n    },\n    renderOwnershipPolicyStorageSPList: {\n      argNames: ["parameters", "overrideParameters"]\n    },\n    renderPolicyDefinitionList: {\n      argNames: ["parameters", "overrideParameters"]\n    },\n    renderPolicyExecutionsHistory: {\n      argNames: ["parameters", "overrideParameters"]\n    },\n    renderPolicyReport: {\n      argNames: ["parameters", "overrideParameters"]\n    },\n    renderRecentAdminActionReport: {\n      argNames: ["parameters", "overrideParameters"]\n    },\n    renderRecentAdminActions: {\n      argNames: ["parameters", "overrideParameters", "isAutoRefresh"]\n    },\n    reorderTargetedSites: {\n      argNames: ["siteIds"]\n    },\n    restoreContainer: {\n      argNames: ["containerId"]\n    },\n    restoreDeletedSite: {\n      argNames: ["siteUrl"]\n    },\n    restoreDeletedSiteById: {\n      argNames: ["siteId"]\n    },\n    restoreDeletedSitePreferId: {\n      argNames: ["siteUrl", "siteId"]\n    },\n    restoreSPODeletedContainerByContainerId: {\n      argNames: ["containerId"]\n    },\n    restoreSPODeletedContainerByContainerSiteUrl: {\n      argNames: ["containerSiteUrl"]\n    },\n    revokeHubSiteRightsById: {\n      argNames: ["hubSiteId", "principals"]\n    },\n    sendEmail: {\n      argNames: ["siteUrl", "activityEventJson"]\n    },\n    setDefaultView: {\n      argNames: ["viewId", "listName"]\n    },\n    setFileVersionPolicy: {\n      argNames: ["isAutoTrimEnabled", "majorVersionLimit", "expireVersionsAfterDays"]\n    },\n    setFileVersionPolicyForLibrary: {\n      argNames: ["siteUrl", "listParams", "versionPolicyParams"]\n    },\n    setIBSegmentsOnSite: {\n      argNames: ["siteId", "segments", "ibMode"]\n    },\n    setIdleSessionSignOutForUnmanagedDevices: {\n      argNames: ["enabled", "warnAfter", "signOutAfter"]\n    },\n    setJitDlpPolicyData: {\n      argNames: ["markAllFilesAsSensitiveByDefault", "odbSensitivityRefreshWindowInHours", "executionMode"]\n    },\n    setOrgAssetsWithConfig: {\n      argNames: ["libUrl", "thumbnailUrl", "orgAssetType", "configParam"]\n    },\n    setOrgAssetsWithType: {\n      argNames: ["libUrl", "thumbnailUrl", "orgAssetType"]\n    },\n    setSPEmbeddedApplicationPermissions: {\n      argNames: ["spSyntexApplicationProperties"]\n    },\n    setSPHSite: {\n      argNames: ["sphSiteUrl"]\n    },\n    setSPHSiteWithConfiguration: {\n      argNames: ["sphSiteUrl", "configuration"]\n    },\n    setSPOContainerProperties: {\n      argNames: ["spContainerProperties"]\n    },\n    setSPOContainerType: {\n      argNames: ["containerTypeProperties"]\n    },\n    setSPOContainerTypeConfiguration: {\n      argNames: ["spContainerTypeConfigurationProperties"]\n    },\n    setSPORestrictedSearchMode: {\n      argNames: ["mode"]\n    },\n    setSPOSyntexApplicationsClearOverrideSharingCapability: {\n      argNames: ["owningApplicationId"]\n    },\n    setSPOSyntexApplicationsSharingCapability: {\n      argNames: ["owningApplicationId", "sharingCapability", "overrideTenantSharingCapability"]\n    },\n    setSensitivityLabelContainer: {\n      argNames: ["containerId", "sensitivityLabel"]\n    },\n    setSiteAdministrators: {\n      argNames: ["siteAdministratorsFieldsData"]\n    },\n    setSiteSecondaryAdministrators: {\n      argNames: ["secondaryAdministratorsFieldsData"]\n    },\n    setSiteUserGroups: {\n      argNames: ["siteUserGroupsData"]\n    },\n    setSyntexPaygFeatureActivation: {\n      argNames: ["featureName", "activationStatus"]\n    },\n    setTrackViewFeatureAlwaysVisible: {},\n    swapSite: {\n      argNames: ["sourceUrl", "targetUrl", "archiveUrl"]\n    },\n    swapSiteWithSmartGestureOption: {\n      argNames: ["sourceUrl", "targetUrl", "archiveUrl", "includeSmartGestures"]\n    },\n    swapSiteWithSmartGestureOptionForce: {\n      argNames: ["sourceUrl", "targetUrl", "archiveUrl", "includeSmartGestures", "force"]\n    },\n    unarchiveSiteById: {\n      argNames: ["siteId"]\n    },\n    unregisterHubSite: {\n      argNames: ["siteUrl"]\n    },\n    update: {},\n    updateFileSearchVisibility: {\n      argNames: ["url", "isHidden"]\n    },\n    updateGroupSiteProperties: {\n      argNames: ["groupId", "siteId", "updateType", "parameters"]\n    },\n    updatePolicyDefinition: {\n      argNames: ["itemId", "policyInputParameters", "policyOperation"]\n    },\n    updateRansomwareActivity: {\n      argNames: ["listItemId", "columnValues", "category"]\n    },\n    updateRansomwareEvent: {\n      argNames: ["listItemId", "columnValues", "forceResolveActivity", "category"]\n    },\n    updateSPOContainerUserRole: {\n      argNames: ["ContainerId", "loginName", "role"]\n    },\n    updateSiteActivityData: {},\n    updateTargetedSite: {\n      argNames: ["siteUrl", "configurationParam"]\n    },\n    updateTenantAdminListItem: {\n      argNames: ["listItemId", "columnValues", "listName"]\n    },\n    updateTenantAdminListView: {\n      argNames: ["viewId", "viewXml"]\n    },\n    validateHomeSite: {\n      argNames: ["validationActionType", "siteUrl"]\n    },\n    validateMultipleHomeSitesParameterExists: {\n      argNames: ["hasParameters"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.TenantAdminSettingsService": {\n    getTenantSharingStatus: {},\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.TenantManagement.ExternalUser.Collection": {\n    getById: {\n      argNames: ["uniqueId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantManagement.Office365Tenant": {\n    addPublicCdnOrigin: {\n      argNames: ["origin"]\n    },\n    addSdnProvider: {\n      argNames: ["identifier", "license"]\n    },\n    addTenantCdnOrigin: {\n      argNames: ["cdnType", "originUrl"]\n    },\n    addTenantTheme: {\n      argNames: ["name", "themeJson"]\n    },\n    addToOrgAssetsLibAndCdn: {\n      argNames: ["cdnType", "libUrl", "thumbnailUrl", "orgAssetType", "defaultOriginAdded"]\n    },\n    addToOrgAssetsWithConfig: {\n      argNames: ["cdnType", "libUrl", "thumbnailUrl", "orgAssetType", "defaultOriginAdded", "configParam"]\n    },\n    createTenantCdnDefaultOrigins: {\n      argNames: ["cdnType"]\n    },\n    deleteImportProfilePropertiesJob: {\n      argNames: ["jobId"]\n    },\n    deleteTenantTheme: {\n      argNames: ["name"]\n    },\n    disableSharingForNonOwnersOfSite: {\n      argNames: ["siteUrl"]\n    },\n    getAllTenantThemes: {},\n    getCustomFontsMinorVersion: {\n      argNames: ["libUrl"]\n    },\n    getExternalUsers: {\n      argNames: ["position", "pageSize", "filter", "sortOrder"]\n    },\n    getExternalUsersForSite: {\n      argNames: ["siteUrl", "position", "pageSize", "filter", "sortOrder"]\n    },\n    getExternalUsersWithSortBy: {\n      argNames: ["position", "pageSize", "filter", "sortPropertyName", "sortOrder"]\n    },\n    getHideDefaultThemes: {},\n    getIdleSessionSignOutForUnmanagedDevices: {},\n    getImportProfilePropertyJob: {\n      argNames: ["jobId"]\n    },\n    getImportProfilePropertyJobs: {},\n    getTenantCdnEnabled: {\n      argNames: ["cdnType"]\n    },\n    getTenantCdnOrigins: {\n      argNames: ["cdnType"]\n    },\n    getTenantCdnPolicies: {\n      argNames: ["cdnType"]\n    },\n    getTenantTheme: {\n      argNames: ["name"]\n    },\n    incrementCustomFontsMinorVersion: {\n      argNames: ["libUrl"]\n    },\n    isSharingDisabledForNonOwnersOfSite: {\n      argNames: ["siteUrl"]\n    },\n    logCustomFontsLargeUpload: {\n      argNames: ["numCatalogs", "numFonts", "totalExpectedFiles"]\n    },\n    queueImportProfileProperties: {\n      argNames: ["idType", "sourceDataIdProperty", "propertyMap", "sourceUri"]\n    },\n    removeExternalUsers: {\n      argNames: ["uniqueIds"]\n    },\n    removeFromOrgAssets: {\n      argNames: ["libUrl", "listId"]\n    },\n    removeFromOrgAssetsAndCdn: {\n      argNames: ["remove", "cdnType", "libUrl"]\n    },\n    removePreviousCustomFontUpload: {\n      argNames: ["majVersions", "libUrl"]\n    },\n    removePublicCdnOrigin: {\n      argNames: ["originId"]\n    },\n    removeSdnProvider: {},\n    removeTenantCdnOrigin: {\n      argNames: ["cdnType", "originUrl"]\n    },\n    revokeAllUserSessions: {\n      argNames: ["userName"]\n    },\n    revokeAllUserSessionsByPuid: {\n      argNames: ["puidList"]\n    },\n    setBlockDownloadFileTypePolicyData: {\n      argNames: ["blockDownloadFileTypePolicy", "fileTypeIds", "excludedBlockDownloadGroupIds"]\n    },\n    setBlockDownloadFileTypePolicyExclusionList: {\n      argNames: ["excludedBlockDownloadGroupIds"]\n    },\n    setHideDefaultThemes: {\n      argNames: ["hideDefaultThemes"]\n    },\n    setIdleSessionSignOutForUnmanagedDevices: {\n      argNames: ["enabled", "warnAfter", "signOutAfter"]\n    },\n    setJitDlpPolicyData: {\n      argNames: ["markAllFilesAsSensitiveByDefault", "odbSensitivityRefreshWindowInHours", "executionMode"]\n    },\n    setOrgAssetsLib: {\n      argNames: ["libUrl", "thumbnailUrl", "orgAssetType"]\n    },\n    setOrgAssetsLibWithConfig: {\n      argNames: ["libUrl", "thumbnailUrl", "orgAssetType", "configParam"]\n    },\n    setTenantCdnEnabled: {\n      argNames: ["cdnType", "isEnabled"]\n    },\n    setTenantCdnPolicy: {\n      argNames: ["cdnType", "policy", "policyValue"]\n    },\n    syncAadB2BManagementPolicy: {},\n    updateTenantTheme: {\n      argNames: ["name", "themeJson"]\n    },\n    uploadCustomFontsAndCatalogLib: {\n      argNames: ["customFontFiles", "libUrl"]\n    }\n  },\n  "Microsoft.SharePoint.Administration.FeatureDefinition.Collection": {\n    getFeatureDefinition: {\n      argNames: ["featureDisplayName", "compatibilityLevel"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.SharePoint.Administration.SPAnalyticsUsageService": {\n    logevent: {\n      argNames: ["usageEntry"]\n    }\n  },\n  "Microsoft.SharePoint.Administration.SPAppStateQueryJobDefinition": {\n    performFastRevokeWithClientIds: {}\n  },\n  "Microsoft.SharePoint.Administration.SiteMove.Service.SiteMoveService": {\n    acquireSystemSiteLock: {\n      argNames: ["lockRequestor", "lockType", "leaseDurationInMinutes"]\n    },\n    clearSiteRelocationMarker: {},\n    extendSystemSiteLockExpiration: {\n      argNames: ["leaseDurationInMinute"]\n    },\n    getCPSChangeToken: {},\n    getCPSSiteDeleteReason: {},\n    getDataChunks: {},\n    getDataReader: {\n      argNames: ["sqlCommandText"]\n    },\n    getDatabaseProperties: {},\n    getMarker: {},\n    getEventCacheDataChunk: {\n      argNames: ["lastCopiedId", "searchChangeToken"]\n    },\n    getEventCacheExColumns: {},\n    getEventCacheExDataChunk: {\n      argNames: ["lastCopiedId"]\n    },\n    getEventCacheIds: {\n      argNames: ["lastCopiedId"]\n    },\n    getScalarValue: {\n      argNames: ["sqlCommandText"]\n    },\n    getServiceInfo: {},\n    getSiteProperties: {},\n    getTenantWorkflows: {},\n    getValidationChunks: {},\n    isDbReadOnly: {},\n    isSystemSiteLocked: {\n      argNames: ["lockRequestor"]\n    },\n    lockSite: {},\n    pauseCrawling: {\n      argNames: ["originalCPSDeleteReason"]\n    },\n    processStorageMetricsChanges: {},\n    releaseSystemSiteLock: {\n      argNames: ["lockRequestor"]\n    },\n    resumeCrawling: {\n      argNames: ["originalCPSDeleteReason"]\n    },\n    sourceCleanupAfterMove: {\n      argNames: ["isDeleted"]\n    },\n    unlockSiteOnFailure: {\n      argNames: ["originalLockFlags"]\n    }\n  },\n  "Microsoft.SharePoint.Administration.SiteMove.Service.SiteRelocationJobManagementService": {\n    enqueueSiteRelocationJob: {\n      argNames: ["siteId", "siteSubscriptionId", "siteUrl", "sourceDatabaseId", "targetDatabaseId", "siteMoveFlags", "preferredStartTimeInUtc"]\n    },\n    getServiceInfo: {}\n  },\n  "Microsoft.SharePoint.AuthPolicy.Events.SPAuthEvent.Collection": {\n    query: {\n      argNames: ["oData"]\n    },\n    roleAssignmentMSGraphNotify: {\n      argNames: ["tenant", "action", "type", "resourcePayload", "id", "containerId"]\n    }\n  },\n  "Microsoft.SharePoint.AuthPolicy.SPTenantIBPolicyComplianceReport.Collection": {\n    getAllReportStates: {},\n    getReportById: {\n      argNames: ["ReportId", "ShowIncompatibleSegmentsPairsAndInvalidSegmentsFilesContents"]\n    },\n    query: {\n      argNames: ["oData"]\n    },\n    removeFinalizedReport: {\n      argNames: ["ReportId"]\n    }\n  },\n  "Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog": {\n    getCrawledUrls: {\n      argNames: ["getCountOnly", "maxRows", "queryString", "isLike", "contentSourceID", "errorLevel", "errorID", "startDateTime", "endDateTime"]\n    },\n    getUnsuccesfulCrawledUrls: {\n      argNames: ["displayUrl", "startDateTime", "endDateTime"]\n    }\n  },\n  "Microsoft.SharePoint.Client.Search.Administration.SiteContentProcessingInfoProvider": {\n    getAzureContainerToken: {},\n    notifyContentProcessingStatus: {\n      argNames: ["webId", "listId", "uniqueId", "properties"]\n    },\n    reportContentProcessingStatus: {\n      argNames: ["webId", "listId", "uniqueId", "azureContainerTokenUri", "encryptionKey", "priority", "errorCode", "errorDescription"]\n    }\n  },\n  "Microsoft.SharePoint.Client.Search.Administration.TenantCrawlVersionsInfoProvider": {\n    disableCrawlVersions: {\n      argNames: ["siteId"]\n    },\n    disableCrawlVersionsForTenant: {},\n    enableCrawlVersions: {\n      argNames: ["siteId"]\n    },\n    enableCrawlVersionsForTenant: {},\n    getSiteCrawlVersionStatus: {\n      argNames: ["siteId"]\n    },\n    isCrawlVersionsEnabled: {\n      argNames: ["siteId"]\n    },\n    isCrawlVersionsEnabledForTenant: {}\n  },\n  "Microsoft.SharePoint.Client.Search.Administration.TenantRecycleBinInfoProvider": {\n    disableRecycleBinDiscoverabilityForTenant: {},\n    enableRecycleBinDiscoverabilityForTenant: {},\n    isRecycleBinDiscoverabilityEnabledForTenant: {}\n  },\n  "Microsoft.SharePoint.Client.Search.Analytics.SignalStore": {\n    signals: {\n      argNames: ["signals"]\n    }\n  },\n  "Microsoft.SharePoint.Client.Search.Query.RankingLabeling": {\n    addJudgment: {\n      argNames: ["userQuery", "url", "labelId"]\n    },\n    getJudgementsForQuery: {\n      argNames: ["query"]\n    },\n    normalizeResultUrl: {\n      argNames: ["url"]\n    }\n  },\n  "Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection": {\n    add: {\n      argNames: ["matchType", "matchValue", "boost"]\n    },\n    clear: {}\n  },\n  "Microsoft.SharePoint.Client.Search.Query.SortCollection": {\n    add: {\n      argNames: ["strProperty", "direction"]\n    },\n    clear: {}\n  },\n  "Microsoft.SharePoint.Client.Search.Query.StringCollection": {\n    add: {\n      argNames: ["property"]\n    },\n    clear: {}\n  },\n  "Microsoft.SharePoint.ClientSideComponent.HostedApp": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    updateWebPartData: {\n      argNames: ["webPartDataAsJson"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "Microsoft.SharePoint.ClientSideComponent.HostedAppsManager": {\n    add: {\n      argNames: ["webPartDataAsJson", "hostType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addEx: {\n      argNames: ["webPartDataAsJson", "hostType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getById: {\n      argNames: ["id"]\n    }\n  },\n  "Microsoft.SharePoint.Comments.comment": {\n    "delete": {\n      name: "",\n      requestMethod: "DELETE"\n    },\n    like: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    unlike: {}\n  },\n  "Microsoft.SharePoint.Comments.comment.Collection": {\n    add: {\n      argNames: ["text"],\n      metadataType: "Microsoft.SharePoint.Comments.comment",\n      name: "",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    deleteAll: {\n      requestType: utils_1.RequestType.Post\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.SharePoint.Convergence.ConsumerPermissions": {\n    grantConsumerSitePermissions: {},\n    revokeConsumerSitePermissions: {}\n  },\n  "Microsoft.SharePoint.Convergence.MigrationCompleteStateApi": {\n    addState: {},\n    isDoclibContributorOwnerEnabled: {},\n    isSuspended: {}\n  },\n  "Microsoft.SharePoint.Convergence.OdcMetadataCleanedUpApi": {\n    addState: {}\n  },\n  "Microsoft.SharePoint.EmployeeEngagement.VivaConnectionsPage": {\n    getData: {},\n    setSpotlightConfiguration: {\n      argNames: ["configuration"]\n    }\n  },\n  "Microsoft.SharePoint.EmployeeEngagement.VivaHome": {\n    addImage: {\n      argNames: ["fileName", "imageStream"]\n    },\n    addImageFromExternalUrl: {\n      argNames: ["fileName", "externalUrl"]\n    },\n    titleRegion: {\n      argNames: ["vivaHomeTitleRegion"]\n    },\n    updateGoToVCButtonFlag: {\n      argNames: ["isGoBackToConnectionsButtonDisabled"]\n    }\n  },\n  "Microsoft.SharePoint.EmployeeEngagement.VivaResources": {\n    addLink: {\n      argNames: ["newLink"]\n    },\n    getLinks: {},\n    removeLink: {\n      argNames: ["id"]\n    },\n    reorderLink: {\n      argNames: ["linkId", "prevLinkId"]\n    },\n    updateLink: {\n      argNames: ["updatedLink"]\n    },\n    updateLinks: {\n      argNames: ["links"]\n    }\n  },\n  "Microsoft.SharePoint.IR.IRMigration": {\n    deleteAndRecreateIRList: {}\n  },\n  "Microsoft.SharePoint.IdentityModel.SPAllOrgSGManager": {\n    createAllOrgSecurityGroup: {}\n  },\n  "Microsoft.SharePoint.Insights.SPTenantIBInsightsReportManager": {\n    createReport: {},\n    getAllReportsMetadata: {},\n    getReport: {\n      argNames: ["reportId", "siteType"]\n    },\n    getReportData: {\n      argNames: ["reportId", "siteType", "section"]\n    }\n  },\n  "Microsoft.SharePoint.Internal.ActivityLogger": {\n    feedbackDirect: {\n      argNames: ["Operation", "ListId", "ListItemUniqueId", "AffectedResourceUrl", "ItemType", "json"]\n    },\n    feedbackIndirect: {\n      argNames: ["Operation", "ListId", "ListItemUniqueId", "AffectedResourceUrl", "ItemType", "json"]\n    },\n    logActivity: {\n      argNames: ["Operation", "ListId", "ListItemUniqueId", "AffectedResourceUrl", "ItemType", "ExtraProperties", "AuditCreationTime", "IsOffline"]\n    },\n    logActivityBulk: {\n      argNames: ["Operation", "SiteId", "WebId", "ListId", "Requests"]\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CardDesigns": {\n    add: {\n      argNames: ["description", "id", "serializedProperties", "showInToolbox", "title"]\n    },\n    update: {\n      argNames: ["description", "id", "serializedProperties", "showInToolbox", "title"]\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata": {\n    deploy: {\n      argNames: ["skipFeatureDeployment", "isUpdatingApp"],\n      requestType: utils_1.RequestType.Post\n    },\n    install: {\n      requestType: utils_1.RequestType.Post\n    },\n    remove: {\n      requestType: utils_1.RequestType.Post\n    },\n    retract: {\n      requestType: utils_1.RequestType.Post\n    },\n    uninstall: {\n      requestType: utils_1.RequestType.Post\n    },\n    upgrade: {\n      requestType: utils_1.RequestType.Post\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedItem.Collection": {\n    add: {\n      argNames: ["absolutePath"]\n    },\n    getById: {\n      argNames: ["siteId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["absolutePath"]\n    },\n    removeById: {\n      argNames: ["siteId"]\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor": {\n    properties: ["AvailableApps|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection|/getById(\'[Name]\')|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata"],\n    add: {\n      argNames: ["Title", "Url", "Description"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TeamsPackageDownload": {\n    downloadTeams: {}\n  },\n  "Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor": {\n    properties: ["AvailableApps|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata.Collection|/getById(\'[Name]\')|Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata"],\n    add: {\n      argNames: ["Url", "Overwrite", "Content"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    addAndDeployStoreAppById: {\n      argNames: ["CallerId", "CMU", "isUpdatingApp", "Overwrite", "SkipFeatureDeployment", "StoreAssetId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addStoreApp: {\n      argNames: ["Url", "Overwrite", "IconUrl", "Publisher", "ShortDescription", "StoreAssetId", "Content"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    appRequests: {\n      argNames: ["AppRequestInfo"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    downloadTeamsSolution: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    downloadTeamsSolutionByUniqueId: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getAppById: {\n      argNames: ["itemUniqueId"]\n    },\n    isAppUpgradeAvailable: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sendAppRequestStatusNotificationEmail: {\n      argNames: ["RequestGuid"]\n    },\n    solutionContainsTeamsComponent: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    syncSolutionToTeams: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    syncSolutionToTeamsByUniqueId: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    updateMyRequestStatus: {\n      argNames: ["RequestId", "Status"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    upload: {\n      argNames: ["Url", "Overwrite", "Content"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.Device": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.Device.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCenterDeployStatus": {\n    isChangeDeployed: {\n      argNames: ["changeName"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCenterStorage": {\n    create: {\n      argNames: ["config"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    file: {\n      argNames: ["folderName", "fileName", "file", "overwrite"]\n    },\n    parseUrl: {\n      argNames: ["destinationUrl", "retrieveAllLists", "retrieveFoldersForAllLists", "forceMySiteDefaultList", "migrationType"]\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCenterTeams": {\n    teamChannels: {\n      argNames: ["teamId", "membershipType"]\n    },\n    teamChannelsExperiment: {\n      argNames: ["teamId", "membershipType"]\n    },\n    teams: {\n      argNames: ["startsWith", "limit", "withLogo"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCredential": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationCredential.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    getCredentials: {\n      argNames: ["AccountName", "Type"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationProperties": {\n    "delete": {\n      argNames: ["key"]\n    },\n    getProperty: {\n      argNames: ["key"]\n    },\n    setProperty: {\n      argNames: ["key", "value", "throwIfExists"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationSPFlight": {\n    isFlightEnabled: {\n      argNames: ["flightName"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationTask": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.MigrationTask.Collection": {\n    batchCreate: {\n      argNames: ["taskDefinitions", "taskSettings", "mmTaskSettings"]\n    },\n    batchDelete: {\n      argNames: ["taskIdList", "deleteInProgressTask"]\n    },\n    batchUpdate: {\n      argNames: ["tasks"]\n    },\n    createDuplicateTasks: {\n      argNames: ["taskDefinition", "taskSettings", "mmTaskSettings", "taskCount"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.PerformanceData": {\n    "delete": {}\n  },\n  "Microsoft.Online.SharePoint.MigrationCenter.Service.PerformanceData.Collection": {\n    addPerfDataTest: {\n      argNames: ["Count", "Bottleneck", "MaxDuration", "MaxTaskFiles"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    getData: {\n      argNames: ["StartTime", "EndTime", "AgentId", "TimeUnit"]\n    },\n    getPerfDataTest: {\n      argNames: ["StartTime", "EndTime", "AgentId"]\n    },\n    getRawData: {\n      argNames: ["StartTime", "EndTime", "AgentId"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.DfDeprecationJob": {\n    "delete": {}\n  },\n  "Microsoft.Online.SharePoint.MultiGeo.Service.DfDeprecationJob.Collection": {\n    getBySiteUrl: {\n      argNames: ["sourceSiteUrl", "targetSiteUrl"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "Microsoft.Online.SharePoint.TenantAdministration.Internal.SPO3rdPartyAADPermissionGrant.Collection": {\n    add: {\n      argNames: ["servicePrincipalId", "resource", "scope"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["servicePrincipalId", "resource", "scope"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "Microsoft.SharePoint.MultiGeo.SPMultiGeoProxy": {\n    remoteThumbnail: {\n      argNames: ["url"]\n    }\n  },\n  "Microsoft.SharePoint.Navigation.REST.HomeSiteNavigationSettings": {\n    enableGlobalNavigation: {\n      argNames: ["isEnabled"]\n    }\n  },\n  "Microsoft.SharePoint.Navigation.REST.NavigationServiceRest": {\n    properties: ["MenuState|menustate|([Name])|menunode"],\n    currentResourcesNav: {\n      argNames: ["source", "includeVivaResources"]\n    },\n    getPublishingNavigationProviderType: {\n      argNames: ["mapProviderName"]\n    },\n    globalNav: {\n      argNames: ["source", "includeVivaResources"]\n    },\n    globalNavEnabled: {},\n    homeSiteNavigation: {\n      argNames: ["source"]\n    },\n    menuNodeKey: {\n      argNames: ["currentUrl", "mapProviderName"]\n    },\n    menuState: {\n      argNames: ["menuNodeKey", "mapProviderName", "depth", "customProperties"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    saveMenuState: {\n      argNames: ["menuState", "mapProviderName"]\n    },\n    setGlobalNavEnabled: {\n      argNames: ["isEnabled"]\n    }\n  },\n  "Microsoft.SharePoint.OrgNewsSite.OrgNewsSiteApi": {\n    details: {}\n  },\n  "Microsoft.SharePoint.Photos.PhotosMigration": {\n    migratePhotosData: {}\n  },\n  "Microsoft.SharePoint.Portal.GroupService": {\n    getGroupImage: {\n      argNames: ["id", "hash", "color"]\n    },\n    setGroupImage: {\n      argNames: ["imageStream"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    syncGroupProperties: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "Microsoft.SharePoint.Portal.GroupSiteManager": {\n    cacheCurrentUserJoinedTeamsResult: {\n      argNames: ["joinedTeams"]\n    },\n    canUserCreateGroup: {},\n    clearCurrentUserTeamsCache: {},\n    create: {\n      argNames: ["groupId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createGroup: {\n      argNames: ["displayName", "alias", "isPublic", "ownerPrincipalNames", "description", "creationOptions"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createGroupEx: {\n      argNames: ["displayName", "alias", "isPublic", "optionalParams"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createGroupForSite: {\n      argNames: ["displayName", "alias", "isPublic", "optionalParams"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    "delete": {\n      argNames: ["siteUrl"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    ensureTeamForGroup: {\n      argNames: ["siteUrl", "teamTemplate"]\n    },\n    ensureTeamForGroupEx: {\n      argNames: ["siteUrl", "teamTemplate"]\n    },\n    getAllOrgLabels: {\n      argNames: ["pageNumber"]\n    },\n    getCurrentUserJoinedTeams: {\n      argNames: ["getLogoData", "forceCacheUpdate"]\n    },\n    getCurrentUserSharedChannelMemberGroups: {},\n    getCurrentUserTeamConnectedMemberGroups: {},\n    getGroupCreationContext: {},\n    getGroupSiteConversionData: {},\n    getParentGroupForChannel: {\n      argNames: ["siteUrl"]\n    },\n    getSharedChannelSharePointUrl: {\n      argNames: ["tenantId", "groupId"]\n    },\n    getSiteStatus: {\n      argNames: ["groupId"]\n    },\n    getTeamChannelFilesUrl: {\n      argNames: ["teamId", "channelId"]\n    },\n    getTeamChannels: {\n      argNames: ["teamId", "useStagingEndpoint"]\n    },\n    getTeamChannelsDirect: {\n      argNames: ["teamId"]\n    },\n    getTeamChannelsEx: {\n      argNames: ["teamId"]\n    },\n    getTeamChannelsWithSiteUrl: {\n      argNames: ["siteUrl"]\n    },\n    getUserSharedChannelMemberGroups: {\n      argNames: ["userName"]\n    },\n    getUserTeamConnectedMemberGroups: {\n      argNames: ["userName"]\n    },\n    getValidSiteUrlFromAlias: {\n      argNames: ["alias", "managedPath", "isTeamSite"]\n    },\n    hideTeamifyPrompt: {\n      argNames: ["siteUrl"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    isTeamifyPromptHidden: {\n      argNames: ["siteUrl"]\n    },\n    notebook: {\n      argNames: ["groupId"]\n    },\n    pinToTeam: {\n      argNames: ["requestParams"]\n    },\n    recentAndJoinedTeams: {\n      argNames: ["includeRecent", "includeTeams", "includePinned", "existingJoinedTeamsData"]\n    }\n  },\n  "Microsoft.SharePoint.Portal.SPHubSitesUtility": {\n    getHubSites: {\n      requestType: utils_1.RequestType.Post\n    }\n  },\n  "Microsoft.SharePoint.Portal.SPSiteManager": {\n    archiveTeamChannelSite: {\n      argNames: ["siteId", "archive"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    areSegmentsCompatible: {\n      argNames: ["segments"]\n    },\n    canCreateHubJoinedSite: {\n      argNames: ["hubSiteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    create: {\n      argNames: ["request"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    "delete": {\n      argNames: ["siteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getCompatibleSegments: {\n      argNames: ["segments"]\n    },\n    getIBSegmentLabels: {\n      argNames: ["IBSegments"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    getTeamChannelSiteOwner: {\n      argNames: ["siteId"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    landingSiteUrlFromName: {\n      argNames: ["siteName"]\n    },\n    restoreTeamsChannelSite: {\n      argNames: ["siteId", "relatedGroupId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setIBSegments: {\n      argNames: ["IBSegments"]\n    },\n    setTeamChannelSiteOwner: {\n      argNames: ["siteId", "logonName", "secondaryLogonName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    siteUrl: {\n      argNames: ["siteId"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    status: {\n      argNames: ["url"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    updateWorkflow2013Endpoint: {\n      argNames: ["workflowServiceAddress", "workflowHostname"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    vivaBackendSiteUrlFromName: {\n      argNames: ["siteName"]\n    }\n  },\n  "Microsoft.SharePoint.Portal.SharePointHomeServiceContextBuilder": {\n    context: {}\n  },\n  "Microsoft.SharePoint.Portal.SiteIconManager": {\n    getSiteLogo: {\n      argNames: ["siteUrl", "target", "type", "hash"]\n    },\n    setSiteLogo: {\n      argNames: ["relativeLogoUrl", "type", "aspect", "focalx", "focaly", "isFocalPatch"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "Microsoft.SharePoint.Portal.SiteLinkingManager": {\n    getSiteLinks: {},\n    linkGroup: {\n      argNames: ["groupId"]\n    },\n    unlinkGroup: {\n      argNames: ["groupId"]\n    }\n  },\n  "Microsoft.SharePoint.Portal.VivaSiteManager": {\n    ensureVivaSite: {}\n  },\n  "Microsoft.SharePoint.QuotaManagement.Consumer.NonQuotaBackfillApi": {\n    backfillNonQuota: {\n      argNames: ["backfillUserfacts"]\n    }\n  },\n  "Microsoft.SharePoint.QuotaManagement.Consumer.NonQuotaMigrationApi": {\n    migrateNonQuota: {}\n  },\n  "Microsoft.SharePoint.QuotaManagement.Consumer.QuotaMigrationApi": {\n    migrateQuota: {\n      argNames: ["IsMaxQuotaCall"]\n    }\n  },\n  "Microsoft.SharePoint.SectionDesignIdeas.SectionDesignIdeasApi": {\n    getSectionDesignIdeas: {\n      argNames: ["title", "subTitle"]\n    },\n    ping: {}\n  },\n  "Microsoft.SharePoint.Sharing.Internal.SharingRestrictions": {\n    update: {}\n  },\n  "Microsoft.SharePoint.TenantCdn.TenantCdnApi": {\n    getCdnUrls: {\n      argNames: ["items"]\n    },\n    isFolderUrlsInTenantCdn: {\n      argNames: ["urls", "cdnType"]\n    }\n  },\n  "Microsoft.SharePoint.Webhooks.Subscription": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {\n      argNames: ["parameters"]\n    }\n  },\n  "Microsoft.SharePoint.Webhooks.Subscription.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["subscriptionId"]\n    }\n  },\n  "OBA.Server.ServerWrapper.Diagnostics": {\n    status: {}\n  },\n  "OBA.Server.ServerWrapper.Reporting": {\n    publishReport: {\n      argNames: ["odataPostBodyStm"]\n    }\n  },\n  "OBA.Server.ServerWrapper.Taskflow": {\n    processTask: {\n      argNames: ["requestBodyStream"]\n    }\n  },\n  "PS.BaseCalendarException": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.Calendar": {\n    copyTo: {\n      argNames: ["name"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.Calendar.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.CalendarException": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.CalendarException.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.CustomField": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.CustomField.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByAppAlternateId: {\n      argNames: ["objectId"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.DraftAssignment.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.DraftProjectResource.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    addEnterpriseResourceById: {\n      argNames: ["resourceId"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.DraftTask.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.DraftTaskLink.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.EngagementComment.Collection": {\n    add: {\n      argNames: ["comment"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.EnterpriseProjectType": {\n    addDepartment: {\n      argNames: ["departmentValueGuid"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeDepartment: {\n      argNames: ["departmentValueGuid"]\n    },\n    updateCreatePDP: {\n      argNames: ["pdp"]\n    }\n  },\n  "PS.EnterpriseProjectType.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.EnterpriseResource": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    forceCheckIn: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    updateClaimsAccount: {\n      argNames: ["newClaimsAccount"]\n    }\n  },\n  "PS.EnterpriseResource.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.EnterpriseResourceCostRate": {\n    rESTfulUpdate: {},\n    restfulDelete: {}\n  },\n  "PS.EnterpriseResourceCostRate.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByDateUrl: {\n      argNames: ["effectiveDate"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.EntityLink": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.EntityLink.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.Event.Collection": {\n    getById: {\n      argNames: ["objectId"]\n    },\n    getByInt: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.EventHandler": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.EventHandler.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.LookupCost": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.LookupDate": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.LookupDuration": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.LookupEntry": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.LookupEntry.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByAppAlternateId: {\n      argNames: ["objectId"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.LookupNumber": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.LookupTable": {\n    addMask: {\n      argNames: ["mask"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    updateMask: {\n      argNames: ["mask", "level"]\n    }\n  },\n  "PS.LookupTable.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByAppAlternateId: {\n      argNames: ["objectId"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.LookupText": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.Phase": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.Phase.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.PlanAssignment": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PlanAssignment.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PlanAssignmentInterval.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    getByStart: {\n      argNames: ["start"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.Project": {\n    getResourcePlanByUrl: {\n      argNames: ["start", "end", "scale"]\n    },\n    leaveProjectStage: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    readyToLeaveProjectStage: {},\n    updateIdeaListItemStatus: {\n      argNames: ["status"]\n    }\n  },\n  "PS.ProjectDetailPage.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.ProjectEngagement": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    getTimephasedByUrl: {\n      argNames: ["start", "end", "scale", "contourType"]\n    }\n  },\n  "PS.ProjectEngagement.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.ProjectEngagementTimephasedPeriod.Collection": {\n    getByStartUrl: {\n      argNames: ["start"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.ProjectServer": {\n    getDeletedPublishedAssignments: {\n      argNames: ["deletedDate"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    stopDelegation: {}\n  },\n  "PS.ProjectWorkflowInstance": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restartWorkflow: {},\n    restartWorkflowSkipToStage: {\n      argNames: ["stageId"]\n    }\n  },\n  "PS.ProjectWorkflowInstance.Collection": {\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PublishedAssignment.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PublishedProject": {\n    checkOut: {},\n    createProjectSite: {\n      argNames: ["siteName"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    getResourcePlanByUrl: {\n      argNames: ["start", "end", "scale"]\n    },\n    leaveProjectStage: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    readyToLeaveProjectStage: {},\n    submitToWorkflow: {},\n    unlinkProjectSite: {},\n    updateIdeaListItemStatus: {\n      argNames: ["status"]\n    },\n    updateVisibilityCustomFields: {}\n  },\n  "PS.PublishedProject.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {},\n    validate: {}\n  },\n  "PS.PublishedProjectResource.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PublishedTask": {\n    addTaskPlanLink: {\n      argNames: ["parameters"]\n    },\n    deleteTaskPlanLink: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PublishedTask.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.PublishedTaskLink.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.QueueJob": {\n    cancel: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.QueueJob.Collection": {\n    getAll: {},\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.ResourceCalendarException": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.ResourceEngagement": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    getTimephasedByUrl: {\n      argNames: ["start", "end", "scale", "contourType"]\n    }\n  },\n  "PS.ResourceEngagement.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.ResourceEngagementTimephasedPeriod.Collection": {\n    getByStartUrl: {\n      argNames: ["start"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.ResourcePlan": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    forceCheckIn: {},\n    publish: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.ServiceStatus": {\n    stopDelegation: {}\n  },\n  "PS.Stage": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.Stage.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {}\n  },\n  "PS.StageCustomField": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.StageCustomField.Collection": {\n    add: {\n      argNames: ["creationInfo"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.StageDetailPage": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.StageDetailPage.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.StatusAssignment": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    submitStatusUpdates: {\n      argNames: ["comment"]\n    }\n  },\n  "PS.StatusAssignment.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    getTimePhaseByUrl: {\n      argNames: ["start", "end"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    submitAllStatusUpdates: {\n      argNames: ["comment"]\n    },\n    update: {}\n  },\n  "PS.StatusAssignmentHistoryLine.Collection": {\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.TaskPlanLink": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.TimeSheet": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recall: {},\n    submit: {\n      argNames: ["comment"]\n    },\n    update: {}\n  },\n  "PS.TimeSheetLine": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    submit: {\n      argNames: ["comment"]\n    }\n  },\n  "PS.TimeSheetLine.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.TimeSheetPeriod": {\n    createTimeSheet: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.TimeSheetPeriod.Collection": {\n    getByGuid: {\n      argNames: ["uid"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.TimeSheetWork": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "PS.TimeSheetWork.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getById: {\n      argNames: ["objectId"]\n    },\n    getByStartDate: {\n      argNames: ["start"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "PS.WorkflowActivities": {\n    checkInWithJobId: {\n      argNames: ["projId", "jobId", "force"]\n    },\n    createProjectFromListItem: {\n      argNames: ["webId", "listId", "itemId", "eptId"]\n    },\n    enterProjectStage: {\n      argNames: ["projectId", "stageId"]\n    },\n    leaveProjectStage: {\n      argNames: ["projectId"]\n    },\n    publishSummaryWithJobId: {\n      argNames: ["projId", "jobId"]\n    },\n    publishWithJobId: {\n      argNames: ["projectId", "jobId"]\n    },\n    readBooleanProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readCurrencyProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readDateTimeProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readGuidProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readIntegerProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readNumberProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readProjectProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readTextProperty: {\n      argNames: ["projectId", "propertyId"]\n    },\n    readyToLeaveProjectStage: {\n      argNames: ["projectId"]\n    },\n    updateBooleanProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateCurrencyProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateDateTimeProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateGuidProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateIdeaListItemStatus: {\n      argNames: ["projectId", "status"]\n    },\n    updateIntegerProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateNumberProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    },\n    updateProjectStageStatus: {\n      argNames: ["projectId", "stageId", "statusInformation", "stageStatusValue", "append"]\n    },\n    updateTextProperty: {\n      argNames: ["projectId", "propertyId", "value"]\n    }\n  },\n  "PS.WorkflowDesignerField.Collection": {\n    getById: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Alert": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    updateAlert: {}\n  },\n  "SP.Alert.Collection": {\n    add: {\n      argNames: ["alertCreationInformation"],\n      name: "",\n      metadataType: "SP.Alert",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    contains: {\n      argNames: ["idAlert"]\n    },\n    deleteAlert: {\n      argNames: ["idAlert"]\n    },\n    deleteAlertAtIndex: {\n      argNames: ["index"]\n    },\n    getById: {\n      argNames: ["idAlert"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.AppConfiguration": {\n    update: {}\n  },\n  "SP.AppInstance": {\n    cancelAllJobs: {},\n    getAppDatabaseConnectionString: {},\n    getErrorDetails: {},\n    getPreviousAppVersion: {},\n    install: {},\n    recycle: {},\n    restore: {},\n    retryAllJobs: {},\n    uninstall: {},\n    upgrade: {\n      argNames: ["appPackageStream"]\n    }\n  },\n  "SP.Attachment": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    recycleObject: {\n      requestType: utils_1.RequestType.Post\n    }\n  },\n  "SP.Attachment.Collection": {\n    add: {\n      argNames: ["FileName", "Content"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    addUsingPath: {\n      argNames: ["DecodedUrl", "contentStream"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    getByFileName: {\n      argNames: ["fileName"]\n    },\n    getByFileNameAsPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Audit": {\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.BrandCenter": {\n    addSiteTheme: {\n      argNames: ["themeData"]\n    },\n    addTenantTheme: {\n      argNames: ["themeData"]\n    },\n    configuration: {},\n    currentBrandingConfiguration: {},\n    deleteSiteTheme: {\n      argNames: ["themeId"]\n    },\n    ensureBrandColorsListFeature: {},\n    ensureBrandFontsLibraryFeature: {},\n    getFontStream: {\n      argNames: ["fontFileUrl"]\n    },\n    getSiteThemes: {},\n    getTenantThemeById: {\n      argNames: ["id"]\n    },\n    getTenantThemes: {},\n    getTenantThemesXgeoUtil: {},\n    orgAssets: {},\n    orgAssetsWithCacheFlag: {\n      argNames: ["shouldUseCache"]\n    },\n    updateSiteTheme: {\n      argNames: ["themeData"]\n    },\n    updateTenantTheme: {\n      argNames: ["themeData"]\n    },\n    validateSiteThemeName: {\n      argNames: ["name"]\n    },\n    validateTenantThemeName: {\n      argNames: ["name"]\n    }\n  },\n  "SP.BusinessData.AppBdcCatalog": {\n    getConnectionId: {\n      argNames: ["lobSystemName", "lobSystemInstanceName"]\n    },\n    getEntity: {\n      argNames: ["namespace", "name"]\n    },\n    getLobSystemInstanceProperty: {\n      argNames: ["lobSystemName", "lobSystemInstanceName", "propertyName"]\n    },\n    getLobSystemProperty: {\n      argNames: ["lobSystemName", "propertyName"]\n    },\n    getPermissibleConnections: {},\n    setConnectionId: {\n      argNames: ["lobSystemName", "lobSystemInstanceName", "connectionId"]\n    },\n    setLobSystemInstanceProperty: {\n      argNames: ["lobSystemName", "lobSystemInstanceName", "propertyName", "propertyValue"]\n    },\n    setLobSystemProperty: {\n      argNames: ["lobSystemName", "propertyName", "propertyValue"]\n    }\n  },\n  "SP.BusinessData.Entity": {\n    getAssociationView: {\n      argNames: ["associationName"]\n    },\n    getCreatorView: {\n      argNames: ["methodInstanceName"]\n    },\n    getDefaultSpecificFinderView: {},\n    getFilters: {\n      argNames: ["methodInstanceName"]\n    },\n    getFinderView: {\n      argNames: ["methodInstanceName"]\n    },\n    getIdentifierCount: {},\n    getIdentifiers: {},\n    getLobSystem: {},\n    getSpecificFinderView: {\n      argNames: ["specificFinderName"]\n    },\n    getUpdaterView: {\n      argNames: ["updaterName"]\n    }\n  },\n  "SP.BusinessData.EntityIdentifier": {\n    containsLocalizedDisplayName: {},\n    getDefaultDisplayName: {},\n    getLocalizedDisplayName: {}\n  },\n  "SP.BusinessData.EntityView": {\n    getDefaultValues: {},\n    getType: {\n      argNames: ["fieldDotNotation"]\n    },\n    getTypeDescriptor: {\n      argNames: ["fieldDotNotation"]\n    },\n    getXmlSchema: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.BusinessData.Infrastructure.ExternalSubscriptionStore": {\n    indexStore: {}\n  },\n  "SP.BusinessData.LobSystem": {\n    getLobSystemInstances: {}\n  },\n  "SP.BusinessData.Runtime.EntityFieldValueDictionary": {\n    createCollectionInstance: {\n      argNames: ["fieldDotNotation", "size"]\n    },\n    createInstance: {\n      argNames: ["fieldInstanceDotNotation", "fieldDotNotation"]\n    },\n    fromXml: {\n      argNames: ["xml"]\n    },\n    getCollectionSize: {\n      argNames: ["fieldDotNotation"]\n    },\n    toXml: {}\n  },\n  "SP.BusinessData.Runtime.EntityInstance": {\n    createCollectionInstance: {\n      argNames: ["fieldDotNotation", "size"]\n    },\n    createInstance: {\n      argNames: ["fieldInstanceDotNotation", "fieldDotNotation"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    fromXml: {\n      argNames: ["xml"]\n    },\n    getIdentity: {},\n    toXml: {},\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.BusinessData.TypeDescriptor": {\n    containsLocalizedDisplayName: {},\n    getChildTypeDescriptors: {},\n    getDefaultDisplayName: {},\n    getLocalizedDisplayName: {},\n    getParentTypeDescriptor: {},\n    isLeaf: {},\n    isRoot: {}\n  },\n  "SP.CheckedOutFile": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    takeOverCheckOut: {}\n  },\n  "SP.CheckedOutFile.Collection": {\n    getByPath: {\n      argNames: ["DecodedUrl"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.ClientWebPart": {\n    render: {\n      argNames: ["properties"]\n    }\n  },\n  "SP.ClientWebPart.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.CompliancePolicy.SPPolicyStoreProxy": {\n    bulkUpdateDynamicScopeBindings: {\n      argNames: ["scopesToAdd", "scopesToRemove", "siteId"]\n    },\n    extendReviewItemsRetention: {\n      argNames: ["itemIds", "extensionDate"]\n    },\n    getDynamicScopeBindingBySiteId: {\n      argNames: ["siteId"]\n    },\n    getSiteAdaptivePolicies: {\n      argNames: ["siteId"]\n    },\n    markReviewItemsForDeletion: {\n      argNames: ["itemIds"]\n    },\n    openBinaryStreamForOriginalItem: {\n      argNames: ["itemId"]\n    },\n    removeContainerRetentionPolicy: {\n      argNames: ["siteId"]\n    },\n    removeContainerSettings: {\n      argNames: ["externalId"]\n    },\n    retagReviewItems: {\n      argNames: ["itemIds", "newTag", "newTagIsRecord", "newTagBlockDelete", "newTagIsEventBased"]\n    },\n    retagReviewItemsWithMetas: {\n      argNames: ["itemIds", "newTagName", "newTagMetas"]\n    },\n    retagUnifiedReviewItemsWithMetas: {\n      argNames: ["itemIds", "originalTagName", "newTagName", "newTagMetas"]\n    },\n    setContainerRetentionPolicy: {\n      argNames: ["siteId", "defaultContainerLabel"]\n    },\n    updateContainerSetting: {\n      argNames: ["siteId", "externalId", "settingType", "setting"]\n    },\n    updateSiteAdaptivePolicies: {\n      argNames: ["policiesToAdd", "policiesToRemove", "siteId"]\n    }\n  },\n  "SP.ContentType": {\n    properties: ["FieldLinks|SP.FieldLink.Collection|(\'[Name]\')|SP.FieldLink", "Fields|SP.Field.Collection|/getByInternalNameOrTitle(\'[Name]\')|SP.Field", "WorkflowAssociations|SP.Workflow.WorkflowAssociation.Collection"],\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    reorderFields: {\n      argNames: ["fieldNames"]\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.ContentType",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.ContentType.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.ContentType",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    addAvailableContentType: {\n      argNames: ["contentTypeId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    create: {\n      argNames: ["parameters"],\n      metadataType: "SP.ContentType",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["contentTypeId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.ContentType"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Directory.DirectorySession": {\n    getGraphUser: {\n      argNames: ["principalName"]\n    },\n    getSharePointDataForUser: {\n      argNames: ["userId"]\n    },\n    group: {\n      argNames: ["groupId", "alias"]\n    },\n    joinGroup: {\n      argNames: ["groupId"]\n    },\n    me: {},\n    user: {\n      argNames: ["id", "principalName"]\n    },\n    validateGroupName: {\n      argNames: ["displayName", "alias"]\n    }\n  },\n  "SP.Directory.Group": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Directory.Group.Collection": {\n    add: {\n      argNames: ["objectId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["objectId"]\n    }\n  },\n  "SP.Directory.Provider.DirectoryNotification": {\n    notifyChanges: {\n      argNames: ["directoryObjectChanges"]\n    }\n  },\n  "SP.Directory.Provider.SharePointDirectoryProvider": {\n    createDirectoryObject: {\n      argNames: ["data"]\n    },\n    deleteDirectoryObject: {\n      argNames: ["data"]\n    },\n    getOrCreateUnifiedGroupTenantInstanceId: {\n      argNames: ["groupId", "tenantInstanceId"]\n    },\n    getOrCreateUnifiedGroupWithPreferredDataLocation: {\n      argNames: ["groupId", "preferredDataLocation"]\n    },\n    notifyDataChanges: {\n      argNames: ["data"]\n    },\n    readDirectoryObject: {\n      argNames: ["data"]\n    },\n    readDirectoryObjectBatch: {\n      argNames: ["ids", "objectType"]\n    },\n    updateCache: {\n      argNames: ["data"]\n    },\n    updateDirectoryObject: {\n      argNames: ["data"]\n    }\n  },\n  "SP.Directory.User": {\n    getUserLinks: {\n      argNames: ["linkName", "groupType"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Directory.User.Collection": {\n    add: {\n      argNames: ["objectId", "principalName"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["objectId"]\n    }\n  },\n  "SP.DocumentManagement.DocumentId": {\n    resetDocIdByServerRelativePath: {\n      argNames: ["DecodedUrl"]\n    },\n    resetDocIdsInLibrary: {\n      argNames: ["DecodedUrl", "contentTypeId"]\n    },\n    setDocIdSitePrefix: {\n      argNames: ["prefix", "scheduleAssignment", "overwriteExistingIds"]\n    }\n  },\n  "SP.EmployeeEngagement": {\n    configuration: {},\n    dashboardContent: {\n      argNames: ["overrideLanguageCode"]\n    },\n    dashboardOOBContent: {\n      argNames: ["oobContentChoice"]\n    },\n    fullDashboardContent: {\n      argNames: ["canvasAsJson", "includePersonalizationData"]\n    },\n    getDashboardPersonalization: {},\n    getTargetedSitesAsEditor: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setDashboardPersonalization: {\n      argNames: ["isEnabled"]\n    },\n    vivaConnections: {\n      argNames: ["adminConfiguredUrl"]\n    },\n    vivaHome: {},\n    vivaHomeConfiguration: {\n      argNames: ["shouldByPassCache"]\n    }\n  },\n  "SP.EmployeeExperienceController": {\n    dashboard: {\n      argNames: ["formFactor", "dashboardId", "mySiteUrl"]\n    },\n    getAnnouncementsState: {\n      argNames: ["mySiteUrl"]\n    },\n    saveDashboard: {\n      argNames: ["employeeExperienceDashboardData", "mySiteUrl"]\n    },\n    setAnnouncementState: {\n      argNames: ["announcementStates", "mySiteUrl"]\n    }\n  },\n  "SP.EventReceiverDefinition": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.EventReceiverDefinition",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.EventReceiverDefinition.Collection": {\n    add: {\n      argNames: ["eventReceiverCreationInformation"],\n      metadataType: "SP.EventReceiverDefinition",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["eventReceiverId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.EventReceiverDefinition"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Feature.Collection": {\n    add: {\n      argNames: ["featureId", "force", "featdefScope"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getById: {\n      argNames: ["featureId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Feature"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["featureId", "force"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "SP.Field": {\n    add: {\n      argNames: ["parameters"],\n      name: "",\n      metadataType: "SP.Field",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.Field",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Field.Collection": {\n    addDependentLookupField: {\n      argNames: ["displayName", "primaryLookupFieldId", "showField"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addField: {\n      argNames: ["parameters"],\n      metadataType: "SP.FieldCreationInformation",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    createFieldAsXml: {\n      argNames: ["schemaXml"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      data: {\n        parameters: {\n          __metadata: {\n            type: "SP.XmlSchemaFieldCreationInformation"\n          },\n          Options: 8,\n          SchemaXml: "[[schemaXml]]"\n        }\n      }\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly,\n      returnType: "SP.Field"\n    },\n    getByInternalNameOrTitle: {\n      argNames: ["strName"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly,\n      returnType: "SP.Field"\n    },\n    getByTitle: {\n      argNames: ["title"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly,\n      returnType: "SP.Field"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.FieldCalculated": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldCalculated",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldChoice": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldChoice",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldComputed": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldComputed",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldCurrency": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldCurrency",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldDateTime": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldDateTime",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldGeolocation": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldGeolocation",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldGuid": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldGuid",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldLink": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldLink",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldLink.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.FieldLink",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.FieldLink"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    reorder: {\n      argNames: ["internalNames"]\n    }\n  },\n  "SP.FieldLocation": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldLocation",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldLookup": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldLookup",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldMultiChoice": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldMultiChoice",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldMultiLineText": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldMultiLineText",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldNumber": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldNumber",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldRatingScale": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldRatingScale",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldText": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldText",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldThumbnail": {\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldThumbnail",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldUrl": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldUrl",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.FieldUser": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.FieldUser",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.File": {\n    properties: ["Author|SP.User", "CheckedOutByUser|SP.User", "EffectiveInformationRightsManagementSettings", "InformationRightsManagementSettings", "ListItemAllFields|odata", "LockedByUser|SP.User", "ModifiedBy|SP.User", "Properties", "VersionEvents", "Versions|SP.FileVersion.Collection"],\n    addClientActivities: {\n      argNames: ["activitiesStream"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addFileScannerWorkItem: {\n      argNames: ["dispatchType", "jobType", "jobSubType"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    approve: {\n      argNames: ["comment"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    cancelUpload: {\n      argNames: ["uploadId"],\n      name: "cancelupload(guid\'[[uploadId]]\')",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    changeContentStorageSchema: {\n      argNames: ["desiredSchema"]\n    },\n    checkAccessAndPostViewAuditEvent: {},\n    checkIn: {\n      argNames: ["comment", "checkInType"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    checkOut: {\n      requestType: utils_1.RequestType.Post\n    },\n    content: {\n      name: "$value",\n      requestType: utils_1.RequestType.GetBuffer\n    },\n    continueUpload: {\n      argNames: ["uploadId", "fileOffset", "stream"],\n      name: "continueUpload(uploadId=guid\'[[uploadId]]\', fileOffset=[[fileOffset]])",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    },\n    copyTo: {\n      argNames: ["strNewUrl", "bOverWrite"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    copyToUsingPath: {\n      argNames: ["DecodedUrl", "bOverWrite"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    deny: {\n      argNames: ["comment"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    executeCobaltRequest: {\n      argNames: ["inputStream"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    finishUpload: {\n      argNames: ["uploadId", "fileOffset", "stream"],\n      name: "finishUpload(uploadId=guid\'[[uploadId]]\', fileOffset=[[fileOffset]])",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    },\n    finishUploadWithChecksum: {\n      argNames: ["uploadId", "fileOffset", "checksum", "stream", "sandboxId"],\n      name: "finishUploadWithChecksum(uploadId=guid\'[[uploadId]]\', fileOffset=[[fileOffset]], checksum=[[checksum]])",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    },\n    getFileUserValue: {\n      argNames: ["key"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getImagePreviewUri: {\n      argNames: ["width", "height", "clientType"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getImagePreviewUrl: {\n      argNames: ["width", "height", "clientType"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getLimitedWebPartManager: {\n      argNames: ["scope"],\n      name: "getLimitedWebPartManager(scope=[[scope]])",\n      requestType: utils_1.RequestType.GetReplace,\n      returnType: "SP.WebParts.LimitedWebPartManager"\n    },\n    getMediaServiceMetadata: {},\n    getPreAuthorizedAccessUrl: {\n      argNames: ["expirationHours"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getPreAuthorizedAccessUrl2: {\n      argNames: ["expirationHours", "expirationMinuites"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getUploadStatus: {\n      argNames: ["uploadId"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getWOPIFrameUrl: {\n      argNames: ["action"],\n      requestType: utils_1.RequestType.PostWithArgsInQS\n    },\n    moveTo: {\n      argNames: ["newUrl", "flags"],\n      name: "moveTo(newUrl=\'[[newUrl]]\', flags=[[flags]])",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    moveToUsingPath: {\n      argNames: ["DecodedUrl", "moveOperations"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    openBinaryStream: {\n      requestType: utils_1.RequestType.GetBuffer\n    },\n    openBinaryStreamWithOptions: {\n      argNames: ["openOptions"],\n      requestType: utils_1.RequestType.GetBuffer\n    },\n    publish: {\n      argNames: ["comment"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycle: {\n      requestType: utils_1.RequestType.Post\n    },\n    recycleWithETag: {\n      argNames: ["etagMatch"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    recycleWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    saveBinaryStream: {\n      argNames: ["file"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    setExpirationDate: {\n      argNames: ["expirationDate"]\n    },\n    setFileUserValue: {\n      argNames: ["key", "value"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setMediaServiceMetadata: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    startUpload: {\n      argNames: ["uploadId", "stream"],\n      name: "startupload(uploadId=guid\'[[uploadId]]\')",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    },\n    startUploadFile: {\n      argNames: ["uploadId", "stream"],\n      name: "startUploadFile(uploadId=guid\'[[uploadId]]\')",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    },\n    unPublish: {\n      argNames: ["comment"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    undoCheckOut: {\n      requestType: utils_1.RequestType.Post\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.File",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    updateVirusInfo: {\n      argNames: ["virusStatus", "virusMessage", "etagToCheck"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    upload: {\n      argNames: ["uploadId", "stream"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    uploadWithChecksum: {\n      argNames: ["uploadId", "checksum", "stream"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "SP.File.Collection": {\n    add: {\n      argNames: ["Url", "Overwrite", "Content"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    addStub: {\n      argNames: ["urlOfFile"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addStubUsingPath: {\n      argNames: ["DecodedUrl", "AutoCheckoutOnInvalidData", "EnsureUniqueFileName", "Overwrite", "XorHash"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addTemplateFile: {\n      argNames: ["urlOfFile", "templateFileType"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addUsingPath: {\n      argNames: ["DecodedUrl", "AutoCheckoutOnInvalidData", "EnsureUniqueFileName", "Overwrite", "XorHash", "contentStream"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    getByPathOrAddStub: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getByUrl: {\n      argNames: ["url"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getByUrlOrAddStub: {\n      argNames: ["urlOfFile"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.FileVersion": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    openBinaryStream: {\n      requestType: utils_1.RequestType.GetBuffer\n    },\n    openBinaryStreamWithOptions: {\n      argNames: ["openOptions"],\n      requestType: utils_1.RequestType.GetBuffer\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setExpirationDate: {\n      argNames: ["expirationDate"]\n    }\n  },\n  "SP.FileVersion.Collection": {\n    deleteAll: {\n      requestType: utils_1.RequestType.Post\n    },\n    deleteByID: {\n      argNames: ["vid"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    deleteByLabel: {\n      argNames: ["versionlabel"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getById: {\n      argNames: ["versionid"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Version"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycleByID: {\n      argNames: ["vid"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    recycleByLabel: {\n      argNames: ["versionlabel"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    restoreByLabel: {\n      argNames: ["versionlabel"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.Folder": {\n    properties: ["Files|SP.File.Collection|/getByUrl(\'[Name]\')|SP.File", "Folders|SP.Folder.Collection|/getByUrl(\'[Name]\')|SP.Folder", "ListItemAllFields|odata", "ParentFolder|SP.Folder", "Properties", "StorageMetrics"],\n    addSubFolder: {\n      argNames: ["leafName", "updateParams"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    addSubFolderUsingPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getListItemChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    moveTo: {\n      argNames: ["newUrl"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    moveToUsingPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycle: {\n      requestType: utils_1.RequestType.Post\n    },\n    recycleWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    startDelete: {},\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.Folder",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "SP.Folder.Collection": {\n    properties: ["Files|SP.File.Collection|/getByUrl(\'[Name]\')|SP.File", "Folders|SP.Folder.Collection|/getByUrl(\'[Name]\')|SP.Folder", "ParentFolder", "StorageMetrics"],\n    add: {\n      argNames: ["url"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addUsingPath: {\n      argNames: ["DecodedUrl", "EnsureUniqueFileName", "Overwrite"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addWithOverwrite: {\n      argNames: ["url", "overwrite"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getByPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getByUrl: {\n      argNames: ["url"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.FolderColoring": {\n    createFolder: {\n      argNames: ["DecodedUrl", "EnsureUniqueFileName", "Overwrite", "coloringInformation"]\n    },\n    renameFolder: {\n      argNames: ["DecodedUrl", "newName", "coloringInformation"]\n    },\n    stampColor: {\n      argNames: ["DecodedUrl", "coloringInformation"]\n    }\n  },\n  "SP.FontPackage": {\n    apply: {},\n    "delete": {},\n    fontStream: {\n      argNames: ["fontFamily"]\n    },\n    update: {}\n  },\n  "SP.FontPackage.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    getByTitle: {\n      argNames: ["title"]\n    },\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "SP.Form.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    getByPageType: {\n      argNames: ["formType"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Group": {\n    properties: ["Users|SP.User.Collection|/getById([Name])|SP.User"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setUserAsOwner: {\n      argNames: ["ownerId"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      metadataType: "SP.Group",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Group.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.Group",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Group"\n    },\n    getByName: {\n      argNames: ["name"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Group"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    removeByLoginName: {\n      argNames: ["loginName"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.HubSite": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "SP.HubSite.Collection": {\n    getById: {\n      argNames: ["hubSiteId"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    getConnectedHubs: {\n      argNames: ["hubSiteId", "option"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    getSiteUrlByHubSiteId: {\n      argNames: ["hubSiteId"],\n      requestType: utils_1.RequestType.GetWithArgsInQS\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.InformationRightsManagementFileSettings": {\n    reset: {},\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.InformationRightsManagementSettings": {\n    reset: {},\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.KnowledgeHub": {\n    addOrUpdateSiteReference: {\n      argNames: ["knowledgeHubSiteUrl"]\n    },\n    siteReference: {}\n  },\n  "SP.LanguageCollection": {\n    getById: {\n      argNames: ["id"]\n    }\n  },\n  "SP.List": {\n    properties: ["BrowserFileHandling", "ContentTypes|SP.ContentType.Collection|(\'[Name]\')|SP.ContentType", "CreatablesInfo", "DefaultDisplayFormUrl", "DefaultEditFormUrl", "DefaultNewFormUrl", "DefaultView|SP.View", "DescriptionResource", "EffectiveBasePermissions", "EventReceivers|SP.EventReceiverDefinition.Collection|(\'[Name]\')|SP.EventReceiverDefinition", "Fields|SP.Field.Collection|/getByInternalNameOrTitle(\'[Name]\')|SP.Field", "FirstUniqueAncestorSecurableObject", "Forms|SP.Form.Collection|(\'[Name]\')|SP.Form", "InformationRightsManagementSettings", "Items|SP.ListItem.Collection|([Name])|SP.ListItem", "ParentWeb", "RoleAssignments|SP.RoleAssignment.Collection|([Name])|SP.RoleAssignment", "RootFolder|SP.Folder|/getByUrl(\'[Name]\')|SP.File", "Subscriptions", "TitleResource", "UserCustomActions|SP.UserCustomAction.Collection|(\'[Name]\')|SP.UserCustomAction", "Views|SP.View.Collection|(\'[Name]\')|SP.View", "WorkflowAssociations"],\n    addItem: {\n      name: "Items",\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addItemUsingPath: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addValidateUpdateItem: {\n      argNames: ["listItemCreateInfo", "formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addValidateUpdateItemUsingPath: {\n      argNames: ["listItemCreateInfo", "formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    breakRoleInheritance: {\n      argNames: ["copyRoleAssignments", "clearSubscopes"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    bulkValidateUpdateListItems: {\n      argNames: ["itemIds", "formValues", "bNewDocumentUpdate", "checkInComment", "folderPath"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    cAAECreateTempFolder: {},\n    cAAERenameFileInTemporaryFolder: {\n      argNames: ["Path", "UpdatedName"]\n    },\n    cancelDeleteFileVersions: {},\n    clearBusinessAppMigrationInteractiveData: {},\n    copyTemplateAndGetMetadata: {\n      argNames: ["Id"]\n    },\n    createDocumentAndGetEditLink: {\n      argNames: ["fileName", "folderPath", "documentTemplateType", "templateUrl"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createDocumentFromCAAETemplate: {\n      argNames: ["ContentTypeName", "documentGenerationInfo"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createDocumentFromCAAETemplateV2: {\n      argNames: ["Id", "documentGenerationInfo"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createDocumentFromContentAssemblyTemplate: {\n      argNames: ["TemplateUrl", "documentGenerationInfo"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createDocumentWithDefaultName: {\n      argNames: ["folderPath", "extension"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createHVCSItemApprovalRequest: {\n      argNames: ["createItemRequestPayload"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createMappedView: {\n      argNames: ["appViewCreationInfo", "visualizationTarget"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createRuleEx: {\n      argNames: ["condition", "title", "triggerType", "action", "ruleTemplateId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createSmartTemplateContentTypeAndAddToList: {\n      argNames: ["Name", "Description"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createSmartTemplateContentTypeAndAddToListV2: {\n      argNames: ["Name", "Description", "TemplatePath", "Status"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteRule: {\n      argNames: ["ruleId", "triggerType"],\n      requestType: utils_1.RequestType.Delete\n    },\n    enableQueryableColumns: {},\n    enqueueAsyncActionTaskById: {\n      argNames: ["id", "parameters"]\n    },\n    ensureSignoffStatusField: {},\n    getAllRules: {},\n    getAsyncActionConfig: {\n      argNames: ["id"]\n    },\n    getAsyncActionTaskIds: {},\n    getBloomFilter: {\n      argNames: ["startItemId"]\n    },\n    getBloomFilterWithCustomFields: {\n      argNames: ["listItemStartingID", "internalFieldNames"]\n    },\n    getBusinessAppMigrationInteractiveData: {},\n    getBusinessAppOperationStatus: {},\n    getCAAETemplateMetadata: {\n      argNames: ["Name", "Published"]\n    },\n    getCAAETemplateMetadataV2: {\n      argNames: ["Id"]\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getCheckedOutFiles: {},\n    getContentAssemblyDocumentFieldValues: {\n      argNames: ["DocumentUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getContentAssemblyTemplateFields: {\n      argNames: ["TemplateUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getItemById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.ListItem"\n    },\n    getItemByStringId: {\n      argNames: ["sId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getItemByUniqueId: {\n      argNames: ["uniqueId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getItems: {\n      argNames: ["viewXML"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      data: {\n        query: {\n          __metadata: {\n            type: "SP.CamlQuery"\n          },\n          ViewXml: "[[viewXML]]"\n        }\n      }\n    },\n    getItemsByQuery: {\n      argNames: ["camlQuery"],\n      name: "getItems",\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      data: {\n        query: {\n          __metadata: {\n            type: "SP.CamlQuery"\n          },\n          ViewXml: "<View>[[camlQuery]]</View>"\n        }\n      }\n    },\n    getListItemChangesSinceToken: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeLogItemQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getLookupFieldChoices: {\n      argNames: ["targetFieldName", "pagingInfo"]\n    },\n    getMappedApp: {\n      argNames: ["appId", "visualizationAppTarget"]\n    },\n    getMappedApps: {\n      argNames: ["visualizationAppTarget"]\n    },\n    getProgressForDeleteFileVersions: {},\n    getProgressForFileVersionExpirationReport: {\n      argNames: ["reportFileUrl"]\n    },\n    getRelatedFields: {},\n    getSpecialFolderUrl: {\n      argNames: ["type", "bForceCreate", "existingFolderGuid"]\n    },\n    getUserEffectivePermissions: {\n      argNames: ["userName"],\n      name: "getUserEffectivePermissions(@user)?@user=\'[[userName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getView: {\n      argNames: ["viewGuid"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.View"\n    },\n    isSyntexAIFeaturesFlightEnabled: {},\n    lockSmartTemplate: {\n      argNames: ["Id"]\n    },\n    mapFieldsToColumnsForModernTemlate: {\n      argNames: ["payload"]\n    },\n    mapFieldsToColumnsForModernTemplate: {\n      argNames: ["templatePayload"]\n    },\n    parseDocumentTemplate: {\n      argNames: ["Name"]\n    },\n    publishMappedView: {\n      argNames: ["appId", "visualizationTarget"]\n    },\n    publishSnippet: {\n      argNames: ["publishSnippetPayload"]\n    },\n    publishTemplateV2: {\n      argNames: ["payload"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycle: {\n      requestType: utils_1.RequestType.Post\n    },\n    refreshLockSmartTemplate: {\n      argNames: ["Id", "LockId"]\n    },\n    renderExtendedListFormData: {\n      argNames: ["itemId", "formId", "mode", "options", "cutoffVersion"]\n    },\n    renderListContextMenuData: {\n      argNames: ["CascDelWarnMessage", "CustomAction", "Field", "ID", "InplaceFullListSearch", "InplaceSearchQuery", "IsCSR", "IsXslView", "ItemId", "ListViewPageUrl", "OverrideScope", "RootFolder", "View", "ViewCount"]\n    },\n    renderListData: {\n      argNames: ["viewXml"],\n      name: "renderListData(@v)?@v=\'<View>[[viewXml]]</View>\'",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    renderListDataAsStream: {\n      argNames: ["parameters", "CascDelWarnMessage", "CustomAction", "DrillDown", "Field", "FieldInternalName", "Filter", "FilterData", "FilterData1", "FilterData10", "FilterData2", "FilterData3", "FilterData4", "FilterData5", "FilterData6", "FilterData7", "FilterData8", "FilterData9", "FilterField", "FilterField1", "FilterField10", "FilterField2", "FilterField3", "FilterField4", "FilterField5", "FilterField6", "FilterField7", "FilterField8", "FilterField9", "FilterFields", "FilterFields1", "FilterFields10", "FilterFields2", "FilterFields3", "FilterFields4", "FilterFields5", "FilterFields6", "FilterFields7", "FilterFields8", "FilterFields9", "FilterLookupId", "FilterLookupId1", "FilterLookupId10", "FilterLookupId2", "FilterLookupId3", "FilterLookupId4", "FilterLookupId5", "FilterLookupId6", "FilterLookupId7", "FilterLookupId8", "FilterLookupId9", "FilterOp", "FilterOp1", "FilterOp10", "FilterOp2", "FilterOp3", "FilterOp4", "FilterOp5", "FilterOp6", "FilterOp7", "FilterOp8", "FilterOp9", "FilterValue", "FilterValue1", "FilterValue10", "FilterValue2", "FilterValue3", "FilterValue4", "FilterValue5", "FilterValue6", "FilterValue7", "FilterValue8", "FilterValue9", "FilterValues", "FilterValues1", "FilterValues10", "FilterValues2", "FilterValues3", "FilterValues4", "FilterValues5", "FilterValues6", "FilterValues7", "FilterValues8", "FilterValues9", "GroupString", "HasOverrideSelectCommand", "ID", "InplaceFullListSearch", "InplaceSearchQuery", "IsCSR", "IsGroupRender", "IsXslView", "ListViewPageUrl", "OverrideRowLimit", "OverrideScope", "OverrideSelectCommand", "PageFirstRow", "PageLastRow", "QueryParams", "RootFolder", "RootFolderUniqueId", "SortDir", "SortDir1", "SortDir10", "SortDir2", "SortDir3", "SortDir4", "SortDir5", "SortDir6", "SortDir7", "SortDir8", "SortDir9", "SortField", "SortField1", "SortField10", "SortField2", "SortField3", "SortField4", "SortField5", "SortField6", "SortField7", "SortField8", "SortField9", "SortFields", "SortFieldValues", "View", "ViewCount", "ViewId", "ViewPath", "WebPartId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    renderListFilterData: {\n      argNames: ["ExcludeFieldFilteringHtml", "FieldInternalName", "OverrideScope", "ProcessQStringToCAML", "ViewId", "ViewXml"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    renderListFormData: {\n      argNames: ["itemId", "formId", "mode"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    reserveListItemId: {\n      requestType: utils_1.RequestType.Post\n    },\n    resetRoleInheritance: {\n      requestType: utils_1.RequestType.Post\n    },\n    saveAsNewView: {\n      argNames: ["oldName", "newName", "privateView", "uri"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    saveAsTemplate: {\n      argNames: ["strFileName", "strName", "strDescription", "bSaveData"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    searchLookupFieldChoices: {\n      argNames: ["targetFieldName", "beginsWithSearchString", "pagingInfo"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setContentAssemblyTemplateReadOnly: {\n      argNames: ["Id"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setExemptFromBlockDownloadOfNonViewableFiles: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setItemsOrder: {\n      argNames: ["itemIds", "lowerOrderItemId", "higherOrderItemId"]\n    },\n    setListCustomOrderFlag: {\n      argNames: ["value"]\n    },\n    startDeleteFileVersions: {\n      argNames: ["deleteOlderThanDays"]\n    },\n    startDeleteFileVersionsByMode: {\n      argNames: ["batchDeleteParameters"]\n    },\n    startFileVersionExpirationReport: {\n      argNames: ["reportFileUrl"]\n    },\n    startRecycle: {},\n    syncFlowCallbackUrl: {\n      argNames: ["flowId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    syncFlowInstance: {\n      argNames: ["flowID"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    syncFlowInstances: {\n      argNames: ["retrieveGroupFlows"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    syncFlowTemplates: {\n      argNames: ["category"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unlockSmartTemplate: {\n      argNames: ["Id", "LockId"]\n    },\n    unpublishMappedView: {\n      argNames: ["appId", "visualizationTarget"],\n      requestType: utils_1.RequestType.Post\n    },\n    unsetContentAssemblyTemplateReadOnly: {\n      argNames: ["Id"]\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.List",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    updateCAAETemplate: {\n      argNames: ["Name", "updateTemplateInfo"]\n    },\n    updateCAAETemplateV2: {\n      argNames: ["Id", "updateTemplateInfo"]\n    },\n    updateContentAssemblyDocument: {\n      argNames: ["TemplateUrl", "contentAssemblyFormAnswers"]\n    },\n    updateFormProcessingModelRetentionLabel: {\n      argNames: ["retentionLabel"]\n    },\n    updateFormProcessingModelSettings: {\n      argNames: ["retentionLabel", "linkedList"]\n    },\n    updateRuleEx: {\n      argNames: ["ruleId", "condition", "title", "status", "action", "triggerType"]\n    },\n    validateAppName: {\n      argNames: ["appDisplayName"]\n    }\n  },\n  "SP.List.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.List",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    ensureClientRenderedSitePagesLibrary: {\n      requestType: utils_1.RequestType.Post\n    },\n    ensureEventsList: {\n      requestType: utils_1.RequestType.Post\n    },\n    ensureSiteAssetsLibrary: {\n      requestType: utils_1.RequestType.Post\n    },\n    ensureSitePagesLibrary: {\n      requestType: utils_1.RequestType.Post\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.List"\n    },\n    getByTitle: {\n      argNames: ["title"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.List"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.ListItem": {\n    properties: ["AttachmentFiles|SP.Attachment.Collection|(\'[Name]\')|SP.Attachment", "Comments|Microsoft.SharePoint.Comments.comment.Collection|(\'[Name]\')|Microsoft.SharePoint.Comments.comment", "ContentType|SP.ContentType", "FieldValuesAsHtml", "FieldValuesAsText", "FieldValuesForEdit", "File|SP.File", "FirstUniqueAncestorSecurableObject", "Folder|SP.Folder", "GetDlpPolicyTip", "ParentList", "Properties", "RoleAssignments|SP.RoleAssignment.Collection|roleassignments|([Name])|SP.RoleAssignment", "Versions|SP.ListItemVersion.Collection|([Name])|SP.ListItemVersion"],\n    addThumbnailFieldData: {\n      argNames: ["imageStream", "imageName", "fieldInternalName", "lockId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    archive: {\n      requestType: utils_1.RequestType.Post\n    },\n    attachImage: {\n      argNames: ["imageStream", "imageName", "fieldInternalName"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    breakRoleInheritance: {\n      argNames: ["copyRoleAssignments", "clearSubscopes"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getComments: {\n      returnType: "Microsoft.SharePoint.Comments.comment.Collection"\n    },\n    getUserEffectivePermissions: {\n      argNames: ["userName"],\n      name: "getUserEffectivePermissions(@user)?@user=\'[[userName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getVersions: {\n      argNames: ["getVersionsParams"]\n    },\n    getWOPIFrameUrl: {\n      argNames: ["action"],\n      requestType: utils_1.RequestType.PostWithArgsInQS\n    },\n    mediaServiceUpdate: {\n      argNames: ["parameters"]\n    },\n    mediaServiceUpdateV2: {\n      argNames: ["parameters", "eventFiringEnabled"]\n    },\n    overridePolicyTip: {\n      argNames: ["userAction", "justification"]\n    },\n    parseAndSetFieldValue: {\n      argNames: ["fieldName", "value"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycle: {\n      requestType: utils_1.RequestType.Post\n    },\n    recycleWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resetRoleInheritance: {\n      requestType: utils_1.RequestType.Post\n    },\n    setCommentsDisabled: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setComplianceTag: {\n      argNames: ["complianceTag", "isTagPolicyHold", "isTagPolicyRecord", "isEventBasedTag", "isTagSuperLock", "isUnlockedAsDefault"]\n    },\n    setComplianceTagWithExplicitMetasUpdate: {\n      argNames: ["complianceTag", "complianceFlags", "complianceTagWrittenTime", "userEmailAddress"]\n    },\n    setComplianceTagWithHold: {\n      argNames: ["complianceTag"]\n    },\n    setComplianceTagWithMetaInfo: {\n      argNames: ["complianceTag", "blockDelete", "blockEdit", "complianceTagWrittenTime", "userEmailAddress", "isTagSuperLock", "isRecordUnlockedAsDefault"]\n    },\n    setComplianceTagWithNoHold: {\n      argNames: ["complianceTag"]\n    },\n    setComplianceTagWithRecord: {\n      argNames: ["complianceTag"]\n    },\n    systemUpdate: {},\n    unarchive: {},\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: function metadataType(obj) {\n        return obj.parent && obj.parent["ListItemEntityTypeFullName"] || "SP.ListItem";\n      },\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    updateEx: {\n      argNames: ["parameters"]\n    },\n    updateOverwriteVersion: {},\n    validateUpdateFetchListItem: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "View", "RootFolder"]\n    },\n    validateUpdateFetchListItemInFolder: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "rootFolder"]\n    },\n    validateUpdateListItem: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "sharedLockId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "SP.ListItem.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: function metadataType(obj) {\n        return obj.parent && obj.parent["ListItemEntityTypeFullName"] || "SP.ListItem";\n      },\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["itemId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.ListItem"\n    },\n    getByStringId: {\n      argNames: ["sId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.ListItemVersion": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycle: {}\n  },\n  "SP.ListItemVersion.Collection": {\n    deleteAll: {\n      requestType: utils_1.RequestType.Post\n    },\n    getById: {\n      argNames: ["versionId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recycleAll: {},\n    restoreByID: {\n      argNames: ["versionId"]\n    }\n  },\n  "SP.ListTemplate": {\n    getGlobalSchemaXml: {}\n  },\n  "SP.ListTemplate.Collection": {\n    getByName: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.MicroService.MicroServiceManager": {\n    addMicroserviceWorkItem: {\n      argNames: ["payLoad", "minutes", "properties"]\n    },\n    deleteMicroserviceWorkItem: {\n      argNames: ["workItemId"]\n    },\n    deleteMicroserviceWorkItemByContentDbId: {\n      argNames: ["contentDatabaseId", "siteId", "workItemId"]\n    },\n    getServiceInternalUrls: {\n      argNames: ["service"]\n    },\n    getServiceUrls: {\n      argNames: ["service"]\n    }\n  },\n  "SP.Microfeed.MicrofeedAttachmentStore": {\n    deletePreProcessedAttachment: {\n      argNames: ["attachmentUri"]\n    },\n    getImage: {\n      argNames: ["imageUrl", "key", "iv"]\n    },\n    preProcessAttachment: {\n      argNames: ["link"]\n    },\n    putFile: {\n      argNames: ["originalFileName", "fileData"]\n    },\n    putImage: {\n      argNames: ["imageData"]\n    }\n  },\n  "SP.Microfeed.MicrofeedData": {\n    addAttachment: {\n      argNames: ["name", "bytes"]\n    },\n    systemUpdate: {},\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Microfeed.MicrofeedData.Collection": {\n    deleteAll: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Microfeed.MicrofeedManager": {\n    addUserToPostPeopleList: {\n      argNames: ["postIdentifier", "UserLoginName"]\n    },\n    clearUnreadMentionsCount: {},\n    deleteById: {\n      argNames: ["postIdentifier"]\n    },\n    deleteUserFromPostPeopleList: {\n      argNames: ["postIdentifier", "UserLoginName"]\n    },\n    getMyCategoricalFeed: {\n      argNames: ["feedOptions"]\n    },\n    getMyConsolidatedFeed: {\n      argNames: ["feedOptions"]\n    },\n    getMyPublishedFeed: {\n      argNames: ["feedOptions", "typeOfPubFeed", "ShowPublicView"]\n    },\n    getPublishedFeed: {\n      argNames: ["feedOwner", "feedOptions", "typeOfPubFeed"]\n    },\n    getThread: {\n      argNames: ["postIdentifier"]\n    },\n    getUnreadMentionsCount: {},\n    like: {\n      argNames: ["postIdentifier"]\n    },\n    lockThreadById: {\n      argNames: ["threadIdentifier"]\n    },\n    post: {\n      argNames: ["postOptions"]\n    },\n    postReply: {\n      argNames: ["postIdentifier", "postReplyOptions"]\n    },\n    repopulateLMT: {\n      argNames: ["timeStamp", "secureHash"]\n    },\n    unLike: {\n      argNames: ["postIdentifier"]\n    },\n    unLockThreadById: {\n      argNames: ["threadIdentifier"]\n    },\n    unsubscribeFromEMail: {\n      argNames: ["postIdentifier"]\n    }\n  },\n  "SP.Microfeed.MicrofeedPostDefinitionManager": {\n    deleteMicrofeedPostDefinition: {\n      argNames: ["postDefinition"]\n    },\n    getMicrofeedPostDefinition: {\n      argNames: ["definitionName"]\n    },\n    getMicrofeedPostDefinitions: {},\n    newMicrofeedPostDefinition: {\n      argNames: ["definitionName"]\n    },\n    updateMicrofeedPostDefinition: {\n      argNames: ["postDefinition"]\n    }\n  },\n  "SP.Microfeed.MicrofeedStore": {\n    addData: {\n      argNames: ["name", "data"]\n    },\n    addDataAsStream: {\n      argNames: ["name", "data"]\n    },\n    executePendingOperations: {},\n    getItem: {\n      argNames: ["storeIdentifier"]\n    },\n    getSocialProperties: {\n      argNames: ["accountName"]\n    },\n    incrementUnreadAtMentionCount: {\n      argNames: ["accountName"]\n    },\n    newItem: {\n      argNames: ["storeIdentifier"]\n    },\n    query: {\n      argNames: ["storeIdentifier", "query"]\n    },\n    setPostLikeStatus: {\n      argNames: ["accountName", "postId", "like"]\n    }\n  },\n  "SP.MultilingualSettings": {\n    query: {\n      argNames: ["oData"]\n    },\n    setFollowLangPreference: {\n      argNames: ["request"]\n    },\n    setNotificationRecipients: {\n      argNames: ["request"]\n    }\n  },\n  "SP.Navigation": {\n    properties: ["QuickLaunch|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode", "TopNavigationBar|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode"],\n    getNodeById: {\n      argNames: ["id"],\n      returnType: "SP.NavigationNode"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.NavigationNode": {\n    properties: ["Children|SP.NavigationNode.Collection|/../getNodeById([Name])|SP.NavigationNode"],\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "SP.NavigationNode",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.NavigationNode.Collection": {\n    add: {\n      argNames: ["properties"],\n      metadataType: "SP.NavigationNode",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    getByIndex: {\n      argNames: ["index"]\n    },\n    moveAfter: {\n      argNames: ["nodeId", "previousNodeId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.OAuth.Authentication": {\n    getRenewalUrl: {\n      argNames: ["redirectUrl"]\n    }\n  },\n  "SP.OAuth.NativeClient": {\n    authenticate: {}\n  },\n  "SP.OAuth.Token": {\n    acquire: {\n      argNames: ["resource", "tokenType"]\n    }\n  },\n  "SP.ObjectSharingInformation": {\n    getSharedWithUsers: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.OrganizationNews": {\n    sitesReference: {}\n  },\n  "SP.PropertyValues.Collection": {\n    add: {\n      argNames: ["key", "value"],\n      name: "_vti_bin/client.svc/ProcessQuery",\n      replaceEndpointFl: true,\n      requestType: utils_1.RequestType.PostReplace,\n      data: "<Request xmlns=\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\" SchemaVersion=\\"15.0.0.0\\" LibraryVersion=\\"16.0.0.0\\" ApplicationName=\\"Javascript Library\\">\\n                <Actions>\\n                    <ObjectPath Id=\\"1\\" ObjectPathId=\\"0\\" />\\n                    <ObjectPath Id=\\"3\\" ObjectPathId=\\"2\\" />\\n                    <ObjectPath Id=\\"5\\" ObjectPathId=\\"4\\" />\\n                    <Method Name=\\"SetFieldValue\\" Id=\\"6\\" ObjectPathId=\\"4\\">\\n                    <Parameters>\\n                        <Parameter Type=\\"String\\">[[key]]</Parameter>\\n                        <Parameter Type=\\"String\\">[[value]]</Parameter>\\n                    </Parameters>\\n                    </Method>\\n                    <Query Id=\\"7\\" ObjectPathId=\\"2\\">\\n                        <Query SelectAllProperties=\\"true\\">\\n                            <Properties />\\n                        </Query>\\n                    </Query>\\n                    <Method Name=\\"Update\\" Id=\\"8\\" ObjectPathId=\\"2\\" />\\n                </Actions>\\n                <ObjectPaths>\\n                    <StaticProperty Id=\\"0\\" TypeId=\\"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\\" Name=\\"Current\\" />\\n                    <Property Id=\\"2\\" ParentId=\\"0\\" Name=\\"Web\\" />\\n                    <Property Id=\\"4\\" ParentId=\\"2\\" Name=\\"AllProperties\\" />\\n                </ObjectPaths>\\n            </Request>"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["key"],\n      name: "_vti_bin/client.svc/ProcessQuery",\n      replaceEndpointFl: true,\n      requestType: utils_1.RequestType.PostReplace,\n      data: "<Request xmlns=\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\" SchemaVersion=\\"15.0.0.0\\" LibraryVersion=\\"16.0.0.0\\" ApplicationName=\\"Javascript Library\\">\\n                <Actions>\\n                    <ObjectPath Id=\\"1\\" ObjectPathId=\\"0\\" />\\n                    <ObjectPath Id=\\"3\\" ObjectPathId=\\"2\\" />\\n                    <ObjectPath Id=\\"5\\" ObjectPathId=\\"4\\" />\\n                    <Method Name=\\"SetFieldValue\\" Id=\\"6\\" ObjectPathId=\\"4\\">\\n                    <Parameters>\\n                        <Parameter Type=\\"String\\">[[key]]</Parameter>\\n                        <Parameter Type=\\"Null\\" />\\n                    </Parameters>\\n                    </Method>\\n                    <Query Id=\\"7\\" ObjectPathId=\\"2\\">\\n                        <Query SelectAllProperties=\\"true\\">\\n                            <Properties />\\n                        </Query>\\n                    </Query>\\n                    <Method Name=\\"Update\\" Id=\\"8\\" ObjectPathId=\\"2\\" />\\n                </Actions>\\n                <ObjectPaths>\\n                    <StaticProperty Id=\\"0\\" TypeId=\\"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\\" Name=\\"Current\\" />\\n                    <Property Id=\\"2\\" ParentId=\\"0\\" Name=\\"Web\\" />\\n                    <Property Id=\\"4\\" ParentId=\\"2\\" Name=\\"AllProperties\\" />\\n                </ObjectPaths>\\n            </Request>"\n    }\n  },\n  "SP.Publishing.AnnouncementsController": {\n    active: {},\n    channel: {},\n    flwPropertyFilteringMapping: {\n      argNames: ["flwPropertyFilteringMapping"]\n    }\n  },\n  "SP.Publishing.CampaignPublication": {\n    approveApprovalRequest: {\n      argNames: ["comment"]\n    },\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    cancelApprovalRequest: {},\n    cancelSchedulePublication: {},\n    checkOut: {},\n    checkoutPage: {},\n    copy: {},\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"]\n    },\n    createApprovalRequest: {\n      argNames: ["creationInfo"]\n    },\n    createNewsCopy: {},\n    "delete": {},\n    deletePublication: {},\n    demoteFromNews: {},\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {},\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getPrePublishValidationStatus: {},\n    getPublishingStatus: {},\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    loadMailDraft: {\n      argNames: ["requestParam"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {},\n    publish: {},\n    publishAsBot: {\n      argNames: ["tenantId", "channelIds", "message"]\n    },\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    publishPublication: {},\n    rejectApprovalRequest: {\n      argNames: ["comment"]\n    },\n    resetEndpoint: {\n      argNames: ["requestParam"]\n    },\n    sPSiteValidator: {\n      argNames: ["siteUrl"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"]\n    },\n    saveMailDraft: {\n      argNames: ["requestParam"]\n    },\n    savePage: {\n      argNames: ["pageStream"]\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"]\n    },\n    savePageAsTemplate: {},\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublication: {\n      argNames: ["publishStartDate"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"]\n    },\n    sendTestEmail: {\n      argNames: ["transpileContent"]\n    },\n    sendTestTeamsMessage: {\n      argNames: ["audienceId", "transpileContent"]\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"]\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"]\n    },\n    startExclusiveAuthoring: {},\n    syncApprovalRequest: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {},\n    updateSharePointPublishingStatus: {\n      argNames: ["destinationSiteId", "destinationUrl", "sharePointPublishingStatus", "sharePointPublishingErrorCode"]\n    },\n    validate: {}\n  },\n  "SP.Publishing.CommunicationSite": {\n    create: {\n      argNames: ["request"]\n    },\n    enable: {\n      argNames: ["designPackageId"]\n    },\n    status: {\n      argNames: ["url"]\n    }\n  },\n  "SP.Publishing.EmbedService": {\n    embedData: {\n      argNames: ["url", "version"]\n    }\n  },\n  "SP.Publishing.FeedVideoPage": {\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    checkOut: {},\n    checkoutPage: {},\n    copy: {\n      requestType: utils_1.RequestType.Post\n    },\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"],\n      requestType: utils_1.RequestType.Post\n    },\n    createNewsCopy: {},\n    demoteFromNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {},\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    publish: {},\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"]\n    },\n    savePage: {\n      argNames: ["pageStream"]\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"]\n    },\n    savePageAsTemplate: {},\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"]\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"]\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"]\n    },\n    startExclusiveAuthoring: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {}\n  },\n  "SP.Publishing.FeedVideoPage.Collection": {\n    isContentTypeAvailable: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "SP.Publishing.Navigation.PortalNavigationCacheWrapper": {\n    disable: {},\n    enable: {},\n    refresh: {}\n  },\n  "SP.Publishing.Navigation.StructuralNavigationCacheWrapper": {\n    setSiteState: {\n      argNames: ["state"]\n    },\n    setWebState: {\n      argNames: ["state"]\n    },\n    siteState: {},\n    webState: {}\n  },\n  "SP.Publishing.PageDiagnosticsController": {\n    byPage: {\n      argNames: ["pageRelativeFilePath"]\n    },\n    save: {\n      argNames: ["pageDiagnosticsResult"]\n    }\n  },\n  "SP.Publishing.PointPublishingPost": {\n    addImageFromUrl: {\n      argNames: ["fromImageUrl"]\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.PointPublishingPost.Collection": {\n    getById: {\n      argNames: ["id", "publishedOnly"]\n    },\n    getByName: {\n      argNames: ["name", "publishedOnly"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.PointPublishingPostServiceManager": {\n    addBannerImageFromUrl: {\n      argNames: ["fromImageUrl"]\n    },\n    deleteMagazine: {},\n    getDocProps: {\n      argNames: ["docUrls"]\n    },\n    getPostsQuery: {\n      argNames: ["top", "itemIdBoundary", "directionAscending", "publishedOnly", "draftsOnly"]\n    },\n    getTopAuthors: {\n      argNames: ["count"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    queryGroupNames: {\n      argNames: ["query"]\n    },\n    setMagazineProperties: {\n      argNames: ["title", "description", "bannerImageUrl", "bannerColor", "bannerPattern"]\n    }\n  },\n  "SP.Publishing.PointPublishingSiteManager": {\n    create: {\n      argNames: ["siteInfo"]\n    },\n    getSiteStatus: {\n      argNames: ["siteInfo"]\n    }\n  },\n  "SP.Publishing.PointPublishingTenantManager": {\n    isBlogEnabled: {}\n  },\n  "SP.Publishing.PointPublishingUser": {\n    deleteUserFromContainerGroup: {}\n  },\n  "SP.Publishing.PointPublishingUser.Collection": {\n    addOrUpdateUser: {\n      argNames: ["loginName", "isOwner"]\n    },\n    getById: {\n      argNames: ["userId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.PortalLaunch.PortalLaunchWavesManager": {\n    get: {\n      argNames: ["siteUrl"]\n    },\n    getAll: {},\n    remove: {\n      argNames: ["siteUrl"]\n    },\n    saveWaveSetup: {\n      argNames: ["portalLaunchSetup"]\n    }\n  },\n  "SP.Publishing.RepostPage": {\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    checkOut: {},\n    checkoutPage: {},\n    copy: {\n      requestType: utils_1.RequestType.Post\n    },\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"],\n      requestType: utils_1.RequestType.Post\n    },\n    createNewsCopy: {},\n    demoteFromNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {},\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    publish: {},\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"]\n    },\n    savePage: {\n      argNames: ["pageStream"]\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"]\n    },\n    savePageAsTemplate: {},\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"]\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"]\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"]\n    },\n    startExclusiveAuthoring: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.RepostPage.Collection": {\n    isContentTypeAvailable: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.RichSharing": {\n    sharePageByEmail: {\n      argNames: ["url", "message", "recipientEmails", "pageContent", "subject", "ccEmails", "bccEmails"]\n    },\n    shareSiteByEmail: {\n      argNames: ["CustomDescription", "CustomTitle", "Message", "Url", "recipientEmails"]\n    }\n  },\n  "SP.Publishing.Search": {\n    newest: {\n      argNames: ["startItemIndex", "itemLimit"]\n    },\n    popular: {\n      argNames: ["startItemIndex", "itemLimit"]\n    },\n    query: {\n      argNames: ["queryText", "startItemIndex", "itemLimit", "culture"]\n    },\n    queryChannels: {\n      argNames: ["queryText", "startItemIndex", "itemLimit", "culture"]\n    },\n    related: {\n      argNames: ["videoId", "startItemIndex", "itemLimit"]\n    }\n  },\n  "SP.Publishing.SharePointHomeServiceManager": {\n    getAcronymsAndColors: {\n      argNames: ["labels"]\n    }\n  },\n  "SP.Publishing.SitePage": {\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    checkOut: {\n      requestType: utils_1.RequestType.Post\n    },\n    checkoutPage: {\n      requestType: utils_1.RequestType.Post\n    },\n    copy: {\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"],\n      requestType: utils_1.RequestType.Post\n    },\n    createNewsCopy: {\n      requestType: utils_1.RequestType.Post\n    },\n    demoteFromNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {\n      requestType: utils_1.RequestType.Post\n    },\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    publish: {\n      requestType: utils_1.RequestType.Post\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"],\n      requestType: utils_1.RequestType.Post\n    },\n    savePage: {\n      argNames: ["pageStream"],\n      requestType: utils_1.RequestType.Post\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"],\n      requestType: utils_1.RequestType.Post\n    },\n    savePageAsTemplate: {\n      requestType: utils_1.RequestType.Post\n    },\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"],\n      requestType: utils_1.RequestType.Post\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"],\n      requestType: utils_1.RequestType.Post\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"],\n      requestType: utils_1.RequestType.Post\n    },\n    startExclusiveAuthoring: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {\n      argNames: ["properties"],\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.SitePage.Collection": {\n    copyToStatus: {\n      argNames: ["workItemId"]\n    },\n    createAppPage: {\n      argNames: ["webPartDataAsJson"],\n      metadataType: "SP.Publishing.SitePage",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    ensureTitleResource: {},\n    feed: {\n      argNames: ["promotedState", "published", "metadataFilter", "languageOverride"]\n    },\n    feedTargeted: {\n      argNames: ["promotedState", "published", "metadataFilter", "languageOverride"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    getByUniqueId: {\n      argNames: ["uniqueId"]\n    },\n    getByUrl: {\n      argNames: ["url"]\n    },\n    getPageColumnState: {\n      argNames: ["url"]\n    },\n    getTranslations: {\n      argNames: ["sourceItemId"]\n    },\n    isSitePage: {\n      argNames: ["url"]\n    },\n    pageMoveStatus: {\n      argNames: ["workItemId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setMultilingual: {\n      argNames: ["enabled"]\n    },\n    setScheduling: {\n      argNames: ["enabled"]\n    },\n    templates: {},\n    updateAppPage: {\n      argNames: ["pageId", "webPartDataAsJson", "title", "includeInNavigation"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    updateFullPageApp: {\n      argNames: ["serverRelativeUrl", "webPartDataAsJson"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "SP.Publishing.SitePage3D": {\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    checkOut: {},\n    checkoutPage: {},\n    copy: {\n      requestType: utils_1.RequestType.Post\n    },\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"]\n    },\n    createNewsCopy: {},\n    demoteFromNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {},\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    publish: {},\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"]\n    },\n    savePage: {\n      argNames: ["pageStream"]\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"]\n    },\n    savePageAsTemplate: {},\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"]\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"]\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"]\n    },\n    startExclusiveAuthoring: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {}\n  },\n  "SP.Publishing.SitePage3D.Collection": {\n    activate: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "SP.Publishing.SitePageMetadata.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.SitePageService": {\n    properties: ["CommunicationSite|SP.Publishing.CommunicationSite", "Pages|SP.Publishing.SitePage.Collection|(\'[Name]\')|SP.Publishing.SitePage"],\n    addImage: {\n      argNames: ["pageName", "imageFileName", "imageStream", "pageId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addImageFromExternalUrl: {\n      argNames: ["pageName", "imageFileName", "externalUrl", "subFolderName", "pageId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    canCreatePage: {},\n    canCreatePromotedPage: {},\n    enableAmplifyFromAnywhere: {},\n    enableAnnouncements: {},\n    enableCategories: {},\n    pagesInLib: {\n      argNames: ["id"]\n    },\n    pagesInLibByName: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.SpotlightChannel": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.SpotlightChannel.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.SpotlightVideo": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.SpotlightVideo.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.SubtitleFile.Collection": {\n    add: {\n      argNames: ["language", "extension", "stream"]\n    },\n    getSubtitleFile: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    remove: {\n      argNames: ["name"]\n    }\n  },\n  "SP.Publishing.TopicSitePage": {\n    boostNews: {\n      argNames: ["SitePageBoost"]\n    },\n    checkOut: {},\n    checkoutPage: {},\n    copy: {\n      requestType: utils_1.RequestType.Post\n    },\n    copyTo: {\n      argNames: ["copyToParams"]\n    },\n    copyWithConfiguration: {\n      argNames: ["sitePageFlags", "isNews", "creationMode"]\n    },\n    createNewsCopy: {},\n    demoteFromNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    discardCoAuth: {\n      argNames: ["lockId"]\n    },\n    discardPage: {},\n    extendSessionCoAuth: {},\n    getDependencyMetadata: {},\n    getHighlightsInfo: {},\n    getLatestVersionsInDescendingOrder: {\n      argNames: ["numVersions"]\n    },\n    getVersion: {\n      argNames: ["versionId"]\n    },\n    move: {\n      argNames: ["pageMoveParams"]\n    },\n    promoteToNews: {\n      requestType: utils_1.RequestType.Post\n    },\n    publish: {},\n    publishCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveDraft: {\n      argNames: ["sitePage"]\n    },\n    savePage: {\n      argNames: ["pageStream"]\n    },\n    savePageAsDraft: {\n      argNames: ["pageStream"]\n    },\n    savePageAsTemplate: {},\n    savePageAsTemplate2: {\n      argNames: ["creationMode"]\n    },\n    savePageAsTemplateOnMySite: {},\n    savePageCoAuth: {\n      argNames: ["pageStream"]\n    },\n    saveStreams: {\n      argNames: ["contentStream", "sharedLockId"]\n    },\n    schedulePublish: {\n      argNames: ["sitePage"]\n    },\n    sharePagePreviewByEmail: {\n      argNames: ["message", "recipientEmails"]\n    },\n    startCoAuth: {\n      argNames: ["paramsStream"]\n    },\n    startExclusiveAuthoring: {},\n    tryProcessSourcePageAfterPageMovePublish: {},\n    tryProcessSourcePageBeforePageMovePublish: {},\n    update: {}\n  },\n  "SP.Publishing.TopicSitePage.Collection": {\n    getByEntityId: {\n      argNames: ["entityId"]\n    },\n    getPagesByEntityId: {\n      argNames: ["entityId"]\n    },\n    getByEntityIdAndCulture: {\n      argNames: ["id", "culture"]\n    },\n    isContentTypeAvailable: {},\n    query: {\n      argNames: ["oData"]\n    }\n  },\n  "SP.Publishing.VideoChannel": {\n    getAllVideos: {\n      argNames: ["skip", "limit"]\n    },\n    getChannelPageUrl: {\n      argNames: ["viewMode"]\n    },\n    getMyVideos: {\n      argNames: ["skip", "limit"]\n    },\n    getPermissionGroup: {\n      argNames: ["permission"]\n    },\n    getVideoCount: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Publishing.VideoChannel.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.VideoItem": {\n    customThumbnail: {},\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    getFile: {},\n    getPlaybackMetadata: {\n      argNames: ["sdnConfiguration"]\n    },\n    getPlaybackUrl: {\n      argNames: ["videoFormat"]\n    },\n    getStreamingKeyAccessToken: {},\n    getVideoDetailedViewCount: {},\n    getVideoEmbedCode: {\n      argNames: ["width", "height", "autoplay", "showInfo", "makeResponsive"]\n    },\n    getVideoViewProgressCount: {},\n    incrementVideoViewProgressCount: {\n      argNames: ["percentageViewed"]\n    },\n    incrementViewCount: {\n      argNames: ["viewOrigin"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setPeopleInMedia: {\n      argNames: ["loginNames"]\n    },\n    setVideoOwner: {\n      argNames: ["id"]\n    },\n    subtitles: {},\n    thumbnailStream: {\n      argNames: ["preferredWidth"]\n    },\n    thumbnails: {\n      argNames: ["preferredWidth"]\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    uploadCustomThumbnail: {\n      argNames: ["fileExtension", "customVideoThumbnail"]\n    }\n  },\n  "SP.Publishing.VideoItem.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.VideoPermissionGroup": {\n    hasCurrentUser: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.VideoServiceManager": {\n    getChannels: {\n      argNames: ["startIndex", "limit"]\n    },\n    getPermissionGroup: {\n      argNames: ["permission"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Publishing.VideoThumbnail.Collection": {\n    getByIndex: {\n      argNames: ["choice"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.PushNotificationSubscriber": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.PushNotificationSubscriber.Collection": {\n    getByStoreId: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.RecycleBinItem": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    moveToSecondStage: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restore: {}\n  },\n  "SP.RecycleBinItem.Collection": {\n    deleteAll: {},\n    deleteAllSecondStageItems: {},\n    deleteByIds: {\n      argNames: ["ids"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    moveAllToSecondStage: {},\n    moveToSecondStageByIds: {\n      argNames: ["ids"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restoreAll: {},\n    restoreByIds: {\n      argNames: ["ids", "bRenameExistingItems"]\n    }\n  },\n  "SP.RegionalSettings": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.RelatedField.Collection": {\n    getByFieldId: {\n      argNames: ["fieldId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.RemoteWeb": {\n    getFileByServerRelativePath: {\n      argNames: ["serverRelatvieFilePath"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByServerRelativeUrl: {\n      argNames: ["serverRelativeFileUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByUrl: {\n      argNames: ["fileUrl"],\n      name: "getFileByUrl(@url)?@url=\'[[fileUrl]]\'",\n      requestType: utils_1.RequestType.GetReplace,\n      returnType: "SP.File"\n    },\n    getFolderByServerRelativeUrl: {\n      argNames: ["serverRelativeUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getGroupById: {\n      argNames: ["groupId"]\n    },\n    getListById: {\n      argNames: ["listGuid"]\n    },\n    getListByServerRelativeUrl: {\n      argNames: ["serverRelativeUrl"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.RequestContext": {\n    getRemoteContext: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.RoleAssignment": {\n    properties: ["Member", "RoleDefinitionBindings|SP.RoleDefinition.Collection"],\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.RoleAssignment",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.RoleAssignment.Collection": {\n    addRoleAssignment: {\n      argNames: ["principalId", "roleDefId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getByPrincipalId: {\n      argNames: ["principalId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.RoleAssignment"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeRoleAssignment: {\n      argNames: ["principalId", "roleDefId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "SP.RoleDefinition": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.RoleDefinition",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.RoleDefinition.Collection": {\n    add: {\n      argNames: ["properties"],\n      metadataType: "SP.RoleDefinition",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.RoleDefinition"\n    },\n    getByName: {\n      argNames: ["name"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.RoleDefinition"\n    },\n    getByType: {\n      argNames: ["roleType"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.RoleDefinition"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recreateMissingDefaultRoleDefinitions: {},\n    removeAll: {}\n  },\n  "SP.ScriptSafeDomain": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    }\n  },\n  "SP.ScriptSafeDomain.Collection": {\n    create: {\n      argNames: ["parameters"]\n    },\n    getByDomainName: {\n      argNames: ["domainName"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.SecurableObject": {\n    breakRoleInheritance: {\n      argNames: ["copyRoleAssignments", "clearSubscopes"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resetRoleInheritance: {}\n  },\n  "SP.Site": {\n    properties: ["EventReceivers|SP.EventReceiverDefinition.Collection|(\'[Name]\')|SP.EventReceiverDefinition", "Features|SP.Feature.Collection|(\'[Name]\')|SP.Feature", "Owner|SP.User", "RootWeb|SP.Web", "UserCustomActions|SP.UserCustomAction.Collection|(\'[Name]\')|SP.UserCustomAction"],\n    cancelDeleteFileVersions: {\n      requestType: utils_1.RequestType.Post\n    },\n    cancelSetVersionPolicyForDocLibs: {\n      requestType: utils_1.RequestType.Post\n    },\n    createCopyJob: {\n      argNames: ["exportObjectUris", "destinationUri", "options"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createCopyJobs: {\n      argNames: ["exportObjectUris", "destinationUri", "options"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createMigrationIngestionJob: {\n      argNames: ["gWebId", "azureContainerSourceUri", "azureContainerManifestUri", "azureQueueReportUri", "ingestionTaskKey"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createMigrationJob: {\n      argNames: ["gWebId", "azureContainerSourceUri", "azureContainerManifestUri", "azureQueueReportUri"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createMigrationJobEncrypted: {\n      argNames: ["gWebId", "azureContainerSourceUri", "azureContainerManifestUri", "azureQueueReportUri", "options"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createPreviewSPSite: {\n      argNames: ["upgrade", "sendemail"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createSPAsyncReadJob: {\n      argNames: ["url", "readOptions", "encryptionOption", "azureContainerManifestUri", "azureQueueReportUri"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createSPAsyncReadJobWithMultiUrl: {\n      argNames: ["urls", "readOptions", "encryptionOption", "azureContainerManifestUri", "azureQueueReportUri"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    deleteMigrationJob: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enqueueApplySensitivityLabelWork: {\n      argNames: ["workItemInformation"]\n    },\n    extendUpgradeReminderDate: {\n      requestType: utils_1.RequestType.Post\n    },\n    getBlockDownloadPolicyForFilesData: {},\n    getBringYourOwnKeyRecoveryKeyMode: {},\n    getBringYourOwnKeySiteStatus: {},\n    getBringYourOwnKeyTenantStatus: {},\n    getCatalog: {\n      argNames: ["typeCatalog"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getCopyJobProgress: {\n      argNames: ["copyJobInfo"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getHubSiteJoinApprovalCorrelationId: {},\n    getMigrationJobStatus: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getMigrationStatus: {},\n    getProgressForDeleteFileVersions: {},\n    getProgressForExpireFileVersionsBySchedule: {\n      argNames: ["scheduleFilePath"]\n    },\n    getProgressForFileVersionExpirationReport: {\n      argNames: ["reportFileUrl"]\n    },\n    getProgressForSetVersionPolicyForDocLibs: {},\n    getRecycleBinItems: {\n      argNames: ["pagingInfo", "rowLimit", "isAscending", "orderBy", "itemState"],\n      requestType: utils_1.RequestType.GetWithArgsInBody\n    },\n    getWebPath: {\n      argNames: ["siteId", "webId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getWebTemplates: {\n      argNames: ["LCID", "overrideCompatLevel"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    invalidate: {\n      requestType: utils_1.RequestType.Post\n    },\n    joinHubSite: {\n      argNames: ["hubSiteId", "approvalToken", "approvalCorrelationId"],\n      requestType: utils_1.RequestType.GetWithArgsInBody\n    },\n    multiGeoCopyJob: {\n      argNames: ["jobId", "userId", "binaryPayload"]\n    },\n    needsUpgradeByType: {\n      argNames: ["versionUpgrade", "recursive"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    needsUpgradeByTypeFromSpoShell: {\n      argNames: ["versionUpgrade", "recursive"]\n    },\n    onHubSiteJoinRequestApproved: {\n      argNames: ["joiningSiteId"]\n    },\n    onHubSiteJoinRequestCanceled: {\n      argNames: ["approvalCorrelationId"]\n    },\n    onHubSiteJoinRequestStarted: {\n      argNames: ["approvalCorrelationId"]\n    },\n    onboardTenantForBringYourOwnKey: {\n      argNames: ["keyInfo"]\n    },\n    openWeb: {\n      argNames: ["strUrl"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    openWebById: {\n      argNames: ["gWebId"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    openWebUsingPath: {\n      argNames: ["path"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    processStorageMetricsChanges: {},\n    provisionMigrationContainers: {},\n    provisionMigrationQueue: {},\n    provisionTemporaryAzureContainer: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recoverTenantForBringYourOwnKey: {\n      argNames: ["keyInfo"]\n    },\n    registerHubSite: {\n      argNames: ["creationInformation"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    rollTenantBringYourOwnKey: {\n      argNames: ["keyType", "keyVaultInfo"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    runHealthCheck: {\n      argNames: ["ruleId", "bRepair", "bRunAlways"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    runUpgradeSiteSession: {\n      argNames: ["versionUpgrade", "queueOnly", "sendEmail"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setBlockDownloadPolicyForFiles: {\n      argNames: ["blockDownloadPolicyFileTypeIds"]\n    },\n    setIsContributorOwnerEnabledPropertyForDefaultDocLib: {\n      argNames: ["propertyValue", "forceDocLibActivation", "deleteIfDocLibAlreadyExists"]\n    },\n    startDeleteFileVersions: {\n      argNames: ["deleteOlderThanDays"]\n    },\n    startDeleteFileVersionsByMode: {\n      argNames: ["batchDeleteParameters"]\n    },\n    startExpireFileVersionsBySchedule: {\n      argNames: ["scheduleFilePath"]\n    },\n    startFileVersionExpirationReport: {\n      argNames: ["reportFileUrl"]\n    },\n    startSetVersionPolicyForDocLibs: {\n      argNames: ["enableAutoTrim", "majorVersionLimit", "majorWithMinorVersionsLimit", "expireAfterDays"]\n    },\n    unregisterHubSite: {},\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.Site",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    updateClientObjectModelUseRemoteAPIsPermissionSetting: {\n      argNames: ["requireUseRemoteAPIs"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    updateInactiveSiteProperties: {\n      argNames: ["operation", "executionId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    validateHubSiteJoinApprovalToken: {\n      argNames: ["joiningSiteId", "approvalToken"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "SP.SiteVersionPolicyManager": {\n    inheritTenantSettings: {},\n    query: {\n      argNames: ["oData"]\n    },\n    setAutoExpiration: {},\n    setExpireAfter: {\n      argNames: ["majorVersionLimit", "expireAfterDays"]\n    },\n    setNoExpiration: {\n      argNames: ["majorVersionLimit"]\n    }\n  },\n  "SP.Social.SocialFeedManager": {\n    createFileAttachment: {\n      argNames: ["name", "description", "fileData"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    createImageAttachment: {\n      argNames: ["name", "description", "imageData"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    createPost: {\n      argNames: ["targetId", "creationData"],\n      requestType: utils_1.RequestType.PostWithArgsAndData\n    },\n    deletePost: {\n      argNames: ["postId"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getAllLikers: {\n      argNames: ["postId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getFeed: {\n      argNames: ["type", "options"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getFeedFor: {\n      argNames: ["actorId", "options"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getFullThread: {\n      argNames: ["threadId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getMentions: {\n      argNames: ["clearUnreadMentions", "options"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getPreview: {\n      argNames: ["itemUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getPreviewImage: {\n      argNames: ["url", "key", "iv"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getUnreadMentionCount: {\n      requestType: utils_1.RequestType.Get\n    },\n    likePost: {\n      argNames: ["postId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    lockThread: {\n      argNames: ["threadId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    suppressThreadNotifications: {\n      argNames: ["threadId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    unlikePost: {\n      argNames: ["postId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    unlockThread: {\n      argNames: ["threadId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    }\n  },\n  "SP.Social.SocialFollowingManager": {\n    follow: {\n      argNames: ["actor"],\n      name: "follow(actor=@v)?@v=\'[[actor]]\'",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    getFollowed: {\n      argNames: ["types"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getFollowedCount: {\n      argNames: ["types"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getFollowers: {\n      requestType: utils_1.RequestType.Get\n    },\n    getSuggestions: {\n      requestType: utils_1.RequestType.Get\n    },\n    isFollowed: {\n      argNames: ["actor"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    mergeFollowedSites: {\n      argNames: ["followedSites"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    stopFollowing: {\n      argNames: ["actor"],\n      requestType: utils_1.RequestType.GetWithArgs\n    }\n  },\n  "SP.Social.SocialRestActor": {\n    feed: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    likes: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    mentionFeed: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    news: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    organizationFeed: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    timelineFeed: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    unreadMentionCount: {\n      requestType: utils_1.RequestType.Get\n    }\n  },\n  "SP.Social.SocialRestFeed": {\n    clearUnReadMentionCount: {\n      argNames: ["MaxThreadCount", "NewerThan", "OlderThan", "SortOrder"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    post: {\n      argNames: ["restCreationData"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "SP.Social.SocialRestFeedManager": {\n    actor: {\n      argNames: ["item"],\n      name: "actor(item=@v)?@v=\'[[item]]\'",\n      requestType: utils_1.RequestType.GetReplace,\n      returnType: "SP.Social.SocialRestActor"\n    },\n    my: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "SP.Social.SocialRestActor"\n    },\n    post: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.Social.SocialRestFollowingManager": {\n    follow: {\n      argNames: ["AccountName", "ActorType", "ContentUri", "Id", "TagGuid"],\n      name: "follow(AccountName=@v, ActorType=\'[[ActorType]]\', ContentUri=\'[[ContentUri]]\', Id=\'[[Id]]\', TagGuid=\'[[TagGuid]]\')?@v=\'[[AccountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    followed: {\n      argNames: ["types", "count"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    followedCount: {\n      argNames: ["types"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    followers: {\n      requestType: utils_1.RequestType.Get\n    },\n    isFollowed: {\n      argNames: ["AccountName", "ActorType", "ContentUri", "Id", "TagGuid"],\n      name: "isFollowed(AccountName=@v, ActorType=\'[[ActorType]]\', ContentUri=\'[[ContentUri]]\', Id=\'[[Id]]\', TagGuid=\'[[TagGuid]]\')?@v=\'[[AccountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    mergeFollowedSites: {\n      argNames: ["followedSites"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    my: {\n      requestType: utils_1.RequestType.Get\n    },\n    stopFollowing: {\n      argNames: ["AccountName", "ActorType", "ContentUri", "Id", "TagGuid"],\n      name: "stopFollowing(AccountName=@v, ActorType=\'[[ActorType]]\', ContentUri=\'[[ContentUri]]\', Id=\'[[Id]]\', TagGuid=\'[[TagGuid]]\')?@v=\'[[AccountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    suggestions: {\n      requestType: utils_1.RequestType.Get\n    }\n  },\n  "SP.Social.SocialRestThread": {\n    "delete": {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.Delete\n    },\n    like: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    likers: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    lock: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    reply: {\n      argNames: ["restCreationData"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    unLike: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    unLock: {\n      argNames: ["ID"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    }\n  },\n  "SP.SPAppLicenseManager": {\n    checkLicense: {\n      argNames: ["productId"]\n    }\n  },\n  "SP.SPHSite": {\n    addHomeSite: {\n      argNames: ["siteUrl", "order", "audiences", "vivaConnectionsDefaultStart", "isInDraftMode"]\n    },\n    details: {\n      argNames: ["includeVivaSites"]\n    },\n    setSPHSite: {\n      argNames: ["siteUrl", "vivaConnectionsDefaultStart", "isInDraftMode"]\n    }\n  },\n  "SP.Taxonomy.TaxonomyField": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    disableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    enableIndex: {\n      requestType: utils_1.RequestType.Post\n    },\n    setShowInDisplayForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInEditForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    setShowInNewForm: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    update: {\n      argNames: ["properties"],\n      inheritMetadataType: true,\n      metadataType: "SP.Field",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.TenantSettings": {\n    clearCorporateCatalog: {},\n    getDataAccessGovernanceReportConfig: {},\n    query: {\n      argNames: ["oData"]\n    },\n    setCorporateCatalog: {\n      argNames: ["url"]\n    }\n  },\n  "SP.ThemeInfo": {\n    getThemeFontByName: {\n      argNames: ["name", "lcid"]\n    },\n    getThemeShadeByName: {\n      argNames: ["name"]\n    }\n  },\n  "SP.TimeZone": {\n    localTimeToUTC: {\n      argNames: ["date"]\n    },\n    setId: {\n      argNames: ["id"]\n    },\n    uTCToLocalTime: {\n      argNames: ["date"]\n    }\n  },\n  "SP.TimeZone.Collection": {\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Translation.SyncTranslator": {\n    translate: {\n      argNames: ["inputFile", "outputFile"]\n    },\n    translateStream: {\n      argNames: ["inputFile", "fileExtension"]\n    }\n  },\n  "SP.Translation.TranslationJob": {\n    translateFile: {\n      argNames: ["inputFile", "outputFile"]\n    },\n    translateFolder: {\n      argNames: ["inputFolder", "outputFolder", "recursion"]\n    },\n    translateLibrary: {\n      argNames: ["inputLibrary", "outputLibrary"]\n    }\n  },\n  "SP.Translation.TranslationJobStatus": {\n    getAllItems: {}\n  },\n  "SP.TranslationStatusCollection": {\n    create: {\n      argNames: ["request"]\n    },\n    set: {\n      argNames: ["request"]\n    },\n    updateTranslationLanguages: {}\n  },\n  "SP.User": {\n    properties: ["Groups|SP.Group.Collection|([Name])|SP.Group"],\n    expire: {\n      requestType: utils_1.RequestType.Post\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.User",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.User.Collection": {\n    add: {\n      argNames: ["properties"],\n      metadataType: "SP.User",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    addUserById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getByEmail: {\n      argNames: ["emailAddress"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    getByLoginName: {\n      argNames: ["loginName"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    getByObjectId: {\n      argNames: ["objectId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    getByPuid: {\n      argNames: ["puid"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    removeByLoginName: {\n      argNames: ["loginName"],\n      name: "removeByLoginName(@v)?@v=\'[[loginName]]\'",\n      requestType: utils_1.RequestType.PostReplace\n    }\n  },\n  "SP.UserCustomAction": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.UserCustomAction",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.UserCustomAction.Collection": {\n    add: {\n      argNames: ["properties"],\n      metadataType: "SP.UserCustomAction",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    clear: {\n      requestType: utils_1.RequestType.Post\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.UserCustomAction"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.UserExperienceState": {\n    setFlag: {\n      argNames: ["flag", "reset"]\n    }\n  },\n  "SP.UserProfiles.FollowedContent": {\n    findAndUpdateFollowedGroup: {\n      argNames: ["groupId"]\n    },\n    findAndUpdateFollowedItem: {\n      argNames: ["url"]\n    },\n    followItem: {\n      argNames: ["item"]\n    },\n    getFollowedStatus: {\n      argNames: ["url"]\n    },\n    getGroups: {\n      argNames: ["rowLimit"]\n    },\n    getItem: {\n      argNames: ["url"]\n    },\n    getItems: {\n      argNames: ["options", "subtype"]\n    },\n    hasGroupMembershipChangedAndSyncChanges: {},\n    isFollowed: {\n      argNames: ["url"]\n    },\n    refreshFollowedItem: {\n      argNames: ["item"]\n    },\n    setItemPinState: {\n      argNames: ["uri", "groupId", "pinState"]\n    },\n    stopFollowing: {\n      argNames: ["url"]\n    },\n    updateFollowedGroupForUser: {\n      argNames: ["contextUri", "groupId", "loginName"]\n    }\n  },\n  "SP.UserProfiles.PeopleManager": {\n    amIFollowedBy: {\n      argNames: ["accountName"],\n      name: "amIFollowedBy(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    amIFollowing: {\n      argNames: ["accountName"],\n      name: "amIFollowing(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    follow: {\n      argNames: ["accountName"],\n      name: "follow(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    followTag: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getDefaultDocumentLibrary: {\n      argNames: ["accountName", "createSiteIfNotExists", "siteCreationPriority"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getFollowedTags: {\n      argNames: ["cTagsToFetch"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getFollowersFor: {\n      argNames: ["accountName"],\n      name: "getFollowersFor(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getMyFollowers: {\n      requestType: utils_1.RequestType.Get\n    },\n    getMyProperties: {\n      requestType: utils_1.RequestType.Get\n    },\n    getMySuggestions: {\n      requestType: utils_1.RequestType.Get\n    },\n    getPeopleFollowedBy: {\n      argNames: ["accountName"],\n      name: "getPeopleFollowedBy(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getPeopleFollowedByMe: {\n      requestType: utils_1.RequestType.Get\n    },\n    getPropertiesFor: {\n      argNames: ["accountName"],\n      name: "getPropertiesFor(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getSPUserInformation: {\n      argNames: ["accountName", "siteId"],\n      name: "getSPUserInformation(accountName=@v, siteId=\'[[siteId]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getUserOneDriveQuotaMax: {\n      argNames: ["accountName"],\n      name: "getUserOneDriveQuotaMax(accountName=@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getUserProfileProperties: {\n      argNames: ["accountName"],\n      name: "getUserProfileProperties(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getUserProfilePropertyFor: {\n      argNames: ["accountName", "propertyName"],\n      name: "getUserProfilePropertyFor(accountName=@v, propertyName=\'[[propertyName]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    hardDeleteUserProfile: {\n      argNames: ["accountName", "userId"],\n      name: "hardDeleteUserProfile(accountName=@v, userId=\'[[userId]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    hideSuggestion: {\n      argNames: ["accountName"],\n      name: "hideSuggestion(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    removeSPUserInformation: {\n      argNames: ["accountName", "siteId", "redactName"],\n      name: "removeSPUserInformation(accountName=@v, siteId=\'[[siteId]]\', redactName=\'[[redactName]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    resetUserOneDriveQuotaToDefault: {\n      argNames: ["accountName"],\n      name: "resetUserOneDriveQuotaToDefault(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.PostReplace\n    },\n    setMultiValuedProfileProperty: {\n      argNames: ["accountName", "propertyName", "propertyValues"],\n      name: "setMultiValuedProfileProperty(accountName=@v, propertyName=\'[[propertyName]]\', propertyValues=\'[[propertyValues]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    setMyProfilePicture: {\n      argNames: ["picture"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setSingleValueProfileProperty: {\n      argNames: ["accountName", "propertyName", "propertyValue"],\n      name: "setSingleValueProfileProperty(accountName=@v, propertyName=\'[[propertyName]]\', propertyValue=\'[[propertyValue]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    setUserOneDriveQuota: {\n      argNames: ["accountName", "newQuota", "newQuotaWarning"],\n      name: "setUserOneDriveQuota(accountName=@v, newQuota=\'[[newQuota]]\', newQuotaWarning=\'[[newQuotaWarning]]\')?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    stopFollowing: {\n      argNames: ["accountName"],\n      name: "stopFollowing(@v)?@v=\'[[accountName]]\'",\n      requestType: utils_1.RequestType.PostWithArgsInQSAsVar\n    },\n    stopFollowingTag: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.UserProfiles.PersonalCache": {\n    deleteCacheItemsAsync: {\n      argNames: ["cacheItems"],\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteCacheItemsAsync2: {\n      argNames: ["cacheItems", "mySiteUrl"],\n      requestType: utils_1.RequestType.Delete\n    },\n    dispose: {},\n    loadUserProfile: {\n      argNames: ["email"]\n    },\n    readCache: {\n      argNames: ["folderPath"]\n    },\n    readCache2: {\n      argNames: ["folderPath", "mySiteUrl"]\n    },\n    readCacheOrCreate: {\n      argNames: ["folderPath", "requiredCacheKeys", "createIfMissing"]\n    },\n    readCacheOrCreate2: {\n      argNames: ["folderPath", "requiredCacheKeys", "createIfMissing", "mySiteUrl"]\n    },\n    readCacheOrCreateOrderById: {\n      argNames: ["folderPath", "requiredCacheKeys", "createIfMissing"]\n    },\n    readCacheOrCreateOrderById2: {\n      argNames: ["folderPath", "requiredCacheKeys", "createIfMissing", "mySiteUrl"]\n    },\n    writeCache: {\n      argNames: ["cacheItems"]\n    },\n    writeCache2: {\n      argNames: ["cacheItems", "mySiteUrl"]\n    }\n  },\n  "SP.UserProfiles.ProfileImageStore": {\n    saveUploadedFile: {\n      argNames: ["profileType", "fileNamePrefix", "isFeedAttachment", "clientFilePath", "fileSize", "fileStream"]\n    }\n  },\n  "SP.UserProfiles.ProfileLoader": {\n    createPersonalSiteEnqueueBulk: {\n      argNames: ["emailIDs"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getUserProfile: {\n      requestType: utils_1.RequestType.Post,\n      returnType: "SP.UserProfiles.UserProfile"\n    }\n  },\n  "SP.UserProfiles.UserProfile": {\n    properties: ["PersonalSite|site"],\n    createPersonalSite: {\n      argNames: ["lcid"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    createPersonalSiteEnque: {\n      argNames: ["isInteractive"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    createPersonalSiteFromWorkItem: {\n      argNames: ["workItemType"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setMySiteFirstRunExperience: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    shareAllSocialData: {\n      argNames: ["shareAll"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.UserProfiles.UserProfilePropertiesForUser": {\n    getPropertyNames: {}\n  },\n  "SP.UserResource": {\n    getResourceEntries: {},\n    getValueForUICulture: {\n      argNames: ["cultureName"]\n    },\n    setValueForUICulture: {\n      argNames: ["cultureName", "value"]\n    }\n  },\n  "SP.UserSolution.Collection": {\n    add: {\n      argNames: ["solutionGalleryItemId"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Utilities.ThemeManager": {\n    addTenantTheme: {\n      argNames: ["name", "themeJson"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    applyTheme: {\n      argNames: ["name", "themeJson"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    deleteTenantTheme: {\n      argNames: ["name"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getAvailableThemes: {},\n    getHideDefaultThemes: {},\n    getTenantTheme: {\n      argNames: ["name"],\n      requestType: utils_1.RequestType.GetWithArgsInBody\n    },\n    getTenantThemingOptions: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    setHideDefaultThemes: {\n      argNames: ["hideDefaultThemes"]\n    },\n    updateTenantTheme: {\n      argNames: ["name", "themeJson"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  "SP.View": {\n    properties: ["ViewFields|SP.ViewFieldCollection"],\n    addToSpotlight: {\n      argNames: ["itemId", "folderPath", "afterItemId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    removeFromSpotlight: {\n      argNames: ["itemId", "folderPath"]\n    },\n    renderAsHtml: {},\n    setViewXml: {\n      argNames: ["viewXml"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.View",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.View.Collection": {\n    add: {\n      argNames: ["properties"],\n      metadataType: "SP.View",\n      name: "",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getById: {\n      argNames: ["guidId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.View"\n    },\n    getByTitle: {\n      argNames: ["strTitle"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.View"\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.ViewFieldCollection": {\n    addViewField: {\n      argNames: ["strField"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    moveViewFieldTo: {\n      argNames: ["field", "index"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    removeAllViewFields: {\n      requestType: utils_1.RequestType.Post\n    },\n    removeViewField: {\n      argNames: ["strField"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    }\n  },\n  "SP.Web": {\n    properties: ["AllProperties|SP.PropertyValues.Collection", "AppTiles", "AssociatedMemberGroup|SP.Group", "AssociatedOwnerGroup|SP.Group", "AssociatedVisitorGroup|SP.Group", "Author|SP.User", "AvailableContentTypes|SP.ContentType.Collection", "AvailableFields|SP.Field.Collection", "ClientWebParts", "ContentTypes|SP.ContentType.Collection|(\'[Name]\')|SP.ContentType", "CurrentUser|SP.User", "DataLeakagePreventionStatusInfo", "DescriptionResource", "EffectiveBasePermissions", "EventReceivers|SP.EventReceiverDefinition.Collection|(\'[Name]\')|SP.EventReceiverDefinition", "Features|SP.Feature.Collection|(\'[Name]\')|SP.Feature", "Fields|SP.Field.Collection|/getByInternalNameOrTitle(\'[Name]\')|SP.Field", "FirstUniqueAncestorSecurableObject", "Folders|SP.Folder.Collection|/getByUrl(\'[Name]\')|SP.Folder", "Lists|SP.List.Collection|/getByTitle(\'[Name]\')|SP.List", "ListTemplates|SP.ListTemplate.Collection|(\'[Name]\')|SP.ListTemplate", "Navigation|SP.Navigation", "ParentWeb", "PushNotificationSubscribers", "RecycleBin", "RegionalSettings", "RoleAssignments|SP.RoleAssignment.Collection|([Name])|SP.RoleAssignment", "RoleDefinitions|SP.RoleDefinition.Collection|/getByName(\'[Name]\')|SP.RoleDefinition", "RootFolder|SP.Folder|/getByUrl(\'[Name]\')|SP.File", "SiteCollectionAppCatalog|sitecollectionappcatalog", "SiteGroups|SP.Group.Collection|/getByName(\'[Name]\')|SP.Group", "SiteUserInfoList", "SiteUsers|SP.User.Collection|/getById([Name])|SP.User", "TenantAppCatalog|tenantappcatalog", "ThemeInfo", "TitleResource", "UserCustomActions|SP.UserCustomAction.Collection|(\'[Name]\')|SP.UserCustomAction", "WebInfos|SP.WebInformation.Collection", "Webs|SP.Web.Collection", "WorkflowAssociations", "WorkflowTemplates"],\n    addCrossFarmMessage: {\n      argNames: ["messagePayloadBase64"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addPlaceholderUser: {\n      argNames: ["listId", "placeholderText"]\n    },\n    addSupportedUILanguage: {\n      argNames: ["lcid"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    addinPermissions: {\n      argNames: ["addins"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    applyTheme: {\n      argNames: ["colorPaletteUrl", "fontSchemeUrl", "backgroundImageUrl", "shareGenerated"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    applyWebTemplate: {\n      argNames: ["webTemplate"],\n      requestType: utils_1.RequestType.PostWithArgsInQSAsVar\n    },\n    availableAddins: {\n      argNames: ["serverRelativeUrls", "urls"]\n    },\n    breakRoleInheritance: {\n      argNames: ["copyRoleAssignments", "clearSubscopes"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    consentToPowerPlatform: {},\n    createDefaultAssociatedGroups: {\n      argNames: ["userLogin", "userLogin2", "groupNameSeed"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    createGroupBasedEnvironment: {},\n    createSitePage: {\n      argNames: ["pageMetaData"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    defaultDocumentLibrary: {},\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    doesPushNotificationSubscriberExist: {\n      argNames: ["deviceAppInstanceId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    doesUserHavePermissions: {\n      argNames: ["high", "low"],\n      requestType: utils_1.RequestType.GetWithArgsInQSAsVar\n    },\n    ensureEduClassSetup: {\n      argNames: ["byPassForAutomation"]\n    },\n    ensureSolutioningEnvironment: {\n      argNames: ["ensureCdsInstance"]\n    },\n    ensureTenantAppCatalog: {\n      argNames: ["callerId"]\n    },\n    ensureUser: {\n      argNames: ["logonName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    ensureUserByObjectId: {\n      argNames: ["objectId", "tenantId", "principalType"]\n    },\n    executeRemoteLOB: {\n      argNames: ["inputStream"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    getACSServicePrincipals: {\n      argNames: ["appIds"]\n    },\n    getAdaptiveCardExtensions: {\n      argNames: ["includeErrors", "project"]\n    },\n    getAddinPrincipalsHavingPermissionsInSites: {\n      argNames: ["serverRelativeUrls", "urls"]\n    },\n    getAddinUninstallJobDetail: {\n      argNames: ["jobId", "serverRelativeUrl", "url"]\n    },\n    getAllClientSideComponents: {\n      argNames: ["languages"],\n      requestType: utils_1.RequestType.Post\n    },\n    getAppBdcCatalog: {\n      requestType: utils_1.RequestType.Post\n    },\n    getAppBdcCatalogForAppInstance: {\n      argNames: ["appInstanceId"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    getAppInstanceById: {\n      argNames: ["appInstanceId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getAppInstancesByProductId: {\n      argNames: ["productId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getAvailableWebTemplates: {\n      argNames: ["lcid", "doIncludeCrossLanguage"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    getCatalog: {\n      argNames: ["typeCatalog"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.List"\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getClientSideComponents: {\n      argNames: ["components", "project"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getClientSideComponentsByComponentType: {\n      argNames: ["componentTypesString", "supportedHostTypeValue", "includeErrors", "project", "includeManifestActivatedTime"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getClientSideComponentsById: {\n      argNames: ["componentIds", "project"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getClientSideWebParts: {\n      argNames: ["includeErrors", "project"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getCustomListTemplates: {},\n    getEntity: {\n      argNames: ["namespace", "name"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getFileByGuestUrl: {\n      argNames: ["guestUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByGuestUrlEnsureAccess: {\n      argNames: ["guestUrl", "ensureAccess"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByGuestUrlExtended: {\n      argNames: ["guestUrl", "requestSettings"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileById: {\n      argNames: ["uniqueId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByLinkingUrl: {\n      argNames: ["linkingUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByServerRelativePath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByServerRelativeUrl: {\n      argNames: ["serverRelativeUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByStreamFrameUrl: {\n      argNames: ["streamFrameUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFileByUrl: {\n      argNames: ["fileUrl"],\n      name: "getFileByUrl(@url)?@url=\'[[fileUrl]]\'",\n      requestType: utils_1.RequestType.GetReplace,\n      returnType: "SP.File"\n    },\n    getFileByWOPIFrameUrl: {\n      argNames: ["wopiFrameUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.File"\n    },\n    getFolderByGuestUrl: {\n      argNames: ["guestUrl", "ensureAccess"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getFolderByGuestUrlExtended: {\n      argNames: ["guestUrl", "requestSettings"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getFolderById: {\n      argNames: ["uniqueId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getFolderByServerRelativePath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getFolderByServerRelativeUrl: {\n      argNames: ["serverRelativeUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.Folder"\n    },\n    getGroupBasedEnvironment: {},\n    getList: {\n      argNames: ["strUrl"],\n      name: "getList(@l)?@l=\'[[strUrl]]\'",\n      requestType: utils_1.RequestType.GetReplace,\n      returnType: "SP.List"\n    },\n    getListByTitle: {\n      argNames: ["title"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.List"\n    },\n    getListItem: {\n      argNames: ["strUrl"],\n      name: "getListItem(@l)?@l=\'[[strUrl]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getListItemByResourceId: {\n      argNames: ["resourceId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getListItemUsingPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getListOperation: {\n      argNames: ["listId", "operationId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getListUsingPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getLists: {\n      argNames: ["getListsParams"]\n    },\n    getNewsList: {\n      argNames: ["allowCreate"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getPushNotificationSubscriber: {\n      argNames: ["deviceAppInstanceId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getPushNotificationSubscribersByArgs: {\n      argNames: ["customArgs"],\n      requestType: utils_1.RequestType.GetWithArgsInQSAsVar\n    },\n    getPushNotificationSubscribersByUser: {\n      argNames: ["userName"],\n      requestType: utils_1.RequestType.GetWithArgsInQSAsVar\n    },\n    getRecycleBinItems: {\n      argNames: ["pagingInfo", "rowLimit", "isAscending", "orderBy", "itemState"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getRecycleBinItemsByQueryInfo: {\n      argNames: ["IsAscending", "ItemState", "OrderBy", "PagingInfo", "RowLimit", "ShowOnlyMyItems"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getRegionalDateTimeSchema: {},\n    getSPAppContextAsStream: {},\n    getSharingLinkData: {\n      argNames: ["linkUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getSitePageCopyToStatus: {\n      argNames: ["workItemId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getSitePageMoveStatus: {\n      argNames: ["workItemId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getSiteUserIncludingDeletedByPuid: {\n      argNames: ["puid"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getStorageEntity: {\n      argNames: ["key"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getSubwebsFilteredForCurrentUser: {\n      argNames: ["nWebTemplateFilter", "nConfigurationFilter"],\n      requestType: utils_1.RequestType.GetWithArgs,\n      returnType: "SP.WebInformation.Collection"\n    },\n    getUserById: {\n      argNames: ["userId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly,\n      returnType: "SP.User"\n    },\n    getUserEffectivePermissions: {\n      argNames: ["userName"],\n      name: "getUserEffectivePermissions(@user)?@user=\'[[userName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getViewFromPath: {\n      argNames: ["DecodedUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    getViewFromUrl: {\n      argNames: ["listUrl"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    hubSiteData: {\n      argNames: ["forceRefresh"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    hubSiteDataAsStream: {\n      argNames: ["forceRefresh"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    incrementSiteClientTag: {},\n    listPowerPlatformUserDetails: {},\n    loadAndInstallApp: {\n      argNames: ["appPackageStream"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    loadAndInstallAppInSpecifiedLocale: {\n      argNames: ["appPackageStream", "installationLocaleLCID"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    loadApp: {\n      argNames: ["appPackageStream", "installationLocaleLCID"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    mapToIcon: {\n      argNames: ["fileName", "progId", "size"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    markReplyUrisUpdated: {},\n    pageContextCore: {},\n    pageContextInfo: {\n      argNames: ["includeODBSettings", "emitNavigationInfo"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    parseDateTime: {\n      argNames: ["value", "displayFormat", "calendarType"],\n      requestType: utils_1.RequestType.GetWithArgs\n    },\n    processExternalNotification: {\n      argNames: ["stream"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    registerPushNotificationSubscriber: {\n      argNames: ["deviceAppInstanceId", "serviceToken"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    removeStorageEntity: {\n      argNames: ["key"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    removeSupportedUILanguage: {\n      argNames: ["lcid"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    resetRoleInheritance: {\n      requestType: utils_1.RequestType.Post\n    },\n    setAccessRequestSiteDescriptionAndUpdate: {\n      argNames: ["description"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setChromeOptions: {\n      argNames: ["headerLayout", "headerEmphasis", "megaMenuEnabled", "footerEnabled", "footerLayout", "footerEmphasis", "hideTitleInHeader", "logoAlignment", "horizontalQuickLaunch", "headerColorIndexInLightMode", "headerColorIndexInDarkMode", "footerColorIndexInLightMode", "footerColorIndexInDarkMode"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setDefaultNewPageTemplateId: {\n      argNames: ["defaultNewPageTemplateId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setGlobalNavSettings: {\n      argNames: ["title", "source"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setStorageEntity: {\n      argNames: ["key", "value", "description", "comments"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    setUseAccessRequestDefaultAndUpdate: {\n      argNames: ["useAccessRequestDefault"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    syncFlowInstances: {\n      argNames: ["targetWebUrl"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    syncFlowTemplates: {\n      argNames: ["category"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    syncHubSiteTheme: {\n      requestType: utils_1.RequestType.Post\n    },\n    syncTeamsComponent: {\n      argNames: ["teamsComponent"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    uninstallAddins: {\n      argNames: ["uninstallAddins"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    unregisterPushNotificationSubscriber: {\n      argNames: ["deviceAppInstanceId"],\n      requestType: utils_1.RequestType.PostWithArgsValueOnly\n    },\n    unsetIsEduClassProvisionPending: {},\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.Web",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    uploadImage: {\n      argNames: ["listTitle", "imageName", "contentStream", "listId", "itemId", "fieldId", "overwrite"],\n      name: "uploadImage(listTitle=guid\'[[listTitle]]\', imageName=[[imageName]], listId=[[listId]], itemId=[[itemId]], fieldId=[[fieldId]], overwrite=[[overwrite]])",\n      requestType: utils_1.RequestType.PostReplaceWithData\n    }\n  },\n  "SP.Web.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.WebCreationInformation",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WebInformation.Collection": {\n    add: {\n      argNames: ["parameters"],\n      metadataType: "SP.WebInfoCreationInformation",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getById: {\n      argNames: ["id"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WebParts.LimitedWebPartManager": {\n    properties: ["WebParts|SP.WebParts.WebPartDefinition.Collection|/([Name])|SP.WebParts.WebPartDefinition"],\n    exportWebPart: {\n      argNames: ["webPartId"],\n      requestType: utils_1.RequestType.GetWithArgsValueOnly\n    },\n    importWebPart: {\n      argNames: ["webPartXml"],\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WebParts.WebPartDefinition": {\n    closeWebPart: {},\n    deleteWebPart: {},\n    moveWebPartTo: {\n      argNames: ["zoneID", "zoneIndex"]\n    },\n    openWebPart: {\n      requestType: utils_1.RequestType.Get\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    saveWebPartChanges: {}\n  },\n  "SP.WebParts.WebPartDefinition.Collection": {\n    getByControlId: {\n      argNames: ["controlId"]\n    },\n    getById: {\n      argNames: ["id"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WebTemplate.Collection": {\n    getByName: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WorkManagement.OM.BaseSession": {\n    addAttributeToTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    beginCacheRefresh: {},\n    beginExchangeSync: {},\n    createPersonalTaskAndPromoteToProviderTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey"]\n    },\n    createTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey", "editUrl"]\n    },\n    deleteTask: {\n      argNames: ["taskKey"]\n    },\n    getCalloutInfo: {\n      argNames: ["taskKey"]\n    },\n    getRefreshHealthInfo: {},\n    getRefreshHistory: {\n      argNames: ["since"]\n    },\n    getRefreshStatus: {\n      argNames: ["refreshId"]\n    },\n    isExchangeJobPending: {},\n    pinTask: {\n      argNames: ["taskKey"]\n    },\n    promotePersonalTaskToProviderTaskInLocation: {\n      argNames: ["taskKey", "locationId"]\n    },\n    readAllNonTaskData: {},\n    refreshSingleTask: {\n      argNames: ["taskKey"]\n    },\n    removeAttributeFromTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    removePinOnTask: {\n      argNames: ["taskKey"]\n    },\n    updateTaskWithLocalizedValue: {\n      argNames: ["taskKey", "field", "value"]\n    }\n  },\n  "SP.WorkManagement.OM.LocationOrientedSortableSession": {\n    addAttributeToTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    beginCacheRefresh: {},\n    beginExchangeSync: {},\n    createPersonalTaskAndPromoteToProviderTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey"]\n    },\n    createTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey", "editUrl"]\n    },\n    deleteTask: {\n      argNames: ["taskKey"]\n    },\n    getCalloutInfo: {\n      argNames: ["taskKey"]\n    },\n    getRefreshHealthInfo: {},\n    getRefreshHistory: {\n      argNames: ["since"]\n    },\n    getRefreshStatus: {\n      argNames: ["refreshId"]\n    },\n    isExchangeJobPending: {},\n    movePersonalTaskToLocation: {\n      argNames: ["taskKey", "newLocationKey"]\n    },\n    pinTask: {\n      argNames: ["taskKey"]\n    },\n    promotePersonalTaskToProviderTaskInLocation: {\n      argNames: ["taskKey", "locationId"]\n    },\n    readAllNonTaskData: {},\n    refreshSingleTask: {\n      argNames: ["taskKey"]\n    },\n    removeAttributeFromTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    removePinOnTask: {\n      argNames: ["taskKey"]\n    },\n    updateTaskWithLocalizedValue: {\n      argNames: ["taskKey", "field", "value"]\n    }\n  },\n  "SP.WorkManagement.OM.LocationOrientedUserOrderedSession": {\n    addAttributeToTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    beginCacheRefresh: {},\n    beginExchangeSync: {},\n    createPersonalTaskAndPromoteToProviderTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey"]\n    },\n    createTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey", "editUrl"]\n    },\n    deleteTask: {\n      argNames: ["taskKey"]\n    },\n    getCalloutInfo: {\n      argNames: ["taskKey"]\n    },\n    getRefreshHealthInfo: {},\n    getRefreshHistory: {\n      argNames: ["since"]\n    },\n    getRefreshStatus: {\n      argNames: ["refreshId"]\n    },\n    isExchangeJobPending: {},\n    movePersonalTaskToLocation: {\n      argNames: ["taskKey", "newLocationKey"]\n    },\n    pinTask: {\n      argNames: ["taskKey"]\n    },\n    promotePersonalTaskToProviderTaskInLocation: {\n      argNames: ["taskKey", "locationId"]\n    },\n    readAllNonTaskData: {},\n    refreshSingleTask: {\n      argNames: ["taskKey"]\n    },\n    removeAttributeFromTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    removePinOnTask: {\n      argNames: ["taskKey"]\n    },\n    reorderTask: {\n      argNames: ["taskKey", "newAfterTaskKey"]\n    },\n    updateTaskWithLocalizedValue: {\n      argNames: ["taskKey", "field", "value"]\n    }\n  },\n  "SP.WorkManagement.OM.SortableSession": {\n    addAttributeToTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    beginCacheRefresh: {},\n    beginExchangeSync: {},\n    createPersonalTaskAndPromoteToProviderTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey"]\n    },\n    createTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey", "editUrl"]\n    },\n    deleteTask: {\n      argNames: ["taskKey"]\n    },\n    getCalloutInfo: {\n      argNames: ["taskKey"]\n    },\n    getRefreshHealthInfo: {},\n    getRefreshHistory: {\n      argNames: ["since"]\n    },\n    getRefreshStatus: {\n      argNames: ["refreshId"]\n    },\n    isExchangeJobPending: {},\n    pinTask: {\n      argNames: ["taskKey"]\n    },\n    promotePersonalTaskToProviderTaskInLocation: {\n      argNames: ["taskKey", "locationId"]\n    },\n    readAllNonTaskData: {},\n    refreshSingleTask: {\n      argNames: ["taskKey"]\n    },\n    removeAttributeFromTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    removePinOnTask: {\n      argNames: ["taskKey"]\n    },\n    updateTaskWithLocalizedValue: {\n      argNames: ["taskKey", "field", "value"]\n    }\n  },\n  "SP.WorkManagement.OM.SortableSessionManager": {\n    createLocationOrientedSession: {},\n    createSession: {}\n  },\n  "SP.WorkManagement.OM.UserOrderedSession": {\n    addAttributeToTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    beginCacheRefresh: {},\n    beginExchangeSync: {},\n    createPersonalTaskAndPromoteToProviderTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey"]\n    },\n    createTask: {\n      argNames: ["taskName", "description", "localizedStartDate", "localizedDueDate", "completed", "pinned", "locationKey", "editUrl"]\n    },\n    deleteTask: {\n      argNames: ["taskKey"]\n    },\n    getCalloutInfo: {\n      argNames: ["taskKey"]\n    },\n    getRefreshHealthInfo: {},\n    getRefreshHistory: {\n      argNames: ["since"]\n    },\n    getRefreshStatus: {\n      argNames: ["refreshId"]\n    },\n    isExchangeJobPending: {},\n    pinTask: {\n      argNames: ["taskKey"]\n    },\n    promotePersonalTaskToProviderTaskInLocation: {\n      argNames: ["taskKey", "locationId"]\n    },\n    readAllNonTaskData: {},\n    refreshSingleTask: {\n      argNames: ["taskKey"]\n    },\n    removeAttributeFromTask: {\n      argNames: ["taskKey", "attribute"]\n    },\n    removePinOnTask: {\n      argNames: ["taskKey"]\n    },\n    reorderTask: {\n      argNames: ["taskKey", "newAfterTaskKey"]\n    },\n    updateTaskWithLocalizedValue: {\n      argNames: ["taskKey", "field", "value"]\n    }\n  },\n  "SP.WorkManagement.OM.UserOrderedSessionManager": {\n    createLocationOrientedSession: {},\n    createSession: {}\n  },\n  "SP.WorkManagement.OM.UserSettingsManager": {\n    getAllLocations: {},\n    getExchangeSyncInfo: {},\n    getImportantLocations: {},\n    getLocations: {\n      argNames: ["locationsId"]\n    },\n    getPersistedProperties: {},\n    getUserSettings: {},\n    isExchangeJobPending: {},\n    optIntoExchangeSync: {},\n    optOutOfExchangeSync: {}\n  },\n  "SP.Workflow.SPWorkflowTask": {\n    addThumbnailFieldData: {\n      argNames: ["imageStream", "imageName", "fieldInternalName", "lockId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    archive: {},\n    attachImage: {\n      argNames: ["imageStream", "imageName", "fieldInternalName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    breakRoleInheritance: {\n      argNames: ["copyRoleAssignments", "clearSubscopes"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    deleteWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getChanges: {\n      argNames: ["query"],\n      metadataType: "SP.ChangeQuery",\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getComments: {\n      returnType: "Microsoft.SharePoint.Comments.comment.Collection"\n    },\n    getUserEffectivePermissions: {\n      argNames: ["userName"],\n      name: "getUserEffectivePermissions(@user)?@user=\'[[userName]]\'",\n      requestType: utils_1.RequestType.GetReplace\n    },\n    getVersions: {\n      argNames: ["getVersionsParams"]\n    },\n    getWOPIFrameUrl: {\n      argNames: ["action"],\n      requestType: utils_1.RequestType.PostWithArgsInQS\n    },\n    mediaServiceUpdate: {\n      argNames: ["parameters"]\n    },\n    mediaServiceUpdateV2: {\n      argNames: ["parameters", "eventFiringEnabled"]\n    },\n    overridePolicyTip: {\n      argNames: ["userAction", "justification"]\n    },\n    parseAndSetFieldValue: {\n      argNames: ["fieldName", "value"]\n    },\n    recycle: {\n      requestType: utils_1.RequestType.Post\n    },\n    recycleWithParameters: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resetRoleInheritance: {},\n    setCommentsDisabled: {\n      argNames: ["value"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setComplianceTag: {\n      argNames: ["complianceTag", "isTagPolicyHold", "isTagPolicyRecord", "isEventBasedTag", "isTagSuperLock", "isUnlockedAsDefault"]\n    },\n    setComplianceTagWithExplicitMetasUpdate: {\n      argNames: ["complianceTag", "complianceFlags", "complianceTagWrittenTime", "userEmailAddress"]\n    },\n    setComplianceTagWithHold: {\n      argNames: ["complianceTag"]\n    },\n    setComplianceTagWithMetaInfo: {\n      argNames: ["complianceTag", "blockDelete", "blockEdit", "complianceTagWrittenTime", "userEmailAddress", "isTagSuperLock", "isRecordUnlockedAsDefault"]\n    },\n    setComplianceTagWithNoHold: {\n      argNames: ["complianceTag"]\n    },\n    setComplianceTagWithRecord: {\n      argNames: ["complianceTag"]\n    },\n    systemUpdate: {},\n    unarchive: {},\n    update: {\n      argNames: ["properties"],\n      metadataType: "SP.Workflow.SPWorkflowTask",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    },\n    updateEx: {\n      argNames: ["parameters"]\n    },\n    updateOverwriteVersion: {},\n    validateUpdateFetchListItem: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "View", "RootFolder"]\n    },\n    validateUpdateFetchListItemInFolder: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "rootFolder"]\n    },\n    validateUpdateListItem: {\n      argNames: ["formValues", "bNewDocumentUpdate", "checkInComment", "datesInUTC", "numberInInvariantCulture", "sharedLockId"]\n    }\n  },\n  "SP.Workflow.WorkflowAssociation": {\n    "delete": {\n      requestType: utils_1.RequestType.Delete\n    },\n    update: {\n      metadataType: "",\n      name: "",\n      requestMethod: "MERGE",\n      requestType: utils_1.RequestType.PostBodyNoArgs\n    }\n  },\n  "SP.Workflow.WorkflowAssociation.Collection": {\n    add: {\n      argNames: ["parameters"]\n    },\n    getById: {\n      argNames: ["associationId"]\n    },\n    getByName: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.Workflow.WorkflowTemplate.Collection": {\n    getById: {\n      argNames: ["templateId"]\n    },\n    getByName: {\n      argNames: ["name"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WorkflowServices.InteropService": {\n    cancelWorkflow: {\n      argNames: ["instanceId"]\n    },\n    disableEvents: {\n      argNames: ["listId", "itemGuid"]\n    },\n    enableEvents: {\n      argNames: ["listId", "itemGuid"]\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    startWorkflow: {\n      argNames: ["associationName", "correlationId", "listId", "itemGuid", "workflowParameters"]\n    }\n  },\n  "SP.WorkflowServices.WorkflowDefinition": {\n    setProperty: {\n      argNames: ["propertyName", "value"]\n    }\n  },\n  "SP.WorkflowServices.WorkflowDefinition.Collection": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sort: {}\n  },\n  "SP.WorkflowServices.WorkflowDeploymentService": {\n    deleteCollateral: {\n      argNames: ["workflowDefinitionId", "leafFileName"]\n    },\n    deleteDefinition: {\n      argNames: ["definitionId"]\n    },\n    deprecateDefinition: {\n      argNames: ["definitionId"]\n    },\n    enumerateDefinitions: {\n      argNames: ["publishedOnly"]\n    },\n    enumerateIntegratedApps: {},\n    getActivitySignatures: {\n      argNames: ["lastChanged"]\n    },\n    getCollateralUri: {\n      argNames: ["workflowDefinitionId", "leafFileName"]\n    },\n    getDefinition: {\n      argNames: ["definitionId"]\n    },\n    isIntegratedApp: {},\n    packageDefinition: {\n      argNames: ["definitionId", "packageDefaultFilename", "packageTitle", "packageDescription"]\n    },\n    publishDefinition: {\n      argNames: ["definitionId"]\n    },\n    saveCollateral: {\n      argNames: ["workflowDefinitionId", "leafFileName", "fileContent"]\n    },\n    validateActivity: {\n      argNames: ["activityXaml"]\n    }\n  },\n  "SP.WorkflowServices.WorkflowInstanceService": {\n    enumerateInstancesForListItem: {\n      argNames: ["listId", "itemId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateInstancesForListItemWithOffset: {\n      argNames: ["listId", "itemId", "offset"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateInstancesForSite: {\n      requestType: utils_1.RequestType.Post\n    },\n    enumerateInstancesForSiteWithOffset: {\n      argNames: ["offset"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getInstance: {\n      argNames: ["instanceId"],\n      requestType: utils_1.RequestType.Get\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    startWorkflowOnListItemBySubscriptionId: {\n      argNames: ["subscriptionId", "itemId", "payload"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  },\n  "SP.WorkflowServices.WorkflowMessagingService": {\n    publishEvent: {\n      argNames: ["eventSourceId", "eventName", "payload"]\n    }\n  },\n  "SP.WorkflowServices.WorkflowServicesManager": {\n    getWorkflowDeploymentService: {},\n    getWorkflowInstanceService: {},\n    getWorkflowInteropService: {},\n    getWorkflowSubscriptionService: {},\n    isIntegratedApp: {},\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  "SP.WorkflowServices.WorkflowSubscription": {\n    getExternalVariable: {\n      argNames: ["name"]\n    },\n    setExternalVariable: {\n      argNames: ["name", "value"]\n    },\n    setProperty: {\n      argNames: ["name", "value"]\n    }\n  },\n  "SP.WorkflowServices.WorkflowSubscription.Collection": {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sort: {}\n  },\n  "SP.WorkflowServices.WorkflowSubscriptionService": {\n    deleteSubscription: {\n      argNames: ["subscriptionId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateSubscriptions: {\n      requestType: utils_1.RequestType.Post\n    },\n    enumerateSubscriptionsByDefinition: {\n      argNames: ["definitionId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateSubscriptionsByEventSource: {\n      argNames: ["eventSourceId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateSubscriptionsByList: {\n      argNames: ["listId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateSubscriptionsByListAndParentContentType: {\n      argNames: ["listId", "parentContentTypeId", "includeNoContentTypeSpecified"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    enumerateSubscriptionsByListWithContentType: {\n      argNames: ["listId", "includeContentTypeSpecified"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    getSubscription: {\n      argNames: ["subscriptionId"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    registerInterestInHostWebList: {\n      argNames: ["listId", "eventName"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    registerInterestInList: {\n      argNames: ["listId", "eventName"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    unregisterInterestInHostWebList: {\n      argNames: ["listId", "eventName"],\n      requestType: utils_1.RequestType.PostWithArgs\n    },\n    unregisterInterestInList: {\n      argNames: ["listId", "eventName"],\n      requestType: utils_1.RequestType.PostWithArgs\n    }\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/def.js?')},"./build/mapper/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Mapper_Custom = exports.MapperV2 = exports.Mapper = void 0;\n// TO DO:\n// 1) Merge mapper files into mapper.ts file\n// 2) Reference the main mapper.ts during the merge, so the reference is still there\n// 3) Update the method adder helper function to reference the mapper using the raw metadata type, use old code as a backup\n// 4) Test if mapper files is still needed (Lots of testing here...), but references will ensure library won\'t break\n// 5) Remove the mapper files and code used as a backup\nvar Mapper_Custom = __webpack_require__(/*! ./custom */ "./build/mapper/custom/index.js");\nexports.Mapper_Custom = Mapper_Custom;\nvar def_1 = __webpack_require__(/*! ./def */ "./build/mapper/def.js");\nObject.defineProperty(exports, "Mapper", ({\n  enumerable: true,\n  get: function get() {\n    return def_1.Mapper;\n  }\n}));\nvar v2_1 = __webpack_require__(/*! ./v2 */ "./build/mapper/v2.js");\nObject.defineProperty(exports, "MapperV2", ({\n  enumerable: true,\n  get: function get() {\n    return v2_1.MapperV2;\n  }\n}));\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/index.js?')},"./build/mapper/v2.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.MapperV2 = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\n/**\n * Mapper for the v2 api.\n */\nexports.MapperV2 = {\n  _case: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  aadUserConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    user: {\n      returnType: "user"\n    }\n  },\n  accessPackage: {\n    properties: ["accessPackagesIncompatibleWith|accessPackages|/[Name]|accessPackage", "assignmentPolicies|accessPackageAssignmentPolicys|/[Name]|accessPackageAssignmentPolicy", "incompatibleAccessPackages|accessPackages|/[Name]|accessPackage", "incompatibleGroups|groups|/[Name]|group", "resourceRoleScopes|accessPackageResourceRoleScopes|/[Name]|accessPackageResourceRoleScope"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackagesIncompatibleWith: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackages"\n    },\n    assignmentPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageAssignmentPolicys"\n    },\n    catalog: {\n      returnType: "accessPackageCatalog"\n    },\n    incompatibleAccessPackages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackages"\n    },\n    incompatibleGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "groups"\n    },\n    resourceRoleScopes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceRoleScopes"\n    },\n    getApplicablePolicyRequirements: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.accessPackageAssignmentRequestRequirements[]"\n    }\n  },\n  accessPackages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackage: {\n      returnType: "accessPackage"\n    },\n    assignmentPolicy: {\n      returnType: "accessPackageAssignmentPolicy"\n    },\n    target: {\n      returnType: "accessPackageSubject"\n    },\n    reprocess: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  accessPackageAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageAssignmentPolicy: {\n    properties: ["customExtensionStageSettings|customExtensionStageSettings|/[Name]|customExtensionStageSetting", "questions|accessPackageQuestions|/[Name]|accessPackageQuestion"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackage: {\n      returnType: "accessPackage"\n    },\n    catalog: {\n      returnType: "accessPackageCatalog"\n    },\n    customExtensionStageSettings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "customExtensionStageSettings"\n    },\n    questions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageQuestions"\n    }\n  },\n  accessPackageAssignmentPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageAssignmentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackage: {\n      returnType: "accessPackage"\n    },\n    assignment: {\n      returnType: "accessPackageAssignment"\n    },\n    requestor: {\n      returnType: "accessPackageSubject"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    reprocess: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resume: {\n      argNames: ["source", "type", "data"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  accessPackageAssignmentRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageAssignmentRequestWorkflowExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageAssignmentWorkflowExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageCatalog: {\n    properties: ["accessPackages|accessPackages|/[Name]|accessPackage", "customWorkflowExtensions|customCalloutExtensions|/[Name]|customCalloutExtension", "resourceRoles|accessPackageResourceRoles|/[Name]|accessPackageResourceRole", "resources|accessPackageResources|/[Name]|accessPackageResource", "resourceScopes|accessPackageResourceScopes|/[Name]|accessPackageResourceScope"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackages"\n    },\n    customWorkflowExtensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "customCalloutExtensions"\n    },\n    resourceRoles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceRoles"\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResources"\n    },\n    resourceScopes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceScopes"\n    }\n  },\n  accessPackageCatalogs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageMultipleChoiceQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageQuestions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResource: {\n    properties: ["roles|accessPackageResourceRoles|/[Name]|accessPackageResourceRole", "scopes|accessPackageResourceScopes|/[Name]|accessPackageResourceScope"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    environment: {\n      returnType: "accessPackageResourceEnvironment"\n    },\n    roles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceRoles"\n    },\n    scopes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceScopes"\n    }\n  },\n  accessPackageResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResourceEnvironment: {\n    properties: ["resources|accessPackageResources|/[Name]|accessPackageResource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResources"\n    }\n  },\n  accessPackageResourceEnvironments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResourceRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    catalog: {\n      returnType: "accessPackageCatalog"\n    },\n    resource: {\n      returnType: "accessPackageResource"\n    }\n  },\n  accessPackageResourceRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResourceRole: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resource: {\n      returnType: "accessPackageResource"\n    }\n  },\n  accessPackageResourceRoles: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResourceRoleScope: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    role: {\n      returnType: "accessPackageResourceRole"\n    },\n    scope: {\n      returnType: "accessPackageResourceScope"\n    }\n  },\n  accessPackageResourceRoleScopes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageResourceScope: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resource: {\n      returnType: "accessPackageResource"\n    }\n  },\n  accessPackageResourceScopes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessPackageSubject: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    connectedOrganization: {\n      returnType: "connectedOrganization"\n    }\n  },\n  accessPackageTextInputQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewHistoryDefinition: {\n    properties: ["instances|accessReviewHistoryInstances|/[Name]|accessReviewHistoryInstance"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    instances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewHistoryInstances"\n    }\n  },\n  accessReviewHistoryDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewHistoryInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    generateDownloadUri: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.accessReviewHistoryInstance"\n    }\n  },\n  accessReviewHistoryInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewInstance: {\n    properties: ["contactedReviewers|accessReviewReviewers|/[Name]|accessReviewReviewer", "decisions|accessReviewInstanceDecisionItems|/[Name]|accessReviewInstanceDecisionItem", "stages|accessReviewStages|/[Name]|accessReviewStage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    contactedReviewers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewReviewers"\n    },\n    decisions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewInstanceDecisionItems"\n    },\n    stages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewStages"\n    },\n    acceptRecommendations: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    applyDecisions: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    batchRecordDecisions: {\n      argNames: ["decision", "justification", "principalId", "resourceId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resetDecisions: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    sendReminder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    stop: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  accessReviewInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewInstanceDecisionItem: {\n    properties: ["insights|governanceInsights|/[Name]|governanceInsight"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    insights: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "governanceInsights"\n    }\n  },\n  accessReviewInstanceDecisionItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewReviewer: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewReviewers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewScheduleDefinition: {\n    properties: ["instances|accessReviewInstances|/[Name]|accessReviewInstance"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    instances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewInstances"\n    },\n    stop: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  accessReviewScheduleDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  accessReviewSet: {\n    properties: ["definitions|accessReviewScheduleDefinitions|/[Name]|accessReviewScheduleDefinition", "historyDefinitions|accessReviewHistoryDefinitions|/[Name]|accessReviewHistoryDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    definitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewScheduleDefinitions"\n    },\n    historyDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewHistoryDefinitions"\n    }\n  },\n  accessReviewStage: {\n    properties: ["decisions|accessReviewInstanceDecisionItems|/[Name]|accessReviewInstanceDecisionItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    decisions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessReviewInstanceDecisionItems"\n    },\n    stop: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  accessReviewStages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  acronym: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  activityBasedTimeoutPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  activityBasedTimeoutPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  activityHistoryItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activity: {\n      returnType: "userActivity"\n    }\n  },\n  activityHistoryItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  addLargeGalleryViewOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  admin: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    edge: {\n      returnType: "edge"\n    },\n    sharepoint: {\n      returnType: "sharepoint"\n    },\n    microsoft365Apps: {\n      returnType: "adminMicrosoft365Apps"\n    },\n    serviceAnnouncement: {\n      returnType: "serviceAnnouncement"\n    },\n    reportSettings: {\n      returnType: "adminReportSettings"\n    },\n    people: {\n      returnType: "peopleAdminSettings"\n    }\n  },\n  adminConsentRequestPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  adminMicrosoft365Apps: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    installationOptions: {\n      returnType: "m365AppsInstallationOptions"\n    }\n  },\n  adminReportSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  administrativeUnit: {\n    properties: ["members|directoryObjects|/[Name]|directoryObject", "scopedRoleMembers|scopedRoleMemberships|/[Name]|scopedRoleMembership", "extensions|extensions|/[Name]|extension"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    scopedRoleMembers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "scopedRoleMemberships"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    }\n  },\n  administrativeUnits: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreement: {\n    properties: ["acceptances|agreementAcceptances|/[Name]|agreementAcceptance", "files|agreementFileLocalizations|/[Name]|agreementFileLocalization"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    acceptances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementAcceptances"\n    },\n    file: {\n      returnType: "agreementFile"\n    },\n    files: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementFileLocalizations"\n    }\n  },\n  agreements: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementAcceptance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementAcceptances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementFile: {\n    properties: ["localizations|agreementFileLocalizations|/[Name]|agreementFileLocalization"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    localizations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementFileLocalizations"\n    }\n  },\n  agreementFileLocalization: {\n    properties: ["versions|agreementFileVersions|/[Name]|agreementFileVersion"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    versions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementFileVersions"\n    }\n  },\n  agreementFileLocalizations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementFileProperties: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementFileVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  agreementFileVersions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  alert: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  alerts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  allowedValue: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  allowedValues: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidCompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidCustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidGeneralDeviceConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidLobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidManagedAppProtection: {\n    properties: ["apps|managedMobileApps|/[Name]|managedMobileApp"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    apps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedMobileApps"\n    },\n    deploymentSummary: {\n      returnType: "managedAppPolicyDeploymentSummary"\n    }\n  },\n  androidManagedAppProtections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidManagedAppRegistration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidStoreApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidWorkProfileCompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidWorkProfileCustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  androidWorkProfileGeneralDeviceConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  anonymousGuestConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appCatalogs: {\n    properties: ["teamsApps|teamsApps|/[Name]|teamsApp"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    teamsApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsApps"\n    }\n  },\n  appConsentApprovalRoute: {\n    properties: ["appConsentRequests|appConsentRequests|/[Name]|appConsentRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appConsentRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appConsentRequests"\n    }\n  },\n  appConsentRequest: {\n    properties: ["userConsentRequests|userConsentRequests|/[Name]|userConsentRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    userConsentRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userConsentRequests"\n    }\n  },\n  appConsentRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appLogCollectionRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createDownloadUrl: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.appLogCollectionDownloadDetails"\n    }\n  },\n  appLogCollectionRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appManagementPolicy: {\n    properties: ["appliesTo|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appliesTo: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    }\n  },\n  appManagementPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appRoleAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appRoleAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appScope: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appleDeviceFeaturesConfigurationBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  appleManagedIdentityProvider: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  applePushNotificationCertificate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    downloadApplePushNotificationCertificateSigningRequest: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "string"\n    }\n  },\n  application: {\n    properties: ["appManagementPolicies|appManagementPolicys|/[Name]|appManagementPolicy", "extensionProperties|extensionPropertys|/[Name]|extensionProperty", "federatedIdentityCredentials|federatedIdentityCredentials|/[Name]|federatedIdentityCredential", "homeRealmDiscoveryPolicies|homeRealmDiscoveryPolicys|/[Name]|homeRealmDiscoveryPolicy", "owners|directoryObjects|/[Name]|directoryObject", "tokenIssuancePolicies|tokenIssuancePolicys|/[Name]|tokenIssuancePolicy", "tokenLifetimePolicies|tokenLifetimePolicys|/[Name]|tokenLifetimePolicy"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appManagementPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appManagementPolicys"\n    },\n    createdOnBehalfOf: {\n      returnType: "directoryObject"\n    },\n    extensionProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensionPropertys"\n    },\n    federatedIdentityCredentials: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "federatedIdentityCredentials"\n    },\n    homeRealmDiscoveryPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "homeRealmDiscoveryPolicys"\n    },\n    owners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    tokenIssuancePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenIssuancePolicys"\n    },\n    tokenLifetimePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenLifetimePolicys"\n    },\n    synchronization: {\n      returnType: "synchronization"\n    },\n    setVerifiedPublisher: {\n      argNames: ["verifiedPublisherId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unsetVerifiedPublisher: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addKey: {\n      argNames: ["keyCredential", "passwordCredential", "proof"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.keyCredential"\n    },\n    addPassword: {\n      argNames: ["passwordCredential"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.passwordCredential"\n    },\n    removeKey: {\n      argNames: ["keyId", "proof"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    removePassword: {\n      argNames: ["keyId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  applicationTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    instantiate: {\n      argNames: ["displayName", "serviceManagementReference"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.applicationServicePrincipal"\n    }\n  },\n  approval: {\n    properties: ["stages|approvalStages|/[Name]|approvalStage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    stages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "approvalStages"\n    }\n  },\n  approvals: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  approvalStage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  approvalStages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  article: {\n    properties: ["indicators|articleIndicators|/[Name]|articleIndicator"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    indicators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "articleIndicators"\n    }\n  },\n  articleIndicator: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  artifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  associatedTeamInfo: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  associatedTeamInfos: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachmentBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachmentBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachmentSession: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attachmentSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attackSimulationOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attackSimulationOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attackSimulationRoot: {\n    properties: ["endUserNotifications|endUserNotifications|/[Name]|endUserNotification", "landingPages|landingPages|/[Name]|landingPage", "loginPages|loginPages|/[Name]|loginPage", "operations|attackSimulationOperations|/[Name]|attackSimulationOperation", "payloads|payloads|/[Name]|payload", "simulationAutomations|simulationAutomations|/[Name]|simulationAutomation", "simulations|simulations|/[Name]|simulation", "trainings|trainings|/[Name]|training"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    endUserNotifications: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "endUserNotifications"\n    },\n    landingPages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "landingPages"\n    },\n    loginPages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "loginPages"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attackSimulationOperations"\n    },\n    payloads: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "payloads"\n    },\n    simulationAutomations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "simulationAutomations"\n    },\n    simulations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "simulations"\n    },\n    trainings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "trainings"\n    }\n  },\n  attendanceRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attendanceRecords: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attributeMappingFunctionSchema: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attributeSet: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  attributeSets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  audioRoutingGroup: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  audioRoutingGroups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  auditEvent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  auditEvents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  auditLogRoot: {\n    properties: ["directoryAudits|directoryAudits|/[Name]|directoryAudit", "provisioning|provisioningObjectSummarys|/[Name]|provisioningObjectSummary", "signIns|signIns|/[Name]|signIn"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    directoryAudits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryAudits"\n    },\n    provisioning: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "provisioningObjectSummarys"\n    },\n    signIns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "signIns"\n    }\n  },\n  authentication: {\n    properties: ["emailMethods|emailAuthenticationMethods|/[Name]|emailAuthenticationMethod", "fido2Methods|fido2AuthenticationMethods|/[Name]|fido2AuthenticationMethod", "methods|authenticationMethods|/[Name]|authenticationMethod", "microsoftAuthenticatorMethods|microsoftAuthenticatorAuthenticationMethods|/[Name]|microsoftAuthenticatorAuthenticationMethod", "operations|longRunningOperations|/[Name]|longRunningOperation", "passwordMethods|passwordAuthenticationMethods|/[Name]|passwordAuthenticationMethod", "phoneMethods|phoneAuthenticationMethods|/[Name]|phoneAuthenticationMethod", "softwareOathMethods|softwareOathAuthenticationMethods|/[Name]|softwareOathAuthenticationMethod", "temporaryAccessPassMethods|temporaryAccessPassAuthenticationMethods|/[Name]|temporaryAccessPassAuthenticationMethod", "windowsHelloForBusinessMethods|windowsHelloForBusinessAuthenticationMethods|/[Name]|windowsHelloForBusinessAuthenticationMethod"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    emailMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "emailAuthenticationMethods"\n    },\n    fido2Methods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "fido2AuthenticationMethods"\n    },\n    methods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethods"\n    },\n    microsoftAuthenticatorMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "microsoftAuthenticatorAuthenticationMethods"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "longRunningOperations"\n    },\n    passwordMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "passwordAuthenticationMethods"\n    },\n    phoneMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "phoneAuthenticationMethods"\n    },\n    softwareOathMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "softwareOathAuthenticationMethods"\n    },\n    temporaryAccessPassMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "temporaryAccessPassAuthenticationMethods"\n    },\n    windowsHelloForBusinessMethods: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsHelloForBusinessAuthenticationMethods"\n    }\n  },\n  authenticationCombinationConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationCombinationConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationConditionApplication: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationContextClassReference: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationContextClassReferences: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationEventListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationEventListeners: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationEventsFlow: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationEventsFlows: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationFlowsPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resetPassword: {\n      argNames: ["newPassword"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.passwordResetResponse"\n    }\n  },\n  authenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodModeDetail: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodModeDetails: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodTarget: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodTargets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationMethodsPolicy: {\n    properties: ["authenticationMethodConfigurations|authenticationMethodConfigurations|/[Name]|authenticationMethodConfiguration"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authenticationMethodConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodConfigurations"\n    }\n  },\n  authenticationMethodsRoot: {\n    properties: ["userRegistrationDetails|userRegistrationDetailss|/[Name]|userRegistrationDetails"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    userRegistrationDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userRegistrationDetailss"\n    },\n    usersRegisteredByFeature: {\n      argNames: ["includedUserTypes", "includedUserRoles"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.userRegistrationFeatureSummary"\n    },\n    usersRegisteredByMethod: {\n      argNames: ["includedUserTypes", "includedUserRoles"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.userRegistrationMethodSummary"\n    }\n  },\n  authenticationStrengthPolicy: {\n    properties: ["combinationConfigurations|authenticationCombinationConfigurations|/[Name]|authenticationCombinationConfiguration"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    combinationConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationCombinationConfigurations"\n    },\n    updateAllowedCombinations: {\n      argNames: ["allowedCombinations"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.updateAllowedCombinationsResult"\n    },\n    usage: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.authenticationStrengthUsage"\n    }\n  },\n  authenticationStrengthPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authenticationStrengthRoot: {\n    properties: ["authenticationMethodModes|authenticationMethodModeDetails|/[Name]|authenticationMethodModeDetail", "policies|authenticationStrengthPolicys|/[Name]|authenticationStrengthPolicy"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authenticationMethodModes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodModeDetails"\n    },\n    policies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationStrengthPolicys"\n    }\n  },\n  authoredNote: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authoredNotes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authorityTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  authorizationPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  azureCommunicationServicesUserConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  azureUsage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    billed: {\n      returnType: "billedUsage"\n    },\n    unbilled: {\n      returnType: "unbilledUsage"\n    }\n  },\n  b2xIdentityUserFlow: {\n    properties: ["identityProviders|identityProviders|/[Name]|identityProvider", "languages|userFlowLanguageConfigurations|/[Name]|userFlowLanguageConfiguration", "userAttributeAssignments|identityUserFlowAttributeAssignments|/[Name]|identityUserFlowAttributeAssignment", "userFlowIdentityProviders|identityProviderBases|/[Name]|identityProviderBase"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    identityProviders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "identityProviders"\n    },\n    languages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userFlowLanguageConfigurations"\n    },\n    userAttributeAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "identityUserFlowAttributeAssignments"\n    },\n    userFlowIdentityProviders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "identityProviderBases"\n    }\n  },\n  b2xIdentityUserFlows: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  backupRestoreRoot: {\n    properties: ["driveInclusionRules|driveProtectionRules|/[Name]|driveProtectionRule", "driveProtectionUnits|driveProtectionUnits|/[Name]|driveProtectionUnit", "exchangeProtectionPolicies|exchangeProtectionPolicys|/[Name]|exchangeProtectionPolicy", "exchangeRestoreSessions|exchangeRestoreSessions|/[Name]|exchangeRestoreSession", "mailboxInclusionRules|mailboxProtectionRules|/[Name]|mailboxProtectionRule", "mailboxProtectionUnits|mailboxProtectionUnits|/[Name]|mailboxProtectionUnit", "oneDriveForBusinessProtectionPolicies|oneDriveForBusinessProtectionPolicys|/[Name]|oneDriveForBusinessProtectionPolicy", "oneDriveForBusinessRestoreSessions|oneDriveForBusinessRestoreSessions|/[Name]|oneDriveForBusinessRestoreSession", "protectionPolicies|protectionPolicyBases|/[Name]|protectionPolicyBase", "protectionUnits|protectionUnitBases|/[Name]|protectionUnitBase", "restorePoints|restorePoints|/[Name]|restorePoint", "restoreSessions|restoreSessionBases|/[Name]|restoreSessionBase", "serviceApps|serviceApps|/[Name]|serviceApp", "sharePointProtectionPolicies|sharePointProtectionPolicys|/[Name]|sharePointProtectionPolicy", "sharePointRestoreSessions|sharePointRestoreSessions|/[Name]|sharePointRestoreSession", "siteInclusionRules|siteProtectionRules|/[Name]|siteProtectionRule", "siteProtectionUnits|siteProtectionUnits|/[Name]|siteProtectionUnit"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    driveInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveProtectionRules"\n    },\n    driveProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveProtectionUnits"\n    },\n    exchangeProtectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "exchangeProtectionPolicys"\n    },\n    exchangeRestoreSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "exchangeRestoreSessions"\n    },\n    mailboxInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailboxProtectionRules"\n    },\n    mailboxProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailboxProtectionUnits"\n    },\n    oneDriveForBusinessProtectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "oneDriveForBusinessProtectionPolicys"\n    },\n    oneDriveForBusinessRestoreSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "oneDriveForBusinessRestoreSessions"\n    },\n    protectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "protectionPolicyBases"\n    },\n    protectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "protectionUnitBases"\n    },\n    restorePoints: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "restorePoints"\n    },\n    restoreSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "restoreSessionBases"\n    },\n    serviceApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceApps"\n    },\n    sharePointProtectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sharePointProtectionPolicys"\n    },\n    sharePointRestoreSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sharePointRestoreSessions"\n    },\n    siteInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteProtectionRules"\n    },\n    siteProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteProtectionUnits"\n    },\n    enable: {\n      argNames: ["appOwnerTenantId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.serviceStatus"\n    }\n  },\n  baseItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createdByUser: {\n      returnType: "user"\n    },\n    lastModifiedByUser: {\n      returnType: "user"\n    }\n  },\n  baseItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  baseItemVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  baseSitePage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  baseSitePages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  billedReconciliation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  billedUsage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  billing: {\n    properties: ["manifests|manifests|/[Name]|manifest", "operations|operations|/[Name]|operation"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    manifests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "manifests"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "operations"\n    },\n    reconciliation: {\n      returnType: "billingReconciliation"\n    },\n    usage: {\n      returnType: "azureUsage"\n    }\n  },\n  billingReconciliation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    billed: {\n      returnType: "billedReconciliation"\n    }\n  },\n  bitlocker: {\n    properties: ["recoveryKeys|bitlockerRecoveryKeys|/[Name]|bitlockerRecoveryKey"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recoveryKeys: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bitlockerRecoveryKeys"\n    }\n  },\n  bitlockerRecoveryKey: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bitlockerRecoveryKeys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingAppointment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingAppointments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingBusiness: {\n    properties: ["appointments|bookingAppointments|/[Name]|bookingAppointment", "calendarView|bookingAppointments|/[Name]|bookingAppointment", "customers|bookingCustomerBases|/[Name]|bookingCustomerBase", "customQuestions|bookingCustomQuestions|/[Name]|bookingCustomQuestion", "services|bookingServices|/[Name]|bookingService", "staffMembers|bookingStaffMemberBases|/[Name]|bookingStaffMemberBase"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appointments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingAppointments"\n    },\n    calendarView: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingAppointments"\n    },\n    customers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingCustomerBases"\n    },\n    customQuestions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingCustomQuestions"\n    },\n    services: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingServices"\n    },\n    staffMembers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingStaffMemberBases"\n    }\n  },\n  bookingBusinesss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCurrency: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCurrencys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCustomQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCustomQuestions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCustomer: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCustomerBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingCustomerBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingService: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingServices: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingStaffMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingStaffMemberBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookingStaffMemberBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bookmark: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  browserSharedCookie: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  browserSharedCookies: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  browserSite: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  browserSites: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  browserSiteList: {\n    properties: ["sharedCookies|browserSharedCookies|/[Name]|browserSharedCookie", "sites|browserSites|/[Name]|browserSite"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sharedCookies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "browserSharedCookies"\n    },\n    sites: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "browserSites"\n    },\n    publish: {\n      argNames: ["revision", "sites", "sharedCookies"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.browserSiteList"\n    }\n  },\n  browserSiteLists: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  builtInIdentityProvider: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  bulkUpload: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  calendar: {\n    properties: ["calendarPermissions|calendarPermissions|/[Name]|calendarPermission", "calendarView|events|/[Name]|event", "events|events|/[Name]|event", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    calendarPermissions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "calendarPermissions"\n    },\n    calendarView: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "events"\n    },\n    events: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "events"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    },\n    getSchedule: {\n      argNames: ["Schedules", "EndTime", "StartTime", "AvailabilityViewInterval"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.scheduleInformation[]"\n    }\n  },\n  calendars: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  calendarGroup: {\n    properties: ["calendars|calendars|/[Name]|calendar"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    calendars: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "calendars"\n    }\n  },\n  calendarGroups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  calendarPermission: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  calendarPermissions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  calendarSharingMessage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accept: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.calendar"\n    }\n  },\n  call: {\n    properties: ["audioRoutingGroups|audioRoutingGroups|/[Name]|audioRoutingGroup", "contentSharingSessions|contentSharingSessions|/[Name]|contentSharingSession", "operations|commsOperations|/[Name]|commsOperation", "participants|participants|/[Name]|participant"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    audioRoutingGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "audioRoutingGroups"\n    },\n    contentSharingSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contentSharingSessions"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "commsOperations"\n    },\n    participants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "participants"\n    },\n    redirect: {\n      argNames: ["targets", "timeout", "callbackUri"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addLargeGalleryView: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.addLargeGalleryViewOperation"\n    },\n    answer: {\n      argNames: ["callbackUri", "mediaConfig", "acceptedModalities", "participantCapacity", "callOptions"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    cancelMediaProcessing: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.cancelMediaProcessingOperation"\n    },\n    changeScreenSharingRole: {\n      argNames: ["role"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    keepAlive: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    mute: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.muteParticipantOperation"\n    },\n    playPrompt: {\n      argNames: ["prompts", "clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.playPromptOperation"\n    },\n    recordResponse: {\n      argNames: ["prompts", "bargeInAllowed", "initialSilenceTimeoutInSeconds", "maxSilenceTimeoutInSeconds", "maxRecordDurationInSeconds", "playBeep", "stopTones", "clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.recordOperation"\n    },\n    reject: {\n      argNames: ["reason", "callbackUri"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    sendDtmfTones: {\n      argNames: ["tones", "delayBetweenTonesMs", "clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.sendDtmfTonesOperation"\n    },\n    subscribeToTone: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.subscribeToToneOperation"\n    },\n    transfer: {\n      argNames: ["transferTarget", "transferee"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unmute: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.unmuteParticipantOperation"\n    },\n    updateRecordingStatus: {\n      argNames: ["status", "clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.updateRecordingStatusOperation"\n    }\n  },\n  calls: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  callRecord: {\n    properties: ["participants_v2|participants|/[Name]|participant", "sessions|sessions|/[Name]|session"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    organizer_v2: {\n      returnType: "organizer"\n    },\n    participants_v2: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "participants"\n    },\n    sessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sessions"\n    }\n  },\n  callRecording: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  callRecordings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  callTranscript: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  callTranscripts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cancelMediaProcessingOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  canvasLayout: {\n    properties: ["horizontalSections|horizontalSections|/[Name]|horizontalSection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    horizontalSections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "horizontalSections"\n    },\n    verticalSection: {\n      returnType: "verticalSection"\n    }\n  },\n  caseOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  casesRoot: {\n    properties: ["ediscoveryCases|ediscoveryCases|/[Name]|ediscoveryCase"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    ediscoveryCases: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryCases"\n    }\n  },\n  categoryTemplate: {\n    properties: ["subcategories|subcategoryTemplates|/[Name]|subcategoryTemplate"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    subcategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subcategoryTemplates"\n    }\n  },\n  certificateBasedAuthConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  certificateBasedAuthConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  changeTrackedEntity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  channel: {\n    properties: ["members|conversationMembers|/[Name]|conversationMember", "messages|chatMessages|/[Name]|chatMessage", "sharedWithTeams|sharedWithChannelTeamInfos|/[Name]|sharedWithChannelTeamInfo", "tabs|teamsTabs|/[Name]|teamsTab"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    filesFolder: {\n      returnType: "driveItem"\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conversationMembers"\n    },\n    messages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "chatMessages"\n    },\n    sharedWithTeams: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sharedWithChannelTeamInfos"\n    },\n    tabs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsTabs"\n    },\n    archive: {\n      argNames: ["shouldSetSpoSiteReadOnlyForMembers"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unarchive: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    completeMigration: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    provisionEmail: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.provisionChannelEmailResult"\n    },\n    removeEmail: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    doesUserHaveAccess: {\n      argNames: ["userId", "tenantId", "userPrincipalName"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "boolean"\n    }\n  },\n  channels: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  chat: {\n    properties: ["installedApps|teamsAppInstallations|/[Name]|teamsAppInstallation", "members|conversationMembers|/[Name]|conversationMember", "messages|chatMessages|/[Name]|chatMessage", "permissionGrants|resourceSpecificPermissionGrants|/[Name]|resourceSpecificPermissionGrant", "pinnedMessages|pinnedChatMessageInfos|/[Name]|pinnedChatMessageInfo", "tabs|teamsTabs|/[Name]|teamsTab"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    installedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsAppInstallations"\n    },\n    lastMessagePreview: {\n      returnType: "chatMessageInfo"\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conversationMembers"\n    },\n    messages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "chatMessages"\n    },\n    permissionGrants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "resourceSpecificPermissionGrants"\n    },\n    pinnedMessages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "pinnedChatMessageInfos"\n    },\n    tabs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsTabs"\n    },\n    sendActivityNotification: {\n      argNames: ["topic", "activityType", "chainId", "previewText", "teamsAppId", "templateParameters", "recipient"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    hideForUser: {\n      argNames: ["user"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    markChatReadForUser: {\n      argNames: ["user"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    markChatUnreadForUser: {\n      argNames: ["user", "lastMessageReadDateTime"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unhideForUser: {\n      argNames: ["user"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  chats: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  chatMessage: {\n    properties: ["hostedContents|chatMessageHostedContents|/[Name]|chatMessageHostedContent", "replies|chatMessages|/[Name]|chatMessage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    hostedContents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "chatMessageHostedContents"\n    },\n    replies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "chatMessages"\n    },\n    setReaction: {\n      argNames: ["reactionType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    softDelete: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    undoSoftDelete: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unsetReaction: {\n      argNames: ["reactionType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  chatMessages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  chatMessageHostedContent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  chatMessageHostedContents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  chatMessageInfo: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  checklistItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  checklistItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  citationTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  claimsMappingPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  claimsMappingPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudClipboardItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudClipboardItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudClipboardRoot: {\n    properties: ["items|cloudClipboardItems|/[Name]|cloudClipboardItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudClipboardItems"\n    }\n  },\n  cloudCommunications: {\n    properties: ["callRecords|callRecords|/[Name]|callRecord", "calls|calls|/[Name]|call", "onlineMeetings|onlineMeetings|/[Name]|onlineMeeting", "presences|presences|/[Name]|presence"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    callRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "callRecords"\n    },\n    calls: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "calls"\n    },\n    onlineMeetings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onlineMeetings"\n    },\n    presences: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "presences"\n    },\n    getPresencesByUserId: {\n      argNames: ["ids"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.presence[]"\n    }\n  },\n  cloudPC: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    endGracePeriod: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    reboot: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    rename: {\n      argNames: ["displayName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    restore: {\n      argNames: ["cloudPcSnapshotId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    troubleshoot: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  cloudPCs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcAuditEvent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcAuditEvents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcDeviceImage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcDeviceImages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcGalleryImage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcGalleryImages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcOnPremisesConnection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    runHealthChecks: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  cloudPcOnPremisesConnections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcProvisioningPolicy: {\n    properties: ["assignments|cloudPcProvisioningPolicyAssignments|/[Name]|cloudPcProvisioningPolicyAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcProvisioningPolicyAssignments"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  cloudPcProvisioningPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcProvisioningPolicyAssignment: {\n    properties: ["assignedUsers|users|/[Name]|user"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignedUsers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    }\n  },\n  cloudPcProvisioningPolicyAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcUserSetting: {\n    properties: ["assignments|cloudPcUserSettingAssignments|/[Name]|cloudPcUserSettingAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcUserSettingAssignments"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  cloudPcUserSettings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcUserSettingAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  cloudPcUserSettingAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  columnDefinition: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sourceColumn: {\n      returnType: "columnDefinition"\n    },\n    update: {\n      argNames: ["values"]\n    }\n  },\n  columnDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  columnLink: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  columnLinks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  commsOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  commsOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  community: {\n    properties: ["owners|users|/[Name]|user"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "group"\n    },\n    owners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    }\n  },\n  communitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  companySubscription: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  companySubscriptions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  compliance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  complianceManagementPartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  complianceManagementPartners: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conditionalAccessPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conditionalAccessPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conditionalAccessRoot: {\n    properties: ["authenticationContextClassReferences|authenticationContextClassReferences|/[Name]|authenticationContextClassReference", "namedLocations|namedLocations|/[Name]|namedLocation", "policies|conditionalAccessPolicys|/[Name]|conditionalAccessPolicy", "templates|conditionalAccessTemplates|/[Name]|conditionalAccessTemplate"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authenticationStrength: {\n      returnType: "authenticationStrengthRoot"\n    },\n    authenticationContextClassReferences: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationContextClassReferences"\n    },\n    namedLocations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "namedLocations"\n    },\n    policies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conditionalAccessPolicys"\n    },\n    templates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conditionalAccessTemplates"\n    }\n  },\n  conditionalAccessTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conditionalAccessTemplates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  connectedOrganization: {\n    properties: ["externalSponsors|directoryObjects|/[Name]|directoryObject", "internalSponsors|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    externalSponsors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    internalSponsors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    }\n  },\n  connectedOrganizations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  connectionOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contact: {\n    properties: ["extensions|extensions|/[Name]|extension", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    photo: {\n      returnType: "profilePhoto"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    }\n  },\n  contacts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contactFolder: {\n    properties: ["childFolders|contactFolders|/[Name]|contactFolder", "contacts|contacts|/[Name]|contact", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    childFolders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contactFolders"\n    },\n    contacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contacts"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    }\n  },\n  contactFolders: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contentSharingSession: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contentSharingSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contentType: {\n    properties: ["baseTypes|contentTypes|/[Name]|contentType", "columnLinks|columnLinks|/[Name]|columnLink", "columnPositions|columnDefinitions|/[Name]|columnDefinition", "columns|columnDefinitions|/[Name]|columnDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    base: {\n      returnType: "contentType"\n    },\n    baseTypes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contentTypes"\n    },\n    columnLinks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnLinks"\n    },\n    columnPositions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnDefinitions"\n    },\n    columns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnDefinitions"\n    },\n    update: {\n      argNames: ["values"]\n    },\n    publish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unpublish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    associateWithHubSites: {\n      argNames: ["hubSiteUrls", "propagateToExistingLists"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    copyToDefaultContentLocation: {\n      argNames: ["sourceFile", "destinationFileName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    isPublished: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "boolean"\n    }\n  },\n  contentTypes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  contract: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conversation: {\n    properties: ["threads|conversationThreads|/[Name]|conversationThread"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    threads: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conversationThreads"\n    }\n  },\n  conversations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conversationMembers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  conversationThread: {\n    properties: ["posts|posts|/[Name]|post"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    posts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "posts"\n    },\n    reply: {\n      argNames: ["Post"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  conversationThreads: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  countryNamedLocation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  crossTenantAccessPolicy: {\n    properties: ["partners|crossTenantAccessPolicyConfigurationPartners|/[Name]|crossTenantAccessPolicyConfigurationPartner"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    "default": {\n      returnType: "crossTenantAccessPolicyConfigurationDefault"\n    },\n    partners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "crossTenantAccessPolicyConfigurationPartners"\n    },\n    templates: {\n      returnType: "policyTemplate"\n    }\n  },\n  crossTenantAccessPolicyConfigurationDefault: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resetToSystemDefault: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  crossTenantAccessPolicyConfigurationPartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    identitySynchronization: {\n      returnType: "crossTenantIdentitySyncPolicyPartner"\n    }\n  },\n  crossTenantIdentitySyncPolicyPartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customAuthenticationExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    validateAuthenticationConfiguration: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.authenticationConfigurationValidation"\n    }\n  },\n  customAuthenticationExtensions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customCalloutExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customCalloutExtensions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customExtensionStageSetting: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    customExtension: {\n      returnType: "customCalloutExtension"\n    }\n  },\n  customExtensionStageSettings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customSecurityAttributeDefinition: {\n    properties: ["allowedValues|allowedValues|/[Name]|allowedValue"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    allowedValues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "allowedValues"\n    }\n  },\n  customSecurityAttributeDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  customTaskExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createdBy: {\n      returnType: "user"\n    },\n    lastModifiedBy: {\n      returnType: "user"\n    }\n  },\n  dataPolicyOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  dataSet: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  dataSource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  dataSourceContainer: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  defaultManagedAppProtection: {\n    properties: ["apps|managedMobileApps|/[Name]|managedMobileApp"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    apps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedMobileApps"\n    },\n    deploymentSummary: {\n      returnType: "managedAppPolicyDeploymentSummary"\n    }\n  },\n  defaultManagedAppProtections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminAccessAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminAccessAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminCustomer: {\n    properties: ["serviceManagementDetails|delegatedAdminServiceManagementDetails|/[Name]|delegatedAdminServiceManagementDetail"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    serviceManagementDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminServiceManagementDetails"\n    }\n  },\n  delegatedAdminCustomers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminRelationship: {\n    properties: ["accessAssignments|delegatedAdminAccessAssignments|/[Name]|delegatedAdminAccessAssignment", "operations|delegatedAdminRelationshipOperations|/[Name]|delegatedAdminRelationshipOperation", "requests|delegatedAdminRelationshipRequests|/[Name]|delegatedAdminRelationshipRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminAccessAssignments"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminRelationshipOperations"\n    },\n    requests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminRelationshipRequests"\n    }\n  },\n  delegatedAdminRelationships: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminRelationshipOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminRelationshipOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminRelationshipRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminRelationshipRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminServiceManagementDetail: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedAdminServiceManagementDetails: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedPermissionClassification: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  delegatedPermissionClassifications: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deletedChat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    undoDelete: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deletedChats: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deletedItemContainer: {\n    properties: ["workflows|workflows|/[Name]|workflow"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    workflows: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workflows"\n    }\n  },\n  deletedTeam: {\n    properties: ["channels|channels|/[Name]|channel"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    channels: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "channels"\n    }\n  },\n  deletedTeams: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deltaParticipants: {\n    properties: ["participants|participants|/[Name]|participant"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    participants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "participants"\n    }\n  },\n  departmentTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  detectedApp: {\n    properties: ["managedDevices|managedDevices|/[Name]|managedDevice"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    managedDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDevices"\n    }\n  },\n  detectedApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  device: {\n    properties: ["memberOf|directoryObjects|/[Name]|directoryObject", "registeredOwners|directoryObjects|/[Name]|directoryObject", "registeredUsers|directoryObjects|/[Name]|directoryObject", "transitiveMemberOf|directoryObjects|/[Name]|directoryObject", "extensions|extensions|/[Name]|extension"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    memberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    registeredOwners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    registeredUsers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    transitiveMemberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    }\n  },\n  deviceAndAppManagementRoleAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceAndAppManagementRoleAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceAndAppManagementRoleDefinition: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceAppManagement: {\n    properties: ["managedEBooks|managedEBooks|/[Name]|managedEBook", "mobileAppCategories|mobileAppCategorys|/[Name]|mobileAppCategory", "mobileAppConfigurations|managedDeviceMobileAppConfigurations|/[Name]|managedDeviceMobileAppConfiguration", "mobileApps|mobileApps|/[Name]|mobileApp", "vppTokens|vppTokens|/[Name]|vppToken", "androidManagedAppProtections|androidManagedAppProtections|/[Name]|androidManagedAppProtection", "defaultManagedAppProtections|defaultManagedAppProtections|/[Name]|defaultManagedAppProtection", "iosManagedAppProtections|iosManagedAppProtections|/[Name]|iosManagedAppProtection", "managedAppPolicies|managedAppPolicys|/[Name]|managedAppPolicy", "managedAppRegistrations|managedAppRegistrations|/[Name]|managedAppRegistration", "managedAppStatuses|managedAppStatuss|/[Name]|managedAppStatus", "mdmWindowsInformationProtectionPolicies|mdmWindowsInformationProtectionPolicys|/[Name]|mdmWindowsInformationProtectionPolicy", "targetedManagedAppConfigurations|targetedManagedAppConfigurations|/[Name]|targetedManagedAppConfiguration", "windowsInformationProtectionPolicies|windowsInformationProtectionPolicys|/[Name]|windowsInformationProtectionPolicy"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    managedEBooks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedEBooks"\n    },\n    mobileAppCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppCategorys"\n    },\n    mobileAppConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDeviceMobileAppConfigurations"\n    },\n    mobileApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileApps"\n    },\n    vppTokens: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "vppTokens"\n    },\n    androidManagedAppProtections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "androidManagedAppProtections"\n    },\n    defaultManagedAppProtections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "defaultManagedAppProtections"\n    },\n    iosManagedAppProtections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "iosManagedAppProtections"\n    },\n    managedAppPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppPolicys"\n    },\n    managedAppRegistrations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppRegistrations"\n    },\n    managedAppStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppStatuss"\n    },\n    mdmWindowsInformationProtectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mdmWindowsInformationProtectionPolicys"\n    },\n    targetedManagedAppConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "targetedManagedAppConfigurations"\n    },\n    windowsInformationProtectionPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsInformationProtectionPolicys"\n    },\n    syncMicrosoftStoreForBusinessApps: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deviceCategory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceActionItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceActionItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceDeviceOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceDeviceStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceDeviceStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicy: {\n    properties: ["assignments|deviceCompliancePolicyAssignments|/[Name]|deviceCompliancePolicyAssignment", "deviceSettingStateSummaries|settingStateDeviceSummarys|/[Name]|settingStateDeviceSummary", "deviceStatuses|deviceComplianceDeviceStatuss|/[Name]|deviceComplianceDeviceStatus", "scheduledActionsForRule|deviceComplianceScheduledActionForRules|/[Name]|deviceComplianceScheduledActionForRule", "userStatuses|deviceComplianceUserStatuss|/[Name]|deviceComplianceUserStatus"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceCompliancePolicyAssignments"\n    },\n    deviceSettingStateSummaries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "settingStateDeviceSummarys"\n    },\n    deviceStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceComplianceDeviceStatuss"\n    },\n    deviceStatusOverview: {\n      returnType: "deviceComplianceDeviceOverview"\n    },\n    scheduledActionsForRule: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceComplianceScheduledActionForRules"\n    },\n    userStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceComplianceUserStatuss"\n    },\n    userStatusOverview: {\n      returnType: "deviceComplianceUserOverview"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.deviceCompliancePolicyAssignment[]"\n    },\n    scheduleActionsForRules: {\n      argNames: ["deviceComplianceScheduledActionForRules"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deviceCompliancePolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicyAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicyAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicyDeviceStateSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicySettingStateSummary: {\n    properties: ["deviceComplianceSettingStates|deviceComplianceSettingStates|/[Name]|deviceComplianceSettingState"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceComplianceSettingStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceComplianceSettingStates"\n    }\n  },\n  deviceCompliancePolicySettingStateSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicyState: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceCompliancePolicyStates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceScheduledActionForRule: {\n    properties: ["scheduledActionConfigurations|deviceComplianceActionItems|/[Name]|deviceComplianceActionItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    scheduledActionConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceComplianceActionItems"\n    }\n  },\n  deviceComplianceScheduledActionForRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceSettingState: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceSettingStates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceUserOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceUserStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceComplianceUserStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfiguration: {\n    properties: ["assignments|deviceConfigurationAssignments|/[Name]|deviceConfigurationAssignment", "deviceSettingStateSummaries|settingStateDeviceSummarys|/[Name]|settingStateDeviceSummary", "deviceStatuses|deviceConfigurationDeviceStatuss|/[Name]|deviceConfigurationDeviceStatus", "userStatuses|deviceConfigurationUserStatuss|/[Name]|deviceConfigurationUserStatus"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceConfigurationAssignments"\n    },\n    deviceSettingStateSummaries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "settingStateDeviceSummarys"\n    },\n    deviceStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceConfigurationDeviceStatuss"\n    },\n    deviceStatusOverview: {\n      returnType: "deviceConfigurationDeviceOverview"\n    },\n    userStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceConfigurationUserStatuss"\n    },\n    userStatusOverview: {\n      returnType: "deviceConfigurationUserOverview"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.deviceConfigurationAssignment[]"\n    },\n    getOmaSettingPlainTextValue: {\n      argNames: ["secretReferenceValueId"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "string"\n    }\n  },\n  deviceConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationDeviceOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationDeviceStateSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationDeviceStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationDeviceStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationState: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationStates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationUserOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationUserStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceConfigurationUserStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceEnrollmentConfiguration: {\n    properties: ["assignments|enrollmentConfigurationAssignments|/[Name]|enrollmentConfigurationAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "enrollmentConfigurationAssignments"\n    },\n    assign: {\n      argNames: ["enrollmentConfigurationAssignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setPriority: {\n      argNames: ["priority"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deviceEnrollmentConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceEnrollmentLimitConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceEnrollmentPlatformRestrictionsConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceEnrollmentWindowsHelloForBusinessConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceInstallState: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceInstallStates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceLocalCredentialInfo: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceLocalCredentialInfos: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceLogCollectionResponse: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createDownloadUrl: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "string"\n    }\n  },\n  deviceLogCollectionResponses: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagement: {\n    properties: ["auditEvents|auditEvents|/[Name]|auditEvent", "termsAndConditions|termsAndConditionss|/[Name]|termsAndConditions", "deviceCompliancePolicies|deviceCompliancePolicys|/[Name]|deviceCompliancePolicy", "deviceCompliancePolicySettingStateSummaries|deviceCompliancePolicySettingStateSummarys|/[Name]|deviceCompliancePolicySettingStateSummary", "deviceConfigurations|deviceConfigurations|/[Name]|deviceConfiguration", "iosUpdateStatuses|iosUpdateDeviceStatuss|/[Name]|iosUpdateDeviceStatus", "complianceManagementPartners|complianceManagementPartners|/[Name]|complianceManagementPartner", "deviceCategories|deviceCategorys|/[Name]|deviceCategory", "deviceEnrollmentConfigurations|deviceEnrollmentConfigurations|/[Name]|deviceEnrollmentConfiguration", "deviceManagementPartners|deviceManagementPartners|/[Name]|deviceManagementPartner", "exchangeConnectors|deviceManagementExchangeConnectors|/[Name]|deviceManagementExchangeConnector", "mobileThreatDefenseConnectors|mobileThreatDefenseConnectors|/[Name]|mobileThreatDefenseConnector", "detectedApps|detectedApps|/[Name]|detectedApp", "managedDevices|managedDevices|/[Name]|managedDevice", "mobileAppTroubleshootingEvents|mobileAppTroubleshootingEvents|/[Name]|mobileAppTroubleshootingEvent", "userExperienceAnalyticsAppHealthApplicationPerformance|userExperienceAnalyticsAppHealthApplicationPerformances|/[Name]|userExperienceAnalyticsAppHealthApplicationPerformance", "userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails|userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailss|/[Name]|userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails", "userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId|userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIds|/[Name]|userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId", "userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion|userExperienceAnalyticsAppHealthAppPerformanceByOSVersions|/[Name]|userExperienceAnalyticsAppHealthAppPerformanceByOSVersion", "userExperienceAnalyticsAppHealthDeviceModelPerformance|userExperienceAnalyticsAppHealthDeviceModelPerformances|/[Name]|userExperienceAnalyticsAppHealthDeviceModelPerformance", "userExperienceAnalyticsAppHealthDevicePerformance|userExperienceAnalyticsAppHealthDevicePerformances|/[Name]|userExperienceAnalyticsAppHealthDevicePerformance", "userExperienceAnalyticsAppHealthDevicePerformanceDetails|userExperienceAnalyticsAppHealthDevicePerformanceDetailss|/[Name]|userExperienceAnalyticsAppHealthDevicePerformanceDetails", "userExperienceAnalyticsAppHealthOSVersionPerformance|userExperienceAnalyticsAppHealthOSVersionPerformances|/[Name]|userExperienceAnalyticsAppHealthOSVersionPerformance", "userExperienceAnalyticsBaselines|userExperienceAnalyticsBaselines|/[Name]|userExperienceAnalyticsBaseline", "userExperienceAnalyticsCategories|userExperienceAnalyticsCategorys|/[Name]|userExperienceAnalyticsCategory", "userExperienceAnalyticsDevicePerformance|userExperienceAnalyticsDevicePerformances|/[Name]|userExperienceAnalyticsDevicePerformance", "userExperienceAnalyticsDeviceScores|userExperienceAnalyticsDeviceScoress|/[Name]|userExperienceAnalyticsDeviceScores", "userExperienceAnalyticsDeviceStartupHistory|userExperienceAnalyticsDeviceStartupHistorys|/[Name]|userExperienceAnalyticsDeviceStartupHistory", "userExperienceAnalyticsDeviceStartupProcesses|userExperienceAnalyticsDeviceStartupProcesss|/[Name]|userExperienceAnalyticsDeviceStartupProcess", "userExperienceAnalyticsDeviceStartupProcessPerformance|userExperienceAnalyticsDeviceStartupProcessPerformances|/[Name]|userExperienceAnalyticsDeviceStartupProcessPerformance", "userExperienceAnalyticsMetricHistory|userExperienceAnalyticsMetricHistorys|/[Name]|userExperienceAnalyticsMetricHistory", "userExperienceAnalyticsModelScores|userExperienceAnalyticsModelScoress|/[Name]|userExperienceAnalyticsModelScores", "userExperienceAnalyticsScoreHistory|userExperienceAnalyticsScoreHistorys|/[Name]|userExperienceAnalyticsScoreHistory", "userExperienceAnalyticsWorkFromAnywhereMetrics|userExperienceAnalyticsWorkFromAnywhereMetrics|/[Name]|userExperienceAnalyticsWorkFromAnywhereMetric", "userExperienceAnalyticsWorkFromAnywhereModelPerformance|userExperienceAnalyticsWorkFromAnywhereModelPerformances|/[Name]|userExperienceAnalyticsWorkFromAnywhereModelPerformance", "windowsMalwareInformation|windowsMalwareInformations|/[Name]|windowsMalwareInformation", "importedWindowsAutopilotDeviceIdentities|importedWindowsAutopilotDeviceIdentitys|/[Name]|importedWindowsAutopilotDeviceIdentity", "windowsAutopilotDeviceIdentities|windowsAutopilotDeviceIdentitys|/[Name]|windowsAutopilotDeviceIdentity", "notificationMessageTemplates|notificationMessageTemplates|/[Name]|notificationMessageTemplate", "resourceOperations|resourceOperations|/[Name]|resourceOperation", "roleAssignments|deviceAndAppManagementRoleAssignments|/[Name]|deviceAndAppManagementRoleAssignment", "roleDefinitions|roleDefinitions|/[Name]|roleDefinition", "remoteAssistancePartners|remoteAssistancePartners|/[Name]|remoteAssistancePartner", "telecomExpenseManagementPartners|telecomExpenseManagementPartners|/[Name]|telecomExpenseManagementPartner", "troubleshootingEvents|deviceManagementTroubleshootingEvents|/[Name]|deviceManagementTroubleshootingEvent", "windowsInformationProtectionAppLearningSummaries|windowsInformationProtectionAppLearningSummarys|/[Name]|windowsInformationProtectionAppLearningSummary", "windowsInformationProtectionNetworkLearningSummaries|windowsInformationProtectionNetworkLearningSummarys|/[Name]|windowsInformationProtectionNetworkLearningSummary"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    auditEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "auditEvents"\n    },\n    virtualEndpoint: {\n      returnType: "virtualEndpoint"\n    },\n    termsAndConditions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "termsAndConditionss"\n    },\n    deviceCompliancePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceCompliancePolicys"\n    },\n    deviceCompliancePolicyDeviceStateSummary: {\n      returnType: "deviceCompliancePolicyDeviceStateSummary"\n    },\n    deviceCompliancePolicySettingStateSummaries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceCompliancePolicySettingStateSummarys"\n    },\n    deviceConfigurationDeviceStateSummaries: {\n      returnType: "deviceConfigurationDeviceStateSummary"\n    },\n    deviceConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceConfigurations"\n    },\n    iosUpdateStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "iosUpdateDeviceStatuss"\n    },\n    softwareUpdateStatusSummary: {\n      returnType: "softwareUpdateStatusSummary"\n    },\n    complianceManagementPartners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "complianceManagementPartners"\n    },\n    conditionalAccessSettings: {\n      returnType: "onPremisesConditionalAccessSettings"\n    },\n    deviceCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceCategorys"\n    },\n    deviceEnrollmentConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceEnrollmentConfigurations"\n    },\n    deviceManagementPartners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceManagementPartners"\n    },\n    exchangeConnectors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceManagementExchangeConnectors"\n    },\n    mobileThreatDefenseConnectors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileThreatDefenseConnectors"\n    },\n    applePushNotificationCertificate: {\n      returnType: "applePushNotificationCertificate"\n    },\n    detectedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "detectedApps"\n    },\n    managedDeviceOverview: {\n      returnType: "managedDeviceOverview"\n    },\n    managedDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDevices"\n    },\n    mobileAppTroubleshootingEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppTroubleshootingEvents"\n    },\n    userExperienceAnalyticsAppHealthApplicationPerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthApplicationPerformances"\n    },\n    userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailss"\n    },\n    userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIds"\n    },\n    userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthAppPerformanceByOSVersions"\n    },\n    userExperienceAnalyticsAppHealthDeviceModelPerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthDeviceModelPerformances"\n    },\n    userExperienceAnalyticsAppHealthDevicePerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthDevicePerformances"\n    },\n    userExperienceAnalyticsAppHealthDevicePerformanceDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthDevicePerformanceDetailss"\n    },\n    userExperienceAnalyticsAppHealthOSVersionPerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsAppHealthOSVersionPerformances"\n    },\n    userExperienceAnalyticsAppHealthOverview: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    userExperienceAnalyticsBaselines: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsBaselines"\n    },\n    userExperienceAnalyticsCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsCategorys"\n    },\n    userExperienceAnalyticsDevicePerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsDevicePerformances"\n    },\n    userExperienceAnalyticsDeviceScores: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsDeviceScoress"\n    },\n    userExperienceAnalyticsDeviceStartupHistory: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsDeviceStartupHistorys"\n    },\n    userExperienceAnalyticsDeviceStartupProcesses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsDeviceStartupProcesss"\n    },\n    userExperienceAnalyticsDeviceStartupProcessPerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsDeviceStartupProcessPerformances"\n    },\n    userExperienceAnalyticsMetricHistory: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsMetricHistorys"\n    },\n    userExperienceAnalyticsModelScores: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsModelScoress"\n    },\n    userExperienceAnalyticsOverview: {\n      returnType: "userExperienceAnalyticsOverview"\n    },\n    userExperienceAnalyticsScoreHistory: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsScoreHistorys"\n    },\n    userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric: {\n      returnType: "userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric"\n    },\n    userExperienceAnalyticsWorkFromAnywhereMetrics: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsWorkFromAnywhereMetrics"\n    },\n    userExperienceAnalyticsWorkFromAnywhereModelPerformance: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsWorkFromAnywhereModelPerformances"\n    },\n    windowsMalwareInformation: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsMalwareInformations"\n    },\n    importedWindowsAutopilotDeviceIdentities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "importedWindowsAutopilotDeviceIdentitys"\n    },\n    windowsAutopilotDeviceIdentities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsAutopilotDeviceIdentitys"\n    },\n    notificationMessageTemplates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "notificationMessageTemplates"\n    },\n    resourceOperations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "resourceOperations"\n    },\n    roleAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceAndAppManagementRoleAssignments"\n    },\n    roleDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "roleDefinitions"\n    },\n    remoteAssistancePartners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "remoteAssistancePartners"\n    },\n    reports: {\n      returnType: "deviceManagementReports"\n    },\n    telecomExpenseManagementPartners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "telecomExpenseManagementPartners"\n    },\n    troubleshootingEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceManagementTroubleshootingEvents"\n    },\n    windowsInformationProtectionAppLearningSummaries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsInformationProtectionAppLearningSummarys"\n    },\n    windowsInformationProtectionNetworkLearningSummaries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsInformationProtectionNetworkLearningSummarys"\n    },\n    verifyWindowsEnrollmentAutoDiscovery: {\n      argNames: ["domainName"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "boolean"\n    },\n    userExperienceAnalyticsSummarizeWorkFromAnywhereDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.userExperienceAnalyticsWorkFromAnywhereDevicesSummary"\n    },\n    getEffectivePermissions: {\n      argNames: ["scope"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.rolePermission[]"\n    }\n  },\n  deviceManagementCachedReportConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementExchangeConnector: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sync: {\n      argNames: ["syncType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deviceManagementExchangeConnectors: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementExportJob: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementExportJobs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementPartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    terminate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  deviceManagementPartners: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementReports: {\n    properties: ["exportJobs|deviceManagementExportJobs|/[Name]|deviceManagementExportJob"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    exportJobs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceManagementExportJobs"\n    },\n    retrieveDeviceAppInstallationStatusReport: {\n      argNames: ["name", "select", "search", "groupBy", "orderBy", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getCachedReport: {\n      argNames: ["id", "select", "groupBy", "orderBy", "search", "skip", "top"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getCompliancePolicyNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getCompliancePolicyNonComplianceSummaryReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getComplianceSettingNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getConfigurationPolicyNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getConfigurationPolicyNonComplianceSummaryReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getConfigurationSettingNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getDeviceManagementIntentPerSettingContributingProfiles: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getDeviceManagementIntentSettingsReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getDeviceNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getDevicesWithoutCompliancePolicyReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getHistoricalReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getNoncompliantDevicesAndSettingsReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getPolicyNonComplianceMetadata: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getPolicyNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getPolicyNonComplianceSummaryReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getReportFilters: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    },\n    getSettingNonComplianceReport: {\n      argNames: ["name", "select", "groupBy", "orderBy", "search", "skip", "top", "sessionId", "filter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "any"\n    }\n  },\n  deviceManagementTroubleshootingEvent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceManagementTroubleshootingEvents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  deviceRegistrationPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directory: {\n    properties: ["deviceLocalCredentials|deviceLocalCredentialInfos|/[Name]|deviceLocalCredentialInfo", "administrativeUnits|administrativeUnits|/[Name]|administrativeUnit", "attributeSets|attributeSets|/[Name]|attributeSet", "customSecurityAttributeDefinitions|customSecurityAttributeDefinitions|/[Name]|customSecurityAttributeDefinition", "deletedItems|directoryObjects|/[Name]|directoryObject", "federationConfigurations|identityProviderBases|/[Name]|identityProviderBase", "onPremisesSynchronization|onPremisesDirectorySynchronizations|/[Name]|onPremisesDirectorySynchronization", "subscriptions|companySubscriptions|/[Name]|companySubscription"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceLocalCredentials: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceLocalCredentialInfos"\n    },\n    administrativeUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "administrativeUnits"\n    },\n    attributeSets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attributeSets"\n    },\n    customSecurityAttributeDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "customSecurityAttributeDefinitions"\n    },\n    deletedItems: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    federationConfigurations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "identityProviderBases"\n    },\n    onPremisesSynchronization: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onPremisesDirectorySynchronizations"\n    },\n    subscriptions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "companySubscriptions"\n    }\n  },\n  directoryAudit: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directoryAudits: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directoryDefinition: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    discover: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.directoryDefinition"\n    }\n  },\n  directoryDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directoryObject: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restore: {\n      argNames: ["autoReconcileProxyConflict"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.directoryObject"\n    },\n    checkMemberGroups: {\n      argNames: ["groupIds"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "Array<string>[]"\n    },\n    checkMemberObjects: {\n      argNames: ["ids"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "Array<string>[]"\n    },\n    getMemberGroups: {\n      argNames: ["securityEnabledOnly"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "Array<string>[]"\n    },\n    getMemberObjects: {\n      argNames: ["securityEnabledOnly"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "Array<string>[]"\n    }\n  },\n  directoryObjects: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directoryObjectPartnerReference: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  directoryRole: {\n    properties: ["members|directoryObjects|/[Name]|directoryObject", "scopedMembers|scopedRoleMemberships|/[Name]|scopedRoleMembership"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    scopedMembers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "scopedRoleMemberships"\n    }\n  },\n  directoryRoleTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  dispositionReviewStage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  documentSetVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restore: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  documentSetVersions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domain: {\n    properties: ["domainNameReferences|directoryObjects|/[Name]|directoryObject", "federationConfiguration|internalDomainFederations|/[Name]|internalDomainFederation", "serviceConfigurationRecords|domainDnsRecords|/[Name]|domainDnsRecord", "verificationDnsRecords|domainDnsRecords|/[Name]|domainDnsRecord"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    domainNameReferences: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    federationConfiguration: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "internalDomainFederations"\n    },\n    rootDomain: {\n      returnType: "domain"\n    },\n    serviceConfigurationRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "domainDnsRecords"\n    },\n    verificationDnsRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "domainDnsRecords"\n    },\n    forceDelete: {\n      argNames: ["disableUserAccounts"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    promote: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "boolean"\n    },\n    verify: {\n      argNames: ["forceTakeover"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.domain"\n    }\n  },\n  domainDnsCnameRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsMxRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsRecords: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsSrvRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsTxtRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  domainDnsUnavailableRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  drive: {\n    properties: ["bundles|driveItems|/[Name]|driveItem", "following|driveItems|/[Name]|driveItem", "items|driveItems|/[Name]|driveItem", "special|driveItems|/[Name]|driveItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    bundles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    following: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    list: {\n      returnType: "list"\n    },\n    root: {\n      returnType: "driveItem"\n    },\n    special: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    search: {\n      argNames: ["q"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.driveItem[]"\n    },\n    recent: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.driveItem[]"\n    },\n    sharedWithMe: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.driveItem[]"\n    }\n  },\n  drives: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveItem: {\n    properties: ["children|driveItems|/[Name]|driveItem", "permissions|permissions|/[Name]|permission", "subscriptions|subscriptions|/[Name]|subscription", "thumbnails|thumbnailSets|/[Name]|thumbnailSet", "versions|driveItemVersions|/[Name]|driveItemVersion"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    workbook: {\n      returnType: "workbook"\n    },\n    analytics: {\n      returnType: "itemAnalytics"\n    },\n    children: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    listItem: {\n      returnType: "listItem"\n    },\n    permissions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissions"\n    },\n    retentionLabel: {\n      returnType: "itemRetentionLabel"\n    },\n    subscriptions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subscriptions"\n    },\n    thumbnails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "thumbnailSets"\n    },\n    versions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItemVersions"\n    },\n    setSensitivityLabel: {\n      argNames: ["actionSource", "assignmentMethod", "id", "justificationText"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    restore: {\n      argNames: ["parentReference", "name"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.driveItem"\n    },\n    copy: {\n      argNames: ["name", "parentReference"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.driveItem"\n    },\n    createUploadSession: {\n      argNames: ["item", "deferCommit"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.uploadSession"\n    },\n    permanentDelete: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    assignSensitivityLabel: {\n      argNames: ["sensitivityLabelId", "assignmentMethod", "justificationText"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    checkin: {\n      argNames: ["checkInAs", "comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    checkout: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    createLink: {\n      argNames: ["type", "scope", "expirationDateTime", "password", "message", "recipients", "retainInheritedPermissions", "sendNotification"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.permission"\n    },\n    follow: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.driveItem"\n    },\n    invite: {\n      argNames: ["requireSignIn", "roles", "sendInvitation", "message", "recipients", "retainInheritedPermissions", "expirationDateTime", "password"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.permission[]"\n    },\n    preview: {\n      argNames: ["page", "zoom"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.itemPreviewInfo"\n    },\n    unfollow: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    validatePermission: {\n      argNames: ["challengeToken", "password"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    delta: {\n      argNames: ["token"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.driveItem[]"\n    },\n    search: {\n      argNames: ["q"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.driveItem[]"\n    },\n    getActivitiesByInterval: {\n      argNames: ["startDateTime", "endDateTime", "interval"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.itemActivityStat[]"\n    }\n  },\n  driveItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveItemVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restoreVersion: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  driveItemVersions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveProtectionRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveProtectionRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveProtectionUnit: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveProtectionUnits: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveRestoreArtifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  driveRestoreArtifacts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  eBookInstallSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  edge: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    internetExplorerMode: {\n      returnType: "internetExplorerMode"\n    }\n  },\n  ediscoveryAddToReviewSetOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    reviewSet: {\n      returnType: "ediscoveryReviewSet"\n    },\n    search: {\n      returnType: "ediscoverySearch"\n    }\n  },\n  ediscoveryCase: {\n    properties: ["custodians|ediscoveryCustodians|/[Name]|ediscoveryCustodian", "noncustodialDataSources|ediscoveryNoncustodialDataSources|/[Name]|ediscoveryNoncustodialDataSource", "operations|caseOperations|/[Name]|caseOperation", "reviewSets|ediscoveryReviewSets|/[Name]|ediscoveryReviewSet", "searches|ediscoverySearchs|/[Name]|ediscoverySearch", "tags|ediscoveryReviewTags|/[Name]|ediscoveryReviewTag"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    custodians: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryCustodians"\n    },\n    noncustodialDataSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryNoncustodialDataSources"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "caseOperations"\n    },\n    reviewSets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryReviewSets"\n    },\n    searches: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoverySearchs"\n    },\n    settings: {\n      returnType: "ediscoveryCaseSettings"\n    },\n    tags: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryReviewTags"\n    }\n  },\n  ediscoveryCaseSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ediscoveryCustodian: {\n    properties: ["siteSources|siteSources|/[Name]|siteSource", "unifiedGroupSources|unifiedGroupSources|/[Name]|unifiedGroupSource", "userSources|userSources|/[Name]|userSource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    lastIndexOperation: {\n      returnType: "ediscoveryIndexOperation"\n    },\n    siteSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteSources"\n    },\n    unifiedGroupSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedGroupSources"\n    },\n    userSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userSources"\n    }\n  },\n  ediscoveryEstimateOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    search: {\n      returnType: "ediscoverySearch"\n    }\n  },\n  ediscoveryExportOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    reviewSet: {\n      returnType: "ediscoveryReviewSet"\n    },\n    reviewSetQuery: {\n      returnType: "ediscoveryReviewSetQuery"\n    }\n  },\n  ediscoveryHoldOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ediscoveryIndexOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ediscoveryNoncustodialDataSource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    dataSource: {\n      returnType: "dataSource"\n    },\n    lastIndexOperation: {\n      returnType: "ediscoveryIndexOperation"\n    }\n  },\n  ediscoveryPurgeDataOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ediscoveryReviewSet: {\n    properties: ["queries|ediscoveryReviewSetQuerys|/[Name]|ediscoveryReviewSetQuery"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    queries: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryReviewSetQuerys"\n    }\n  },\n  ediscoveryReviewSetQuery: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ediscoveryReviewTag: {\n    properties: ["childTags|ediscoveryReviewTags|/[Name]|ediscoveryReviewTag"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    childTags: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryReviewTags"\n    },\n    parent: {\n      returnType: "ediscoveryReviewTag"\n    }\n  },\n  ediscoverySearch: {\n    properties: ["additionalSources|dataSources|/[Name]|dataSource", "custodianSources|dataSources|/[Name]|dataSource", "noncustodialSources|ediscoveryNoncustodialDataSources|/[Name]|ediscoveryNoncustodialDataSource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    additionalSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "dataSources"\n    },\n    addToReviewSetOperation: {\n      returnType: "ediscoveryAddToReviewSetOperation"\n    },\n    custodianSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "dataSources"\n    },\n    lastEstimateStatisticsOperation: {\n      returnType: "ediscoveryEstimateOperation"\n    },\n    noncustodialSources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ediscoveryNoncustodialDataSources"\n    }\n  },\n  ediscoverySearchExportOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    search: {\n      returnType: "ediscoverySearch"\n    }\n  },\n  ediscoveryTagOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  editionUpgradeConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationAssignment: {\n    properties: ["categories|educationCategorys|/[Name]|educationCategory", "resources|educationAssignmentResources|/[Name]|educationAssignmentResource", "submissions|educationSubmissions|/[Name]|educationSubmission"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    categories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationCategorys"\n    },\n    gradingCategory: {\n      returnType: "educationGradingCategory"\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationAssignmentResources"\n    },\n    rubric: {\n      returnType: "educationRubric"\n    },\n    submissions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSubmissions"\n    },\n    publish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationAssignment"\n    },\n    activate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationAssignment"\n    },\n    deactivate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationAssignment"\n    },\n    setUpFeedbackResourcesFolder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationAssignment"\n    },\n    setUpResourcesFolder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationAssignment"\n    }\n  },\n  educationAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationAssignmentDefaults: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationAssignmentResource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationAssignmentResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationAssignmentSettings: {\n    properties: ["gradingCategories|educationGradingCategorys|/[Name]|educationGradingCategory"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    gradingCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationGradingCategorys"\n    }\n  },\n  educationCategory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationClass: {\n    properties: ["assignmentCategories|educationCategorys|/[Name]|educationCategory", "assignments|educationAssignments|/[Name]|educationAssignment", "modules|educationModules|/[Name]|educationModule", "members|educationUsers|/[Name]|educationUser", "schools|educationSchools|/[Name]|educationSchool", "teachers|educationUsers|/[Name]|educationUser"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignmentCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationCategorys"\n    },\n    assignmentDefaults: {\n      returnType: "educationAssignmentDefaults"\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationAssignments"\n    },\n    assignmentSettings: {\n      returnType: "educationAssignmentSettings"\n    },\n    modules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationModules"\n    },\n    group: {\n      returnType: "group"\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationUsers"\n    },\n    schools: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSchools"\n    },\n    teachers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationUsers"\n    }\n  },\n  educationClasss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationFeedbackOutcome: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationFeedbackResourceOutcome: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationGradingCategory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationGradingCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationModule: {\n    properties: ["resources|educationModuleResources|/[Name]|educationModuleResource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationModuleResources"\n    },\n    publish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationModule"\n    },\n    setUpResourcesFolder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationModule"\n    },\n    pin: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationModule"\n    },\n    unpin: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationModule"\n    }\n  },\n  educationModules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationModuleResource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationModuleResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationOrganization: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationOutcome: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationOutcomes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationPointsOutcome: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationRoot: {\n    properties: ["classes|educationClasss|/[Name]|educationClass", "schools|educationSchools|/[Name]|educationSchool", "users|educationUsers|/[Name]|educationUser"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    classes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationClasss"\n    },\n    me: {\n      returnType: "educationUser"\n    },\n    schools: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSchools"\n    },\n    users: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationUsers"\n    }\n  },\n  educationRubric: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationRubrics: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationRubricOutcome: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationSchool: {\n    properties: ["classes|educationClasss|/[Name]|educationClass", "users|educationUsers|/[Name]|educationUser"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    administrativeUnit: {\n      returnType: "administrativeUnit"\n    },\n    classes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationClasss"\n    },\n    users: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationUsers"\n    }\n  },\n  educationSchools: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationSubmission: {\n    properties: ["outcomes|educationOutcomes|/[Name]|educationOutcome", "resources|educationSubmissionResources|/[Name]|educationSubmissionResource", "submittedResources|educationSubmissionResources|/[Name]|educationSubmissionResource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    outcomes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationOutcomes"\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSubmissionResources"\n    },\n    submittedResources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSubmissionResources"\n    },\n    setUpResourcesFolder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    },\n    excuse: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    },\n    reassign: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    },\n    _return: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    },\n    submit: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    },\n    unsubmit: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.educationSubmission"\n    }\n  },\n  educationSubmissions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationSubmissionResource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationSubmissionResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  educationUser: {\n    properties: ["assignments|educationAssignments|/[Name]|educationAssignment", "rubrics|educationRubrics|/[Name]|educationRubric", "classes|educationClasss|/[Name]|educationClass", "schools|educationSchools|/[Name]|educationSchool", "taughtClasses|educationClasss|/[Name]|educationClass"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationAssignments"\n    },\n    rubrics: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationRubrics"\n    },\n    classes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationClasss"\n    },\n    schools: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationSchools"\n    },\n    taughtClasses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "educationClasss"\n    },\n    user: {\n      returnType: "user"\n    }\n  },\n  educationUsers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  emailAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  emailAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  emailAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  emailFileAssessmentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  employeeExperience: {\n    properties: ["communities|communitys|/[Name]|community", "engagementAsyncOperations|engagementAsyncOperations|/[Name]|engagementAsyncOperation", "learningCourseActivities|learningCourseActivitys|/[Name]|learningCourseActivity", "learningProviders|learningProviders|/[Name]|learningProvider"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    communities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "communitys"\n    },\n    engagementAsyncOperations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "engagementAsyncOperations"\n    },\n    learningCourseActivities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "learningCourseActivitys"\n    },\n    learningProviders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "learningProviders"\n    }\n  },\n  employeeExperienceUser: {\n    properties: ["learningCourseActivities|learningCourseActivitys|/[Name]|learningCourseActivity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    learningCourseActivities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "learningCourseActivitys"\n    }\n  },\n  endUserNotification: {\n    properties: ["details|endUserNotificationDetails|/[Name]|endUserNotificationDetail"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    details: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "endUserNotificationDetails"\n    }\n  },\n  endUserNotifications: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  endUserNotificationDetail: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  endUserNotificationDetails: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  endpoint: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  endpoints: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  engagementAsyncOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  engagementAsyncOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  enrollmentConfigurationAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  enrollmentConfigurationAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  enrollmentTroubleshootingEvent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  enterpriseCodeSigningCertificate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  entitlementManagement: {\n    properties: ["accessPackageAssignmentApprovals|approvals|/[Name]|approval", "accessPackages|accessPackages|/[Name]|accessPackage", "assignmentPolicies|accessPackageAssignmentPolicys|/[Name]|accessPackageAssignmentPolicy", "assignmentRequests|accessPackageAssignmentRequests|/[Name]|accessPackageAssignmentRequest", "assignments|accessPackageAssignments|/[Name]|accessPackageAssignment", "catalogs|accessPackageCatalogs|/[Name]|accessPackageCatalog", "connectedOrganizations|connectedOrganizations|/[Name]|connectedOrganization", "resourceEnvironments|accessPackageResourceEnvironments|/[Name]|accessPackageResourceEnvironment", "resourceRequests|accessPackageResourceRequests|/[Name]|accessPackageResourceRequest", "resourceRoleScopes|accessPackageResourceRoleScopes|/[Name]|accessPackageResourceRoleScope", "resources|accessPackageResources|/[Name]|accessPackageResource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    accessPackageAssignmentApprovals: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "approvals"\n    },\n    accessPackages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackages"\n    },\n    assignmentPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageAssignmentPolicys"\n    },\n    assignmentRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageAssignmentRequests"\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageAssignments"\n    },\n    catalogs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageCatalogs"\n    },\n    connectedOrganizations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "connectedOrganizations"\n    },\n    resourceEnvironments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceEnvironments"\n    },\n    resourceRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceRequests"\n    },\n    resourceRoleScopes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResourceRoleScopes"\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "accessPackageResources"\n    },\n    settings: {\n      returnType: "entitlementManagementSettings"\n    }\n  },\n  entitlementManagementSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  entity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  event: {\n    properties: ["attachments|attachments|/[Name]|attachment", "extensions|extensions|/[Name]|extension", "instances|events|/[Name]|event", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attachments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attachments"\n    },\n    calendar: {\n      returnType: "calendar"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    instances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "events"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    },\n    cancel: {\n      argNames: ["Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    accept: {\n      argNames: ["SendResponse", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    decline: {\n      argNames: ["ProposedNewTime", "SendResponse", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    dismissReminder: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    forward: {\n      argNames: ["ToRecipients", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    snoozeReminder: {\n      argNames: ["NewReminderTime"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    tentativelyAccept: {\n      argNames: ["ProposedNewTime", "SendResponse", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  events: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  eventMessage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    event: {\n      returnType: "event"\n    }\n  },\n  eventMessageRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  eventMessageResponse: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  exchangeProtectionPolicy: {\n    properties: ["mailboxInclusionRules|mailboxProtectionRules|/[Name]|mailboxProtectionRule", "mailboxProtectionUnits|mailboxProtectionUnits|/[Name]|mailboxProtectionUnit"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    mailboxInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailboxProtectionRules"\n    },\n    mailboxProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailboxProtectionUnits"\n    }\n  },\n  exchangeProtectionPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  exchangeRestoreSession: {\n    properties: ["granularMailboxRestoreArtifacts|granularMailboxRestoreArtifacts|/[Name]|granularMailboxRestoreArtifact", "mailboxRestoreArtifacts|mailboxRestoreArtifacts|/[Name]|mailboxRestoreArtifact"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    granularMailboxRestoreArtifacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "granularMailboxRestoreArtifacts"\n    },\n    mailboxRestoreArtifacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailboxRestoreArtifacts"\n    }\n  },\n  exchangeRestoreSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  exportSuccessOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resourceLocation: {\n      returnType: "manifest"\n    }\n  },\n  extension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  extensions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  extensionProperty: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  extensionPropertys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  external: {\n    properties: ["connections|externalConnections|/[Name]|externalConnection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    connections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "externalConnections"\n    }\n  },\n  externalActivity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    performedBy: {\n      returnType: "identity"\n    }\n  },\n  externalActivityResult: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  externalConnection: {\n    properties: ["groups|externalGroups|/[Name]|externalGroup", "items|externalItems|/[Name]|externalItem", "operations|connectionOperations|/[Name]|connectionOperation"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    groups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "externalGroups"\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "externalItems"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "connectionOperations"\n    },\n    schema: {\n      returnType: "schema"\n    }\n  },\n  externalDomainName: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  externalDomainNames: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  externalGroup: {\n    properties: ["members|identitys|/[Name]|identity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "identitys"\n    }\n  },\n  externalItem: {\n    properties: ["activities|externalActivitys|/[Name]|externalActivity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "externalActivitys"\n    }\n  },\n  externalUsersSelfServiceSignUpEventsFlow: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  failedOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  featureRolloutPolicy: {\n    properties: ["appliesTo|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appliesTo: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    }\n  },\n  featureRolloutPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  federatedIdentityCredential: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  federatedIdentityCredentials: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fido2AuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fido2AuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fido2AuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  fido2CombinationConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fieldValueSet: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fileAssessmentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fileAttachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  filePlanDescriptor: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authorityTemplate: {\n      returnType: "authorityTemplate"\n    },\n    categoryTemplate: {\n      returnType: "categoryTemplate"\n    },\n    citationTemplate: {\n      returnType: "citationTemplate"\n    },\n    departmentTemplate: {\n      returnType: "departmentTemplate"\n    },\n    filePlanReferenceTemplate: {\n      returnType: "filePlanReferenceTemplate"\n    }\n  },\n  filePlanDescriptorTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  filePlanReferenceTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  fileStorage: {\n    properties: ["containers|fileStorageContainers|/[Name]|fileStorageContainer"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    containers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "fileStorageContainers"\n    }\n  },\n  fileStorageContainer: {\n    properties: ["permissions|permissions|/[Name]|permission"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    drive: {\n      returnType: "drive"\n    },\n    permissions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissions"\n    },\n    permanentDelete: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  fileStorageContainers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  filterOperatorSchema: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  governanceInsight: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  governanceInsights: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  granularMailboxRestoreArtifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  granularMailboxRestoreArtifacts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  group: {\n    properties: ["sets|sets|/[Name]|set"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sets"\n    },\n    assignLicense: {\n      argNames: ["addLicenses", "removeLicenses"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.group"\n    },\n    retryServiceProvisioning: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    checkGrantedPermissionsForApp: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.resourceSpecificPermissionGrant[]"\n    },\n    validateProperties: {\n      argNames: ["displayName", "mailNickname", "onBehalfOfUserId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addFavorite: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    removeFavorite: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resetUnseenCount: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    subscribeByMail: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unsubscribeByMail: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    renew: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  groups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  groupLifecyclePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    addGroup: {\n      argNames: ["groupId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "boolean"\n    },\n    removeGroup: {\n      argNames: ["groupId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "boolean"\n    }\n  },\n  groupLifecyclePolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  groupSetting: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  groupSettings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  groupSettingTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  healthIssue: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  homeRealmDiscoveryPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  homeRealmDiscoveryPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  horizontalSection: {\n    properties: ["columns|horizontalSectionColumns|/[Name]|horizontalSectionColumn"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    columns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "horizontalSectionColumns"\n    }\n  },\n  horizontalSections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  horizontalSectionColumn: {\n    properties: ["webparts|webParts|/[Name]|webPart"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    webparts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "webParts"\n    }\n  },\n  horizontalSectionColumns: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  host: {\n    properties: ["childHostPairs|hostPairs|/[Name]|hostPair", "components|hostComponents|/[Name]|hostComponent", "cookies|hostCookies|/[Name]|hostCookie", "hostPairs|hostPairs|/[Name]|hostPair", "parentHostPairs|hostPairs|/[Name]|hostPair", "passiveDns|passiveDnsRecords|/[Name]|passiveDnsRecord", "passiveDnsReverse|passiveDnsRecords|/[Name]|passiveDnsRecord", "ports|hostPorts|/[Name]|hostPort", "sslCertificates|hostSslCertificates|/[Name]|hostSslCertificate", "subdomains|subdomains|/[Name]|subdomain", "trackers|hostTrackers|/[Name]|hostTracker"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    childHostPairs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPairs"\n    },\n    components: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostComponents"\n    },\n    cookies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostCookies"\n    },\n    hostPairs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPairs"\n    },\n    parentHostPairs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPairs"\n    },\n    passiveDns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "passiveDnsRecords"\n    },\n    passiveDnsReverse: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "passiveDnsRecords"\n    },\n    ports: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPorts"\n    },\n    reputation: {\n      returnType: "hostReputation"\n    },\n    sslCertificates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostSslCertificates"\n    },\n    subdomains: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subdomains"\n    },\n    trackers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostTrackers"\n    },\n    whois: {\n      returnType: "whoisRecord"\n    }\n  },\n  hostComponent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    }\n  },\n  hostCookie: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    }\n  },\n  hostPair: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    childHost: {\n      returnType: "host"\n    },\n    parentHost: {\n      returnType: "host"\n    }\n  },\n  hostPort: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    },\n    mostRecentSslCertificate: {\n      returnType: "sslCertificate"\n    }\n  },\n  hostReputation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  hostSslCertificate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    },\n    sslCertificate: {\n      returnType: "sslCertificate"\n    }\n  },\n  hostTracker: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    }\n  },\n  hostname: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityApiConnector: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    uploadClientCertificate: {\n      argNames: ["pkcs12Value", "password"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.identityApiConnector"\n    }\n  },\n  identityApiConnectors: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityBuiltInUserFlowAttribute: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityContainer: {\n    properties: ["healthIssues|healthIssues|/[Name]|healthIssue", "sensors|sensors|/[Name]|sensor"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    healthIssues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "healthIssues"\n    },\n    sensors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sensors"\n    }\n  },\n  identityCustomUserFlowAttribute: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityGovernance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    lifecycleWorkflows: {\n      returnType: "lifecycleWorkflowsContainer"\n    },\n    accessReviews: {\n      returnType: "accessReviewSet"\n    },\n    appConsent: {\n      returnType: "appConsentApprovalRoute"\n    },\n    termsOfUse: {\n      returnType: "termsOfUseContainer"\n    },\n    entitlementManagement: {\n      returnType: "entitlementManagement"\n    },\n    privilegedAccess: {\n      returnType: "privilegedAccessRoot"\n    }\n  },\n  identityProtectionRoot: {\n    properties: ["riskDetections|riskDetections|/[Name]|riskDetection", "riskyServicePrincipals|riskyServicePrincipals|/[Name]|riskyServicePrincipal", "riskyUsers|riskyUsers|/[Name]|riskyUser", "servicePrincipalRiskDetections|servicePrincipalRiskDetections|/[Name]|servicePrincipalRiskDetection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    riskDetections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "riskDetections"\n    },\n    riskyServicePrincipals: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "riskyServicePrincipals"\n    },\n    riskyUsers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "riskyUsers"\n    },\n    servicePrincipalRiskDetections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "servicePrincipalRiskDetections"\n    }\n  },\n  identityProvider: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityProviders: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityProviderBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityProviderBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identitySecurityDefaultsEnforcementPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityUserFlow: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityUserFlowAttribute: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityUserFlowAttributes: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  identityUserFlowAttributeAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    userAttribute: {\n      returnType: "identityUserFlowAttribute"\n    }\n  },\n  identityUserFlowAttributeAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  importedWindowsAutopilotDeviceIdentity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  importedWindowsAutopilotDeviceIdentitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  importedWindowsAutopilotDeviceIdentityUpload: {\n    properties: ["deviceIdentities|importedWindowsAutopilotDeviceIdentitys|/[Name]|importedWindowsAutopilotDeviceIdentity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceIdentities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "importedWindowsAutopilotDeviceIdentitys"\n    }\n  },\n  incident: {\n    properties: ["alerts|alerts|/[Name]|alert"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    alerts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "alerts"\n    }\n  },\n  indicator: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    artifact: {\n      returnType: "artifact"\n    }\n  },\n  inferenceClassification: {\n    properties: ["overrides|inferenceClassificationOverrides|/[Name]|inferenceClassificationOverride"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    overrides: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "inferenceClassificationOverrides"\n    }\n  },\n  inferenceClassificationOverride: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  inferenceClassificationOverrides: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  informationProtection: {\n    properties: ["threatAssessmentRequests|threatAssessmentRequests|/[Name]|threatAssessmentRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    bitlocker: {\n      returnType: "bitlocker"\n    },\n    threatAssessmentRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "threatAssessmentRequests"\n    }\n  },\n  insights: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  insightsSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  intelligenceProfile: {\n    properties: ["indicators|intelligenceProfileIndicators|/[Name]|intelligenceProfileIndicator"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    indicators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "intelligenceProfileIndicators"\n    }\n  },\n  intelligenceProfileIndicator: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  internalDomainFederation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  internalDomainFederations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  internetExplorerMode: {\n    properties: ["siteLists|browserSiteLists|/[Name]|browserSiteList"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    siteLists: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "browserSiteLists"\n    }\n  },\n  invitation: {\n    properties: ["invitedUserSponsors|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    invitedUser: {\n      returnType: "user"\n    },\n    invitedUserSponsors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    }\n  },\n  inviteParticipantsOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosCertificateProfile: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosCompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosCustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosDeviceFeaturesConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosGeneralDeviceConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosLobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosLobAppProvisioningConfigurationAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosManagedAppProtection: {\n    properties: ["apps|managedMobileApps|/[Name]|managedMobileApp"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    apps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedMobileApps"\n    },\n    deploymentSummary: {\n      returnType: "managedAppPolicyDeploymentSummary"\n    }\n  },\n  iosManagedAppProtections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosManagedAppRegistration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosMobileAppConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosStoreApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosUpdateConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosUpdateDeviceStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosUpdateDeviceStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosVppApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosVppEBook: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosVppEBookAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  iosiPadOSWebClip: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ipAddress: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  ipNamedLocation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  itemActivity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    driveItem: {\n      returnType: "driveItem"\n    }\n  },\n  itemActivitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  itemActivityStat: {\n    properties: ["activities|itemActivitys|/[Name]|itemActivity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "itemActivitys"\n    }\n  },\n  itemActivityStats: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  itemAnalytics: {\n    properties: ["itemActivityStats|itemActivityStats|/[Name]|itemActivityStat"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    allTime: {\n      returnType: "itemActivityStat"\n    },\n    itemActivityStats: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "itemActivityStats"\n    },\n    lastSevenDays: {\n      returnType: "itemActivityStat"\n    }\n  },\n  itemAttachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    item: {\n      returnType: "outlookItem"\n    }\n  },\n  itemInsights: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  itemRetentionLabel: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  labelsRoot: {\n    properties: ["authorities|authorityTemplates|/[Name]|authorityTemplate", "categories|categoryTemplates|/[Name]|categoryTemplate", "citations|citationTemplates|/[Name]|citationTemplate", "departments|departmentTemplates|/[Name]|departmentTemplate", "filePlanReferences|filePlanReferenceTemplates|/[Name]|filePlanReferenceTemplate", "retentionLabels|retentionLabels|/[Name]|retentionLabel"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authorities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authorityTemplates"\n    },\n    categories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "categoryTemplates"\n    },\n    citations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "citationTemplates"\n    },\n    departments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "departmentTemplates"\n    },\n    filePlanReferences: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "filePlanReferenceTemplates"\n    },\n    retentionLabels: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "retentionLabels"\n    }\n  },\n  landingPage: {\n    properties: ["details|landingPageDetails|/[Name]|landingPageDetail"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    details: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "landingPageDetails"\n    }\n  },\n  landingPages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  landingPageDetail: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  landingPageDetails: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningContent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningContents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningCourseActivity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningCourseActivitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningProvider: {\n    properties: ["learningContents|learningContents|/[Name]|learningContent", "learningCourseActivities|learningCourseActivitys|/[Name]|learningCourseActivity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    learningContents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "learningContents"\n    },\n    learningCourseActivities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "learningCourseActivitys"\n    }\n  },\n  learningProviders: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  learningSelfInitiatedCourse: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  licenseDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  licenseDetailss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  lifecycleManagementSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  lifecycleWorkflowsContainer: {\n    properties: ["customTaskExtensions|customTaskExtensions|/[Name]|customTaskExtension", "taskDefinitions|taskDefinitions|/[Name]|taskDefinition", "workflows|workflows|/[Name]|workflow", "workflowTemplates|workflowTemplates|/[Name]|workflowTemplate"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    customTaskExtensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "customTaskExtensions"\n    },\n    deletedItems: {\n      returnType: "deletedItemContainer"\n    },\n    insights: {\n      returnType: "insights"\n    },\n    settings: {\n      returnType: "lifecycleManagementSettings"\n    },\n    taskDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskDefinitions"\n    },\n    workflows: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workflows"\n    },\n    workflowTemplates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workflowTemplates"\n    }\n  },\n  linkedResource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  linkedResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  list: {\n    properties: ["columns|columnDefinitions|/[Name]|columnDefinition", "contentTypes|contentTypes|/[Name]|contentType", "items|listItems|/[Name]|listItem", "operations|richLongRunningOperations|/[Name]|richLongRunningOperation", "subscriptions|subscriptions|/[Name]|subscription"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    columns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnDefinitions"\n    },\n    contentTypes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contentTypes"\n    },\n    drive: {\n      returnType: "drive"\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "listItems"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "richLongRunningOperations"\n    },\n    subscriptions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subscriptions"\n    },\n    update: {\n      argNames: ["values"]\n    }\n  },\n  lists: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  listItem: {\n    properties: ["documentSetVersions|documentSetVersions|/[Name]|documentSetVersion", "versions|listItemVersions|/[Name]|listItemVersion"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    analytics: {\n      returnType: "itemAnalytics"\n    },\n    documentSetVersions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "documentSetVersions"\n    },\n    driveItem: {\n      returnType: "driveItem"\n    },\n    fields: {\n      returnType: "fieldValueSet"\n    },\n    versions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "listItemVersions"\n    },\n    update: {\n      argNames: ["values"]\n    },\n    createLink: {\n      argNames: ["type", "scope", "expirationDateTime", "password", "message", "recipients", "retainInheritedPermissions", "sendNotification"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.permission"\n    },\n    getActivitiesByInterval: {\n      argNames: ["startDateTime", "endDateTime", "interval"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.itemActivityStat[]"\n    }\n  },\n  listItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  listItemVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fields: {\n      returnType: "fieldValueSet"\n    },\n    restoreVersion: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  listItemVersions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  localizedNotificationMessage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  localizedNotificationMessages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  loginPage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  loginPages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  longRunningOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  longRunningOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  m365AppsInstallationOptions: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSCompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSCustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSDeviceFeaturesConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSDmgApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSGeneralDeviceConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSLobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSMicrosoftDefenderApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSMicrosoftEdgeApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  macOSOfficeSuiteApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailAssessmentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailFolder: {\n    properties: ["childFolders|mailFolders|/[Name]|mailFolder", "messageRules|messageRules|/[Name]|messageRule", "messages|messages|/[Name]|message", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    childFolders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailFolders"\n    },\n    messageRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "messageRules"\n    },\n    messages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "messages"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    },\n    copy: {\n      argNames: ["DestinationId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.mailFolder"\n    },\n    move: {\n      argNames: ["DestinationId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.mailFolder"\n    }\n  },\n  mailFolders: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailSearchFolder: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxProtectionRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxProtectionRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxProtectionUnit: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxProtectionUnits: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxRestoreArtifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mailboxRestoreArtifacts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  malwareStateForWindowsDevice: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  malwareStateForWindowsDevices: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAndroidLobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAndroidStoreApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    targetApps: {\n      argNames: ["apps", "appGroupType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  managedAppPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppPolicyDeploymentSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppProtection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    targetApps: {\n      argNames: ["apps", "appGroupType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  managedAppRegistration: {\n    properties: ["appliedPolicies|managedAppPolicys|/[Name]|managedAppPolicy", "intendedPolicies|managedAppPolicys|/[Name]|managedAppPolicy", "operations|managedAppOperations|/[Name]|managedAppOperation"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appliedPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppPolicys"\n    },\n    intendedPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppPolicys"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppOperations"\n    }\n  },\n  managedAppRegistrations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedAppStatusRaw: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDevice: {\n    properties: ["deviceCompliancePolicyStates|deviceCompliancePolicyStates|/[Name]|deviceCompliancePolicyState", "deviceConfigurationStates|deviceConfigurationStates|/[Name]|deviceConfigurationState", "logCollectionRequests|deviceLogCollectionResponses|/[Name]|deviceLogCollectionResponse", "users|users|/[Name]|user"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceCompliancePolicyStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceCompliancePolicyStates"\n    },\n    deviceConfigurationStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceConfigurationStates"\n    },\n    deviceCategory: {\n      returnType: "deviceCategory"\n    },\n    logCollectionRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceLogCollectionResponses"\n    },\n    users: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    },\n    windowsProtectionState: {\n      returnType: "windowsProtectionState"\n    },\n    bypassActivationLock: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    cleanWindowsDevice: {\n      argNames: ["keepUserData"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    deleteUserFromSharedAppleDevice: {\n      argNames: ["userPrincipalName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    disableLostMode: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    locateDevice: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    logoutSharedAppleDeviceActiveUser: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    rebootNow: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    recoverPasscode: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    remoteLock: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    requestRemoteAssistance: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    resetPasscode: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    retire: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    shutDown: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    syncDevice: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    updateWindowsDeviceAccount: {\n      argNames: ["updateWindowsDeviceAccountActionParameter"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    windowsDefenderScan: {\n      argNames: ["quickScan"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    windowsDefenderUpdateSignatures: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    wipe: {\n      argNames: ["keepEnrollmentData", "keepUserData", "macOsUnlockCode", "persistEsimDataPlan"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  managedDevices: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfiguration: {\n    properties: ["assignments|managedDeviceMobileAppConfigurationAssignments|/[Name]|managedDeviceMobileAppConfigurationAssignment", "deviceStatuses|managedDeviceMobileAppConfigurationDeviceStatuss|/[Name]|managedDeviceMobileAppConfigurationDeviceStatus", "userStatuses|managedDeviceMobileAppConfigurationUserStatuss|/[Name]|managedDeviceMobileAppConfigurationUserStatus"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDeviceMobileAppConfigurationAssignments"\n    },\n    deviceStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDeviceMobileAppConfigurationDeviceStatuss"\n    },\n    deviceStatusSummary: {\n      returnType: "managedDeviceMobileAppConfigurationDeviceSummary"\n    },\n    userStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDeviceMobileAppConfigurationUserStatuss"\n    },\n    userStatusSummary: {\n      returnType: "managedDeviceMobileAppConfigurationUserSummary"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  managedDeviceMobileAppConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationDeviceStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationDeviceStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationDeviceSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationUserStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationUserStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceMobileAppConfigurationUserSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedDeviceOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedEBook: {\n    properties: ["assignments|managedEBookAssignments|/[Name]|managedEBookAssignment", "deviceStates|deviceInstallStates|/[Name]|deviceInstallState", "userStateSummary|userInstallStateSummarys|/[Name]|userInstallStateSummary"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedEBookAssignments"\n    },\n    deviceStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceInstallStates"\n    },\n    installSummary: {\n      returnType: "eBookInstallSummary"\n    },\n    userStateSummary: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userInstallStateSummarys"\n    },\n    assign: {\n      argNames: ["managedEBookAssignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  managedEBooks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedEBookAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedEBookAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedIOSLobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedIOSStoreApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedMobileApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedMobileApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  managedMobileLobApp: {\n    properties: ["contentVersions|mobileAppContents|/[Name]|mobileAppContent"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    contentVersions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppContents"\n    }\n  },\n  manifest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mdmWindowsInformationProtectionPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mdmWindowsInformationProtectionPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  meetingAttendanceReport: {\n    properties: ["attendanceRecords|attendanceRecords|/[Name]|attendanceRecord"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attendanceRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attendanceRecords"\n    }\n  },\n  meetingAttendanceReports: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  membershipOutlierInsight: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    container: {\n      returnType: "directoryObject"\n    },\n    lastModifiedBy: {\n      returnType: "user"\n    },\n    member: {\n      returnType: "directoryObject"\n    }\n  },\n  message: {\n    properties: ["attachments|attachments|/[Name]|attachment", "extensions|extensions|/[Name]|extension", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attachments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attachments"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    },\n    forward: {\n      argNames: ["ToRecipients", "Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    copy: {\n      argNames: ["DestinationId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.message"\n    },\n    move: {\n      argNames: ["DestinationId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.message"\n    },\n    createForward: {\n      argNames: ["ToRecipients", "Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.message"\n    },\n    createReply: {\n      argNames: ["Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.message"\n    },\n    createReplyAll: {\n      argNames: ["Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.message"\n    },\n    reply: {\n      argNames: ["Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    replyAll: {\n      argNames: ["Message", "Comment"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    send: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  messages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  messageRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  messageRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  microsoftAccountUserConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  microsoftAuthenticatorAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    device: {\n      returnType: "device"\n    }\n  },\n  microsoftAuthenticatorAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  microsoftAuthenticatorAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|microsoftAuthenticatorAuthenticationMethodTargets|/[Name]|microsoftAuthenticatorAuthenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "microsoftAuthenticatorAuthenticationMethodTargets"\n    }\n  },\n  microsoftAuthenticatorAuthenticationMethodTarget: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  microsoftAuthenticatorAuthenticationMethodTargets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  microsoftStoreForBusinessApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileApp: {\n    properties: ["assignments|mobileAppAssignments|/[Name]|mobileAppAssignment", "categories|mobileAppCategorys|/[Name]|mobileAppCategory"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppAssignments"\n    },\n    categories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppCategorys"\n    },\n    assign: {\n      argNames: ["mobileAppAssignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  mobileApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppCategory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppContent: {\n    properties: ["containedApps|mobileContainedApps|/[Name]|mobileContainedApp", "files|mobileAppContentFiles|/[Name]|mobileAppContentFile"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    containedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileContainedApps"\n    },\n    files: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppContentFiles"\n    }\n  },\n  mobileAppContents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppContentFile: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    commit: {\n      argNames: ["fileEncryptionInfo"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    renewUpload: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  mobileAppContentFiles: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileAppTroubleshootingEvent: {\n    properties: ["appLogCollectionRequests|appLogCollectionRequests|/[Name]|appLogCollectionRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appLogCollectionRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appLogCollectionRequests"\n    }\n  },\n  mobileAppTroubleshootingEvents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileContainedApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileContainedApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileLobApp: {\n    properties: ["contentVersions|mobileAppContents|/[Name]|mobileAppContent"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    contentVersions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileAppContents"\n    }\n  },\n  mobileThreatDefenseConnector: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  mobileThreatDefenseConnectors: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiTenantOrganization: {\n    properties: ["tenants|multiTenantOrganizationMembers|/[Name]|multiTenantOrganizationMember"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    joinRequest: {\n      returnType: "multiTenantOrganizationJoinRequestRecord"\n    },\n    tenants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiTenantOrganizationMembers"\n    }\n  },\n  multiTenantOrganizationIdentitySyncPolicyTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiTenantOrganizationJoinRequestRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiTenantOrganizationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiTenantOrganizationMembers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiTenantOrganizationPartnerConfigurationTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiValueLegacyExtendedProperty: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  multiValueLegacyExtendedPropertys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  muteParticipantOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  namedLocation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  namedLocations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  networkAdapter: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  notebook: {\n    properties: ["sectionGroups|sectionGroups|/[Name]|sectionGroup", "sections|onenoteSections|/[Name]|onenoteSection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sectionGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sectionGroups"\n    },\n    sections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenoteSections"\n    },\n    copyNotebook: {\n      argNames: ["groupId", "renameAs", "notebookFolder", "siteCollectionId", "siteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.onenoteOperation"\n    }\n  },\n  notebooks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  notificationMessageTemplate: {\n    properties: ["localizedNotificationMessages|localizedNotificationMessages|/[Name]|localizedNotificationMessage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    localizedNotificationMessages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "localizedNotificationMessages"\n    },\n    sendTestMessage: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  notificationMessageTemplates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  oAuth2PermissionGrant: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  oAuth2PermissionGrants: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  offerShiftRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  offerShiftRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  officeGraphInsights: {\n    properties: ["shared|sharedInsights|/[Name]|sharedInsight", "trending|trendings|/[Name]|trending", "used|usedInsights|/[Name]|usedInsight"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    shared: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sharedInsights"\n    },\n    trending: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "trendings"\n    },\n    used: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "usedInsights"\n    }\n  },\n  onAttributeCollectionListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onAuthenticationMethodLoadStartListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onInteractiveAuthFlowStartListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onPremisesConditionalAccessSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onPremisesDirectorySynchronization: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onPremisesDirectorySynchronizations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onTokenIssuanceStartCustomExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onTokenIssuanceStartListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onUserCreateStartListener: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  oneDriveForBusinessProtectionPolicy: {\n    properties: ["driveInclusionRules|driveProtectionRules|/[Name]|driveProtectionRule", "driveProtectionUnits|driveProtectionUnits|/[Name]|driveProtectionUnit"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    driveInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveProtectionRules"\n    },\n    driveProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveProtectionUnits"\n    }\n  },\n  oneDriveForBusinessProtectionPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  oneDriveForBusinessRestoreSession: {\n    properties: ["driveRestoreArtifacts|driveRestoreArtifacts|/[Name]|driveRestoreArtifact"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    driveRestoreArtifacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveRestoreArtifacts"\n    }\n  },\n  oneDriveForBusinessRestoreSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenote: {\n    properties: ["notebooks|notebooks|/[Name]|notebook", "operations|onenoteOperations|/[Name]|onenoteOperation", "pages|onenotePages|/[Name]|onenotePage", "resources|onenoteResources|/[Name]|onenoteResource", "sectionGroups|sectionGroups|/[Name]|sectionGroup", "sections|onenoteSections|/[Name]|onenoteSection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    notebooks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "notebooks"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenoteOperations"\n    },\n    pages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenotePages"\n    },\n    resources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenoteResources"\n    },\n    sectionGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sectionGroups"\n    },\n    sections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenoteSections"\n    }\n  },\n  onenoteEntityBaseModel: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteEntityHierarchyModel: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteEntitySchemaObjectModel: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenotePage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    parentNotebook: {\n      returnType: "notebook"\n    },\n    parentSection: {\n      returnType: "onenoteSection"\n    },\n    copyToSection: {\n      argNames: ["id", "groupId", "siteCollectionId", "siteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.onenoteOperation"\n    },\n    onenotePatchContent: {\n      argNames: ["commands"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    preview: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.onenotePagePreview"\n    }\n  },\n  onenotePages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteResource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteResources: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onenoteSection: {\n    properties: ["pages|onenotePages|/[Name]|onenotePage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    pages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenotePages"\n    },\n    parentNotebook: {\n      returnType: "notebook"\n    },\n    parentSectionGroup: {\n      returnType: "sectionGroup"\n    },\n    copyToNotebook: {\n      argNames: ["id", "groupId", "renameAs", "siteCollectionId", "siteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.onenoteOperation"\n    },\n    copyToSectionGroup: {\n      argNames: ["id", "groupId", "renameAs", "siteCollectionId", "siteId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.onenoteOperation"\n    }\n  },\n  onenoteSections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onlineMeeting: {\n    properties: ["recordings|callRecordings|/[Name]|callRecording", "transcripts|callTranscripts|/[Name]|callTranscript"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    recordings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "callRecordings"\n    },\n    transcripts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "callTranscripts"\n    },\n    sendVirtualAppointmentReminderSms: {\n      argNames: ["remindBeforeTimeInMinutesType", "attendees"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    sendVirtualAppointmentSms: {\n      argNames: ["messageType", "attendees"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getVirtualAppointmentJoinWebUrl: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "string"\n    }\n  },\n  onlineMeetings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  onlineMeetingBase: {\n    properties: ["attendanceReports|meetingAttendanceReports|/[Name]|meetingAttendanceReport"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attendanceReports: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "meetingAttendanceReports"\n    }\n  },\n  openShift: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  openShifts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  openShiftChangeRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  openShiftChangeRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  openTypeExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  operation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  orgContact: {\n    properties: ["directReports|directoryObjects|/[Name]|directoryObject", "memberOf|directoryObjects|/[Name]|directoryObject", "transitiveMemberOf|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    directReports: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    manager: {\n      returnType: "directoryObject"\n    },\n    memberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    transitiveMemberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    retryServiceProvisioning: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  organization: {\n    properties: ["certificateBasedAuthConfiguration|certificateBasedAuthConfigurations|/[Name]|certificateBasedAuthConfiguration", "extensions|extensions|/[Name]|extension"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    branding: {\n      returnType: "organizationalBranding"\n    },\n    certificateBasedAuthConfiguration: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "certificateBasedAuthConfigurations"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    setMobileDeviceManagementAuthority: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "number"\n    }\n  },\n  organizationalBranding: {\n    properties: ["localizations|organizationalBrandingLocalizations|/[Name]|organizationalBrandingLocalization"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    localizations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "organizationalBrandingLocalizations"\n    }\n  },\n  organizationalBrandingLocalization: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  organizationalBrandingLocalizations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  organizationalBrandingProperties: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  organizer: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  outlookCategory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  outlookCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  outlookItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  outlookUser: {\n    properties: ["masterCategories|outlookCategorys|/[Name]|outlookCategory"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    masterCategories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "outlookCategorys"\n    }\n  },\n  participant: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    mute: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.muteParticipantOperation"\n    },\n    startHoldMusic: {\n      argNames: ["customPrompt", "clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.startHoldMusicOperation"\n    },\n    stopHoldMusic: {\n      argNames: ["clientContext"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.stopHoldMusicOperation"\n    }\n  },\n  participants: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  participantBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  participantJoiningNotification: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    call: {\n      returnType: "call"\n    }\n  },\n  participantLeftNotification: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    call: {\n      returnType: "call"\n    }\n  },\n  partners: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    billing: {\n      returnType: "billing"\n    }\n  },\n  passiveDnsRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    artifact: {\n      returnType: "artifact"\n    },\n    parentHost: {\n      returnType: "host"\n    }\n  },\n  passwordAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  passwordAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  payload: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  payloads: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  peopleAdminSettings: {\n    properties: ["profileCardProperties|profileCardPropertys|/[Name]|profileCardProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    profileCardProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "profileCardPropertys"\n    },\n    pronouns: {\n      returnType: "pronounsSettings"\n    },\n    itemInsights: {\n      returnType: "insightsSettings"\n    }\n  },\n  permission: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    update: {\n      argNames: ["values"]\n    },\n    grant: {\n      argNames: ["roles", "recipients"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.permission[]"\n    }\n  },\n  permissions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  permissionGrantConditionSet: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  permissionGrantConditionSets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  permissionGrantPolicy: {\n    properties: ["excludes|permissionGrantConditionSets|/[Name]|permissionGrantConditionSet", "includes|permissionGrantConditionSets|/[Name]|permissionGrantConditionSet"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    excludes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissionGrantConditionSets"\n    },\n    includes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissionGrantConditionSets"\n    }\n  },\n  permissionGrantPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  person: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  persons: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  phoneAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    disableSmsSignIn: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    enableSmsSignIn: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  phoneAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  pinnedChatMessageInfo: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    message: {\n      returnType: "chatMessage"\n    }\n  },\n  pinnedChatMessageInfos: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  place: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  planner: {\n    properties: ["buckets|plannerBuckets|/[Name]|plannerBucket", "plans|plannerPlans|/[Name]|plannerPlan", "tasks|plannerTasks|/[Name]|plannerTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    buckets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerBuckets"\n    },\n    plans: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerPlans"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerTasks"\n    }\n  },\n  plannerAssignedToTaskBoardTaskFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerBucket: {\n    properties: ["tasks|plannerTasks|/[Name]|plannerTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerTasks"\n    }\n  },\n  plannerBuckets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerBucketTaskBoardTaskFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerGroup: {\n    properties: ["plans|plannerPlans|/[Name]|plannerPlan"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    plans: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerPlans"\n    }\n  },\n  plannerPlan: {\n    properties: ["buckets|plannerBuckets|/[Name]|plannerBucket", "tasks|plannerTasks|/[Name]|plannerTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    buckets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerBuckets"\n    },\n    details: {\n      returnType: "plannerPlanDetails"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerTasks"\n    }\n  },\n  plannerPlans: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerPlanDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerProgressTaskBoardTaskFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerTask: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignedToTaskBoardFormat: {\n      returnType: "plannerAssignedToTaskBoardTaskFormat"\n    },\n    bucketTaskBoardFormat: {\n      returnType: "plannerBucketTaskBoardTaskFormat"\n    },\n    details: {\n      returnType: "plannerTaskDetails"\n    },\n    progressTaskBoardFormat: {\n      returnType: "plannerProgressTaskBoardTaskFormat"\n    }\n  },\n  plannerTasks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerTaskDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  plannerUser: {\n    properties: ["plans|plannerPlans|/[Name]|plannerPlan", "tasks|plannerTasks|/[Name]|plannerTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    plans: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerPlans"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "plannerTasks"\n    }\n  },\n  playPromptOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  policyBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  policyRoot: {\n    properties: ["authenticationStrengthPolicies|authenticationStrengthPolicys|/[Name]|authenticationStrengthPolicy", "activityBasedTimeoutPolicies|activityBasedTimeoutPolicys|/[Name]|activityBasedTimeoutPolicy", "appManagementPolicies|appManagementPolicys|/[Name]|appManagementPolicy", "claimsMappingPolicies|claimsMappingPolicys|/[Name]|claimsMappingPolicy", "homeRealmDiscoveryPolicies|homeRealmDiscoveryPolicys|/[Name]|homeRealmDiscoveryPolicy", "permissionGrantPolicies|permissionGrantPolicys|/[Name]|permissionGrantPolicy", "tokenIssuancePolicies|tokenIssuancePolicys|/[Name]|tokenIssuancePolicy", "tokenLifetimePolicies|tokenLifetimePolicys|/[Name]|tokenLifetimePolicy", "featureRolloutPolicies|featureRolloutPolicys|/[Name]|featureRolloutPolicy", "conditionalAccessPolicies|conditionalAccessPolicys|/[Name]|conditionalAccessPolicy", "roleManagementPolicies|unifiedRoleManagementPolicys|/[Name]|unifiedRoleManagementPolicy", "roleManagementPolicyAssignments|unifiedRoleManagementPolicyAssignments|/[Name]|unifiedRoleManagementPolicyAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authenticationMethodsPolicy: {\n      returnType: "authenticationMethodsPolicy"\n    },\n    authenticationStrengthPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationStrengthPolicys"\n    },\n    authenticationFlowsPolicy: {\n      returnType: "authenticationFlowsPolicy"\n    },\n    deviceRegistrationPolicy: {\n      returnType: "deviceRegistrationPolicy"\n    },\n    activityBasedTimeoutPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "activityBasedTimeoutPolicys"\n    },\n    appManagementPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appManagementPolicys"\n    },\n    authorizationPolicy: {\n      returnType: "authorizationPolicy"\n    },\n    claimsMappingPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "claimsMappingPolicys"\n    },\n    crossTenantAccessPolicy: {\n      returnType: "crossTenantAccessPolicy"\n    },\n    defaultAppManagementPolicy: {\n      returnType: "tenantAppManagementPolicy"\n    },\n    homeRealmDiscoveryPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "homeRealmDiscoveryPolicys"\n    },\n    permissionGrantPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissionGrantPolicys"\n    },\n    tokenIssuancePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenIssuancePolicys"\n    },\n    tokenLifetimePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenLifetimePolicys"\n    },\n    featureRolloutPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "featureRolloutPolicys"\n    },\n    adminConsentRequestPolicy: {\n      returnType: "adminConsentRequestPolicy"\n    },\n    conditionalAccessPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conditionalAccessPolicys"\n    },\n    identitySecurityDefaultsEnforcementPolicy: {\n      returnType: "identitySecurityDefaultsEnforcementPolicy"\n    },\n    roleManagementPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleManagementPolicys"\n    },\n    roleManagementPolicyAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleManagementPolicyAssignments"\n    }\n  },\n  policyTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    multiTenantOrganizationIdentitySynchronization: {\n      returnType: "multiTenantOrganizationIdentitySyncPolicyTemplate"\n    },\n    multiTenantOrganizationPartnerConfiguration: {\n      returnType: "multiTenantOrganizationPartnerConfigurationTemplate"\n    }\n  },\n  post: {\n    properties: ["attachments|attachments|/[Name]|attachment", "extensions|extensions|/[Name]|extension", "multiValueExtendedProperties|multiValueLegacyExtendedPropertys|/[Name]|multiValueLegacyExtendedProperty", "singleValueExtendedProperties|singleValueLegacyExtendedPropertys|/[Name]|singleValueLegacyExtendedProperty"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attachments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attachments"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    inReplyTo: {\n      returnType: "post"\n    },\n    multiValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "multiValueLegacyExtendedPropertys"\n    },\n    singleValueExtendedProperties: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "singleValueLegacyExtendedPropertys"\n    },\n    forward: {\n      argNames: ["Comment", "ToRecipients"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    reply: {\n      argNames: ["Post"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  posts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  presence: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    clearPresence: {\n      argNames: ["sessionId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    clearUserPreferredPresence: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setPresence: {\n      argNames: ["sessionId", "availability", "activity", "expirationDuration"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setStatusMessage: {\n      argNames: ["statusMessage"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    setUserPreferredPresence: {\n      argNames: ["availability", "activity", "expirationDuration"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  presences: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  print: {\n    properties: ["connectors|printConnectors|/[Name]|printConnector", "operations|printOperations|/[Name]|printOperation", "printers|printers|/[Name]|printer", "services|printServices|/[Name]|printService", "shares|printerShares|/[Name]|printerShare", "taskDefinitions|printTaskDefinitions|/[Name]|printTaskDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    connectors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printConnectors"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printOperations"\n    },\n    printers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printers"\n    },\n    services: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printServices"\n    },\n    shares: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printerShares"\n    },\n    taskDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printTaskDefinitions"\n    }\n  },\n  printConnector: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printConnectors: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printDocument: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createUploadSession: {\n      argNames: ["properties"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.uploadSession"\n    }\n  },\n  printDocuments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printJob: {\n    properties: ["documents|printDocuments|/[Name]|printDocument", "tasks|printTasks|/[Name]|printTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    documents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printDocuments"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printTasks"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    start: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.printJobStatus"\n    },\n    abort: {\n      argNames: ["reason"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    redirect: {\n      argNames: ["destinationPrinterId", "configuration"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.printJob"\n    }\n  },\n  printJobs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printService: {\n    properties: ["endpoints|printServiceEndpoints|/[Name]|printServiceEndpoint"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    endpoints: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printServiceEndpoints"\n    }\n  },\n  printServices: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printServiceEndpoint: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printServiceEndpoints: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printTask: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    definition: {\n      returnType: "printTaskDefinition"\n    },\n    trigger: {\n      returnType: "printTaskTrigger"\n    }\n  },\n  printTasks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printTaskDefinition: {\n    properties: ["tasks|printTasks|/[Name]|printTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printTasks"\n    }\n  },\n  printTaskDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printTaskTrigger: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    definition: {\n      returnType: "printTaskDefinition"\n    }\n  },\n  printTaskTriggers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printUsage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printUsageByPrinter: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printUsageByPrinters: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printUsageByUser: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printUsageByUsers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printer: {\n    properties: ["connectors|printConnectors|/[Name]|printConnector", "shares|printerShares|/[Name]|printerShare", "taskTriggers|printTaskTriggers|/[Name]|printTaskTrigger"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    connectors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printConnectors"\n    },\n    shares: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printerShares"\n    },\n    taskTriggers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printTaskTriggers"\n    },\n    restoreFactoryDefaults: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  printers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  printerBase: {\n    properties: ["jobs|printJobs|/[Name]|printJob"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    jobs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printJobs"\n    }\n  },\n  printerCreateOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    printer: {\n      returnType: "printer"\n    }\n  },\n  printerShare: {\n    properties: ["allowedGroups|groups|/[Name]|group", "allowedUsers|users|/[Name]|user"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    allowedGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "groups"\n    },\n    allowedUsers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    },\n    printer: {\n      returnType: "printer"\n    }\n  },\n  printerShares: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privacy: {\n    properties: ["subjectRightsRequests|subjectRightsRequests|/[Name]|subjectRightsRequest"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    subjectRightsRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subjectRightsRequests"\n    }\n  },\n  privilegedAccessGroup: {\n    properties: ["assignmentApprovals|approvals|/[Name]|approval", "assignmentScheduleInstances|privilegedAccessGroupAssignmentScheduleInstances|/[Name]|privilegedAccessGroupAssignmentScheduleInstance", "assignmentScheduleRequests|privilegedAccessGroupAssignmentScheduleRequests|/[Name]|privilegedAccessGroupAssignmentScheduleRequest", "assignmentSchedules|privilegedAccessGroupAssignmentSchedules|/[Name]|privilegedAccessGroupAssignmentSchedule", "eligibilityScheduleInstances|privilegedAccessGroupEligibilityScheduleInstances|/[Name]|privilegedAccessGroupEligibilityScheduleInstance", "eligibilityScheduleRequests|privilegedAccessGroupEligibilityScheduleRequests|/[Name]|privilegedAccessGroupEligibilityScheduleRequest", "eligibilitySchedules|privilegedAccessGroupEligibilitySchedules|/[Name]|privilegedAccessGroupEligibilitySchedule"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignmentApprovals: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "approvals"\n    },\n    assignmentScheduleInstances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupAssignmentScheduleInstances"\n    },\n    assignmentScheduleRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupAssignmentScheduleRequests"\n    },\n    assignmentSchedules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupAssignmentSchedules"\n    },\n    eligibilityScheduleInstances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupEligibilityScheduleInstances"\n    },\n    eligibilityScheduleRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupEligibilityScheduleRequests"\n    },\n    eligibilitySchedules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "privilegedAccessGroupEligibilitySchedules"\n    }\n  },\n  privilegedAccessGroupAssignmentSchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "privilegedAccessGroupEligibilitySchedule"\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    }\n  },\n  privilegedAccessGroupAssignmentSchedules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessGroupAssignmentScheduleInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "privilegedAccessGroupEligibilityScheduleInstance"\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    }\n  },\n  privilegedAccessGroupAssignmentScheduleInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessGroupAssignmentScheduleRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "privilegedAccessGroupEligibilitySchedule"\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    targetSchedule: {\n      returnType: "privilegedAccessGroupEligibilitySchedule"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  privilegedAccessGroupAssignmentScheduleRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessGroupEligibilitySchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    }\n  },\n  privilegedAccessGroupEligibilitySchedules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessGroupEligibilityScheduleInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    }\n  },\n  privilegedAccessGroupEligibilityScheduleInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessGroupEligibilityScheduleRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "group"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    targetSchedule: {\n      returnType: "privilegedAccessGroupEligibilitySchedule"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  privilegedAccessGroupEligibilityScheduleRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessRoot: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "privilegedAccessGroup"\n    }\n  },\n  privilegedAccessSchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessScheduleInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  privilegedAccessScheduleRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  profileCardProperty: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  profileCardPropertys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  profilePhoto: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  profilePhotos: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  pronounsSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  protectionPolicyBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.protectionPolicyBase"\n    },\n    deactivate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.protectionPolicyBase"\n    }\n  },\n  protectionPolicyBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  protectionRuleBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    run: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.protectionRuleBase"\n    }\n  },\n  protectionUnitBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  protectionUnitBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  provisioningObjectSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  provisioningObjectSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  qna: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  rbacApplication: {\n    properties: ["resourceNamespaces|unifiedRbacResourceNamespaces|/[Name]|unifiedRbacResourceNamespace", "roleAssignments|unifiedRoleAssignments|/[Name]|unifiedRoleAssignment", "roleDefinitions|unifiedRoleDefinitions|/[Name]|unifiedRoleDefinition", "roleAssignmentScheduleInstances|unifiedRoleAssignmentScheduleInstances|/[Name]|unifiedRoleAssignmentScheduleInstance", "roleAssignmentScheduleRequests|unifiedRoleAssignmentScheduleRequests|/[Name]|unifiedRoleAssignmentScheduleRequest", "roleAssignmentSchedules|unifiedRoleAssignmentSchedules|/[Name]|unifiedRoleAssignmentSchedule", "roleEligibilityScheduleInstances|unifiedRoleEligibilityScheduleInstances|/[Name]|unifiedRoleEligibilityScheduleInstance", "roleEligibilityScheduleRequests|unifiedRoleEligibilityScheduleRequests|/[Name]|unifiedRoleEligibilityScheduleRequest", "roleEligibilitySchedules|unifiedRoleEligibilitySchedules|/[Name]|unifiedRoleEligibilitySchedule"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resourceNamespaces: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRbacResourceNamespaces"\n    },\n    roleAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleAssignments"\n    },\n    roleDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleDefinitions"\n    },\n    roleAssignmentScheduleInstances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleAssignmentScheduleInstances"\n    },\n    roleAssignmentScheduleRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleAssignmentScheduleRequests"\n    },\n    roleAssignmentSchedules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleAssignmentSchedules"\n    },\n    roleEligibilityScheduleInstances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleEligibilityScheduleInstances"\n    },\n    roleEligibilityScheduleRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleEligibilityScheduleRequests"\n    },\n    roleEligibilitySchedules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleEligibilitySchedules"\n    }\n  },\n  recordOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  referenceAttachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  relation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fromTerm: {\n      returnType: "term"\n    },\n    set: {\n      returnType: "set"\n    },\n    toTerm: {\n      returnType: "term"\n    }\n  },\n  relyingPartyDetailedSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  remoteAssistancePartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    beginOnboarding: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    disconnect: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  remoteAssistancePartners: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  remoteDesktopSecurityConfiguration: {\n    properties: ["targetDeviceGroups|targetDeviceGroups|/[Name]|targetDeviceGroup"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    targetDeviceGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "targetDeviceGroups"\n    }\n  },\n  reportRoot: {\n    properties: ["dailyPrintUsageByPrinter|printUsageByPrinters|/[Name]|printUsageByPrinter", "dailyPrintUsageByUser|printUsageByUsers|/[Name]|printUsageByUser", "monthlyPrintUsageByPrinter|printUsageByPrinters|/[Name]|printUsageByPrinter", "monthlyPrintUsageByUser|printUsageByUsers|/[Name]|printUsageByUser"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    authenticationMethods: {\n      returnType: "authenticationMethodsRoot"\n    },\n    partners: {\n      returnType: "partners"\n    },\n    dailyPrintUsageByPrinter: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printUsageByPrinters"\n    },\n    dailyPrintUsageByUser: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printUsageByUsers"\n    },\n    monthlyPrintUsageByPrinter: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printUsageByPrinters"\n    },\n    monthlyPrintUsageByUser: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "printUsageByUsers"\n    },\n    security: {\n      returnType: "securityReportsRoot"\n    },\n    deviceConfigurationDeviceActivity: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    deviceConfigurationUserActivity: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    managedDeviceEnrollmentFailureDetails: {\n      argNames: ["skip", "top", "filter", "skipToken"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    managedDeviceEnrollmentTopFailures: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ActivationCounts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ActivationsUserCounts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ActivationsUserDetail: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ActiveUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ActiveUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365GroupsActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365GroupsActivityDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365GroupsActivityFileCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365GroupsActivityGroupCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365GroupsActivityStorage: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOffice365ServicesUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveActivityFileCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveActivityUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveUsageAccountCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveUsageAccountDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveUsageFileCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getOneDriveUsageStorage: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointActivityFileCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointActivityPages: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointActivityUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointSiteUsageDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointSiteUsageFileCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointSiteUsagePages: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointSiteUsageSiteCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSharePointSiteUsageStorage: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessActivityUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessDeviceUsageDistributionUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessDeviceUsageUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessDeviceUsageUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessOrganizerActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessOrganizerActivityMinuteCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessOrganizerActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessParticipantActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessParticipantActivityMinuteCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessParticipantActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessPeerToPeerActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessPeerToPeerActivityMinuteCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getSkypeForBusinessPeerToPeerActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerActivityUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerActivityUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerDeviceUsageDistributionUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerDeviceUsageUserCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerDeviceUsageUserDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerGroupsActivityCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerGroupsActivityDetail: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getYammerGroupsActivityGroupCounts: {\n      argNames: ["period"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.report"\n    },\n    getGroupArchivedPrintJobs: {\n      argNames: ["groupId", "startDateTime", "endDateTime"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.archivedPrintJob[]"\n    },\n    getPrinterArchivedPrintJobs: {\n      argNames: ["printerId", "startDateTime", "endDateTime"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.archivedPrintJob[]"\n    },\n    getUserArchivedPrintJobs: {\n      argNames: ["userId", "startDateTime", "endDateTime"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.archivedPrintJob[]"\n    }\n  },\n  request: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  resellerDelegatedAdminRelationship: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  resourceOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  resourceOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  resourceSpecificPermissionGrant: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  resourceSpecificPermissionGrants: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  restoreArtifactBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    restorePoint: {\n      returnType: "restorePoint"\n    }\n  },\n  restorePoint: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    protectionUnit: {\n      returnType: "protectionUnitBase"\n    }\n  },\n  restorePoints: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  restoreSessionBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.restoreSessionBase"\n    }\n  },\n  restoreSessionBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  retentionEvent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    retentionEventType: {\n      returnType: "retentionEventType"\n    }\n  },\n  retentionEventType: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  retentionLabel: {\n    properties: ["dispositionReviewStages|dispositionReviewStages|/[Name]|dispositionReviewStage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    descriptors: {\n      returnType: "filePlanDescriptor"\n    },\n    dispositionReviewStages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "dispositionReviewStages"\n    },\n    retentionEventType: {\n      returnType: "retentionEventType"\n    }\n  },\n  richLongRunningOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  richLongRunningOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskDetection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskDetections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyServicePrincipal: {\n    properties: ["history|riskyServicePrincipalHistoryItems|/[Name]|riskyServicePrincipalHistoryItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    history: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "riskyServicePrincipalHistoryItems"\n    }\n  },\n  riskyServicePrincipals: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyServicePrincipalHistoryItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyServicePrincipalHistoryItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyUser: {\n    properties: ["history|riskyUserHistoryItems|/[Name]|riskyUserHistoryItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    history: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "riskyUserHistoryItems"\n    }\n  },\n  riskyUsers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyUserHistoryItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  riskyUserHistoryItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  roleAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    roleDefinition: {\n      returnType: "roleDefinition"\n    }\n  },\n  roleAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  roleDefinition: {\n    properties: ["roleAssignments|roleAssignments|/[Name]|roleAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    roleAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "roleAssignments"\n    }\n  },\n  roleDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  roleManagement: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    directory: {\n      returnType: "rbacApplication"\n    },\n    entitlementManagement: {\n      returnType: "rbacApplication"\n    }\n  },\n  room: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  rooms: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  roomList: {\n    properties: ["rooms|rooms|/[Name]|room"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    rooms: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "rooms"\n    }\n  },\n  run: {\n    properties: ["taskProcessingResults|taskProcessingResults|/[Name]|taskProcessingResult", "userProcessingResults|userProcessingResults|/[Name]|userProcessingResult"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    taskProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskProcessingResults"\n    },\n    userProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userProcessingResults"\n    }\n  },\n  runningOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  samlOrWsFedExternalDomainFederation: {\n    properties: ["domains|externalDomainNames|/[Name]|externalDomainName"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    domains: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "externalDomainNames"\n    }\n  },\n  samlOrWsFedProvider: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  schedule: {\n    properties: ["offerShiftRequests|offerShiftRequests|/[Name]|offerShiftRequest", "openShiftChangeRequests|openShiftChangeRequests|/[Name]|openShiftChangeRequest", "openShifts|openShifts|/[Name]|openShift", "schedulingGroups|schedulingGroups|/[Name]|schedulingGroup", "shifts|shifts|/[Name]|shift", "swapShiftsChangeRequests|swapShiftsChangeRequests|/[Name]|swapShiftsChangeRequest", "timeOffReasons|timeOffReasons|/[Name]|timeOffReason", "timeOffRequests|timeOffRequests|/[Name]|timeOffRequest", "timesOff|timeOffs|/[Name]|timeOff"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    offerShiftRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "offerShiftRequests"\n    },\n    openShiftChangeRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "openShiftChangeRequests"\n    },\n    openShifts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "openShifts"\n    },\n    schedulingGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "schedulingGroups"\n    },\n    shifts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "shifts"\n    },\n    swapShiftsChangeRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "swapShiftsChangeRequests"\n    },\n    timeOffReasons: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "timeOffReasons"\n    },\n    timeOffRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "timeOffRequests"\n    },\n    timesOff: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "timeOffs"\n    },\n    share: {\n      argNames: ["notifyTeam", "startDateTime", "endDateTime"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  scheduleChangeRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    decline: {\n      argNames: ["message"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    approve: {\n      argNames: ["message"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  schedulingGroup: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  schedulingGroups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  schema: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  schemaExtension: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  scopedRoleMembership: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  scopedRoleMemberships: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  search: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  searchAnswer: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  searchEntity: {\n    properties: ["acronyms|acronyms|/[Name]|acronym", "bookmarks|bookmarks|/[Name]|bookmark", "qnas|qnas|/[Name]|qna"],\n    acronyms: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "acronyms"\n    },\n    bookmarks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookmarks"\n    },\n    qnas: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "qnas"\n    },\n    query: {\n      argNames: ["requests"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.searchResponse[]"\n    }\n  },\n  sectionGroup: {\n    properties: ["sectionGroups|sectionGroups|/[Name]|sectionGroup", "sections|onenoteSections|/[Name]|onenoteSection"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    parentNotebook: {\n      returnType: "notebook"\n    },\n    parentSectionGroup: {\n      returnType: "sectionGroup"\n    },\n    sectionGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sectionGroups"\n    },\n    sections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onenoteSections"\n    }\n  },\n  sectionGroups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  secureScore: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  secureScores: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  secureScoreControlProfile: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  secureScoreControlProfiles: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  security: {\n    properties: ["subjectRightsRequests|subjectRightsRequests|/[Name]|subjectRightsRequest", "alerts_v2|alerts|/[Name]|alert", "incidents|incidents|/[Name]|incident", "alerts|alerts|/[Name]|alert", "secureScoreControlProfiles|secureScoreControlProfiles|/[Name]|secureScoreControlProfile", "secureScores|secureScores|/[Name]|secureScore"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    subjectRightsRequests: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subjectRightsRequests"\n    },\n    cases: {\n      returnType: "casesRoot"\n    },\n    identities: {\n      returnType: "identityContainer"\n    },\n    alerts_v2: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "alerts"\n    },\n    incidents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "incidents"\n    },\n    attackSimulation: {\n      returnType: "attackSimulationRoot"\n    },\n    labels: {\n      returnType: "labelsRoot"\n    },\n    triggers: {\n      returnType: "triggersRoot"\n    },\n    triggerTypes: {\n      returnType: "triggerTypesRoot"\n    },\n    alerts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "alerts"\n    },\n    secureScoreControlProfiles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "secureScoreControlProfiles"\n    },\n    secureScores: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "secureScores"\n    },\n    threatIntelligence: {\n      returnType: "threatIntelligence"\n    },\n    runHuntingQuery: {\n      argNames: ["query", "timespan"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.huntingQueryResults"\n    }\n  },\n  securityReportsRoot: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    getAttackSimulationRepeatOffenders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.attackSimulationRepeatOffender[]"\n    },\n    getAttackSimulationSimulationUserCoverage: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.attackSimulationSimulationUserCoverage[]"\n    },\n    getAttackSimulationTrainingUserCoverage: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.attackSimulationTrainingUserCoverage[]"\n    }\n  },\n  segment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sendDtmfTonesOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sensor: {\n    properties: ["healthIssues|healthIssues|/[Name]|healthIssue"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    healthIssues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "healthIssues"\n    }\n  },\n  serviceAnnouncement: {\n    properties: ["healthOverviews|serviceHealths|/[Name]|serviceHealth", "issues|serviceHealthIssues|/[Name]|serviceHealthIssue", "messages|serviceUpdateMessages|/[Name]|serviceUpdateMessage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    healthOverviews: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceHealths"\n    },\n    issues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceHealthIssues"\n    },\n    messages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceUpdateMessages"\n    }\n  },\n  serviceAnnouncementAttachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceAnnouncementAttachments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceAnnouncementBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activate: {\n      argNames: ["effectiveDateTime"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.serviceApp"\n    },\n    deactivate: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.serviceApp"\n    }\n  },\n  serviceApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceHealth: {\n    properties: ["issues|serviceHealthIssues|/[Name]|serviceHealthIssue"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    issues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceHealthIssues"\n    }\n  },\n  serviceHealths: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceHealthIssue: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    incidentReport: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "any"\n    }\n  },\n  serviceHealthIssues: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  servicePrincipal: {\n    properties: ["appManagementPolicies|appManagementPolicys|/[Name]|appManagementPolicy", "appRoleAssignedTo|appRoleAssignments|/[Name]|appRoleAssignment", "appRoleAssignments|appRoleAssignments|/[Name]|appRoleAssignment", "claimsMappingPolicies|claimsMappingPolicys|/[Name]|claimsMappingPolicy", "createdObjects|directoryObjects|/[Name]|directoryObject", "delegatedPermissionClassifications|delegatedPermissionClassifications|/[Name]|delegatedPermissionClassification", "endpoints|endpoints|/[Name]|endpoint", "federatedIdentityCredentials|federatedIdentityCredentials|/[Name]|federatedIdentityCredential", "homeRealmDiscoveryPolicies|homeRealmDiscoveryPolicys|/[Name]|homeRealmDiscoveryPolicy", "memberOf|directoryObjects|/[Name]|directoryObject", "oauth2PermissionGrants|oAuth2PermissionGrants|/[Name]|oAuth2PermissionGrant", "ownedObjects|directoryObjects|/[Name]|directoryObject", "owners|directoryObjects|/[Name]|directoryObject", "tokenIssuancePolicies|tokenIssuancePolicys|/[Name]|tokenIssuancePolicy", "tokenLifetimePolicies|tokenLifetimePolicys|/[Name]|tokenLifetimePolicy", "transitiveMemberOf|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appManagementPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appManagementPolicys"\n    },\n    appRoleAssignedTo: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appRoleAssignments"\n    },\n    appRoleAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appRoleAssignments"\n    },\n    claimsMappingPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "claimsMappingPolicys"\n    },\n    createdObjects: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    delegatedPermissionClassifications: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedPermissionClassifications"\n    },\n    endpoints: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "endpoints"\n    },\n    federatedIdentityCredentials: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "federatedIdentityCredentials"\n    },\n    homeRealmDiscoveryPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "homeRealmDiscoveryPolicys"\n    },\n    memberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    oauth2PermissionGrants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "oAuth2PermissionGrants"\n    },\n    ownedObjects: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    owners: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    remoteDesktopSecurityConfiguration: {\n      returnType: "remoteDesktopSecurityConfiguration"\n    },\n    tokenIssuancePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenIssuancePolicys"\n    },\n    tokenLifetimePolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tokenLifetimePolicys"\n    },\n    transitiveMemberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    synchronization: {\n      returnType: "synchronization"\n    },\n    addKey: {\n      argNames: ["keyCredential", "passwordCredential", "proof"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.keyCredential"\n    },\n    addPassword: {\n      argNames: ["passwordCredential"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.passwordCredential"\n    },\n    removeKey: {\n      argNames: ["keyId", "proof"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    removePassword: {\n      argNames: ["keyId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    addTokenSigningCertificate: {\n      argNames: ["displayName", "endDateTime"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.selfSignedCertificate"\n    }\n  },\n  servicePrincipalRiskDetection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  servicePrincipalRiskDetections: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceStorageQuotaBreakdown: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceStorageQuotaBreakdowns: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  serviceUpdateMessage: {\n    properties: ["attachments|serviceAnnouncementAttachments|/[Name]|serviceAnnouncementAttachment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attachments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceAnnouncementAttachments"\n    }\n  },\n  serviceUpdateMessages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  session: {\n    properties: ["segments|segments|/[Name]|segment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    segments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "segments"\n    }\n  },\n  set: {\n    properties: ["children|terms|/[Name]|term", "relations|relations|/[Name]|relation", "terms|terms|/[Name]|term"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    children: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "terms"\n    },\n    parentGroup: {\n      returnType: "group"\n    },\n    relations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "relations"\n    },\n    terms: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "terms"\n    }\n  },\n  settingStateDeviceSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  settingStateDeviceSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharePointProtectionPolicy: {\n    properties: ["siteInclusionRules|siteProtectionRules|/[Name]|siteProtectionRule", "siteProtectionUnits|siteProtectionUnits|/[Name]|siteProtectionUnit"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    siteInclusionRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteProtectionRules"\n    },\n    siteProtectionUnits: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteProtectionUnits"\n    }\n  },\n  sharePointProtectionPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharePointRestoreSession: {\n    properties: ["siteRestoreArtifacts|siteRestoreArtifacts|/[Name]|siteRestoreArtifact"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    siteRestoreArtifacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "siteRestoreArtifacts"\n    }\n  },\n  sharePointRestoreSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharedDriveItem: {\n    properties: ["items|driveItems|/[Name]|driveItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    driveItem: {\n      returnType: "driveItem"\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "driveItems"\n    },\n    list: {\n      returnType: "list"\n    },\n    listItem: {\n      returnType: "listItem"\n    },\n    permission: {\n      returnType: "permission"\n    },\n    root: {\n      returnType: "driveItem"\n    },\n    site: {\n      returnType: "site"\n    }\n  },\n  sharedInsight: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    lastSharedMethod: {\n      returnType: "entity"\n    },\n    resource: {\n      returnType: "entity"\n    }\n  },\n  sharedInsights: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharedPCConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharedWithChannelTeamInfo: {\n    properties: ["allowedMembers|conversationMembers|/[Name]|conversationMember"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    allowedMembers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conversationMembers"\n    }\n  },\n  sharedWithChannelTeamInfos: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  sharepoint: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    settings: {\n      returnType: "sharepointSettings"\n    }\n  },\n  sharepointSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  shift: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  shifts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  shiftPreferences: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  signIn: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  signIns: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  simulation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    landingPage: {\n      returnType: "landingPage"\n    },\n    loginPage: {\n      returnType: "loginPage"\n    },\n    payload: {\n      returnType: "payload"\n    }\n  },\n  simulations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  simulationAutomation: {\n    properties: ["runs|simulationAutomationRuns|/[Name]|simulationAutomationRun"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    runs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "simulationAutomationRuns"\n    }\n  },\n  simulationAutomations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  simulationAutomationRun: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  simulationAutomationRuns: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  singleValueLegacyExtendedProperty: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  singleValueLegacyExtendedPropertys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  site: {\n    properties: ["columns|columnDefinitions|/[Name]|columnDefinition", "contentTypes|contentTypes|/[Name]|contentType", "drives|drives|/[Name]|drive", "externalColumns|columnDefinitions|/[Name]|columnDefinition", "items|baseItems|/[Name]|baseItem", "lists|lists|/[Name]|list", "operations|richLongRunningOperations|/[Name]|richLongRunningOperation", "pages|baseSitePages|/[Name]|baseSitePage", "permissions|permissions|/[Name]|permission", "sites|sites|/[Name]|site", "termStores|stores|/[Name]|store"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    analytics: {\n      returnType: "itemAnalytics"\n    },\n    columns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnDefinitions"\n    },\n    contentTypes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contentTypes"\n    },\n    drive: {\n      returnType: "drive"\n    },\n    drives: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "drives"\n    },\n    externalColumns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "columnDefinitions"\n    },\n    items: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "baseItems"\n    },\n    lists: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "lists"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "richLongRunningOperations"\n    },\n    pages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "baseSitePages"\n    },\n    permissions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "permissions"\n    },\n    sites: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sites"\n    },\n    termStore: {\n      returnType: "store"\n    },\n    termStores: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "stores"\n    },\n    onenote: {\n      returnType: "onenote"\n    },\n    getActivitiesByInterval: {\n      argNames: ["startDateTime", "endDateTime", "interval"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.itemActivityStat[]"\n    },\n    getApplicableContentTypesForList: {\n      argNames: ["listId"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.contentType[]"\n    },\n    getByPath: {\n      argNames: ["path"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.site"\n    }\n  },\n  sitePage: {\n    properties: ["webParts|webParts|/[Name]|webPart"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    canvasLayout: {\n      returnType: "canvasLayout"\n    },\n    webParts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "webParts"\n    },\n    publish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    getWebPartsByPosition: {\n      argNames: ["webPartIndex", "horizontalSectionId", "isInVerticalSection", "columnId"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.webPart[]"\n    }\n  },\n  siteProtectionRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteProtectionRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteProtectionUnit: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteProtectionUnits: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteRestoreArtifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteRestoreArtifacts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  siteSource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    site: {\n      returnType: "site"\n    }\n  },\n  skypeForBusinessUserConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  skypeUserConversationMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  smsAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|smsAuthenticationMethodTargets|/[Name]|smsAuthenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "smsAuthenticationMethodTargets"\n    }\n  },\n  smsAuthenticationMethodTarget: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  smsAuthenticationMethodTargets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  socialIdentityProvider: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  softwareOathAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  softwareOathAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  softwareOathAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  softwareUpdateStatusSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  solutionsRoot: {\n    properties: ["bookingBusinesses|bookingBusinesss|/[Name]|bookingBusiness", "bookingCurrencies|bookingCurrencys|/[Name]|bookingCurrency"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    bookingBusinesses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingBusinesss"\n    },\n    bookingCurrencies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "bookingCurrencys"\n    },\n    backupRestore: {\n      returnType: "backupRestoreRoot"\n    },\n    virtualEvents: {\n      returnType: "virtualEventsRoot"\n    }\n  },\n  sslCertificate: {\n    properties: ["relatedHosts|hosts|/[Name]|host"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    relatedHosts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hosts"\n    }\n  },\n  standardWebPart: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  startHoldMusicOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  stopHoldMusicOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  storage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fileStorage: {\n      returnType: "fileStorage"\n    },\n    settings: {\n      returnType: "storageSettings"\n    }\n  },\n  storageQuotaBreakdown: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  storageSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    quota: {\n      returnType: "unifiedStorageQuota"\n    }\n  },\n  store: {\n    properties: ["groups|groups|/[Name]|group", "sets|sets|/[Name]|set"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    groups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "groups"\n    },\n    sets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sets"\n    }\n  },\n  stsPolicy: {\n    properties: ["appliesTo|directoryObjects|/[Name]|directoryObject"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appliesTo: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    }\n  },\n  subcategoryTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  subdomain: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    }\n  },\n  subjectRightsRequest: {\n    properties: ["approvers|users|/[Name]|user", "collaborators|users|/[Name]|user", "notes|authoredNotes|/[Name]|authoredNote"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    approvers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    },\n    collaborators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "users"\n    },\n    notes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authoredNotes"\n    },\n    team: {\n      returnType: "team"\n    },\n    getFinalAttachment: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "any"\n    },\n    getFinalReport: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "any"\n    }\n  },\n  subjectRightsRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  subscribeToToneOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  subscribedSku: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  subscription: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    reauthorize: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  subscriptions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  swapShiftsChangeRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  swapShiftsChangeRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  synchronization: {\n    properties: ["jobs|synchronizationJobs|/[Name]|synchronizationJob", "templates|synchronizationTemplates|/[Name]|synchronizationTemplate"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    jobs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "synchronizationJobs"\n    },\n    templates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "synchronizationTemplates"\n    },\n    acquireAccessToken: {\n      argNames: ["credentials"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  synchronizationJob: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    bulkUpload: {\n      returnType: "bulkUpload"\n    },\n    schema: {\n      returnType: "synchronizationSchema"\n    },\n    pause: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    provisionOnDemand: {\n      argNames: ["parameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.stringKeyStringValuePair"\n    },\n    restart: {\n      argNames: ["criteria"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    start: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    validateCredentials: {\n      argNames: ["applicationIdentifier", "templateId", "useSavedCredentials", "credentials"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  synchronizationJobs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  synchronizationSchema: {\n    properties: ["directories|directoryDefinitions|/[Name]|directoryDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    directories: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryDefinitions"\n    },\n    parseExpression: {\n      argNames: ["expression", "testInputObject", "targetAttributeDefinition"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.parseExpressionResponse"\n    },\n    filterOperators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.filterOperatorSchema[]"\n    },\n    functions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.attributeMappingFunctionSchema[]"\n    }\n  },\n  synchronizationTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    schema: {\n      returnType: "synchronizationSchema"\n    }\n  },\n  synchronizationTemplates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tag: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetDeviceGroup: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetDeviceGroups: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetedManagedAppConfiguration: {\n    properties: ["apps|managedMobileApps|/[Name]|managedMobileApp", "assignments|targetedManagedAppPolicyAssignments|/[Name]|targetedManagedAppPolicyAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    apps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedMobileApps"\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "targetedManagedAppPolicyAssignments"\n    },\n    deploymentSummary: {\n      returnType: "managedAppPolicyDeploymentSummary"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    targetApps: {\n      argNames: ["apps", "appGroupType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  targetedManagedAppConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetedManagedAppPolicyAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetedManagedAppPolicyAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  targetedManagedAppProtection: {\n    properties: ["assignments|targetedManagedAppPolicyAssignments|/[Name]|targetedManagedAppPolicyAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "targetedManagedAppPolicyAssignments"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    targetApps: {\n      argNames: ["apps", "appGroupType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  task: {\n    properties: ["taskProcessingResults|taskProcessingResults|/[Name]|taskProcessingResult"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    taskProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskProcessingResults"\n    }\n  },\n  taskDefinition: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  taskFileAttachment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  taskProcessingResult: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    subject: {\n      returnType: "user"\n    },\n    task: {\n      returnType: "task"\n    }\n  },\n  taskReport: {\n    properties: ["taskProcessingResults|taskProcessingResults|/[Name]|taskProcessingResult"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    task: {\n      returnType: "task"\n    },\n    taskDefinition: {\n      returnType: "taskDefinition"\n    },\n    taskProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskProcessingResults"\n    }\n  },\n  team: {\n    properties: ["allChannels|channels|/[Name]|channel", "channels|channels|/[Name]|channel", "incomingChannels|channels|/[Name]|channel", "installedApps|teamsAppInstallations|/[Name]|teamsAppInstallation", "members|conversationMembers|/[Name]|conversationMember", "operations|teamsAsyncOperations|/[Name]|teamsAsyncOperation", "permissionGrants|resourceSpecificPermissionGrants|/[Name]|resourceSpecificPermissionGrant", "tags|teamworkTags|/[Name]|teamworkTag"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    allChannels: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "channels"\n    },\n    channels: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "channels"\n    },\n    group: {\n      returnType: "group"\n    },\n    incomingChannels: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "channels"\n    },\n    installedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsAppInstallations"\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "conversationMembers"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsAsyncOperations"\n    },\n    permissionGrants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "resourceSpecificPermissionGrants"\n    },\n    photo: {\n      returnType: "profilePhoto"\n    },\n    primaryChannel: {\n      returnType: "channel"\n    },\n    tags: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamworkTags"\n    },\n    template: {\n      returnType: "teamsTemplate"\n    },\n    schedule: {\n      returnType: "schedule"\n    },\n    archive: {\n      argNames: ["shouldSetSpoSiteReadOnlyForMembers"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unarchive: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    completeMigration: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    clone: {\n      argNames: ["displayName", "description", "mailNickname", "classification", "visibility", "partsToClone"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    sendActivityNotification: {\n      argNames: ["topic", "activityType", "chainId", "previewText", "teamsAppId", "templateParameters", "recipient"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  teams: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamInfo: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    team: {\n      returnType: "team"\n    }\n  },\n  teamsApp: {\n    properties: ["appDefinitions|teamsAppDefinitions|/[Name]|teamsAppDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appDefinitions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamsAppDefinitions"\n    }\n  },\n  teamsApps: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsAppDefinition: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    bot: {\n      returnType: "teamworkBot"\n    }\n  },\n  teamsAppDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsAppInstallation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    teamsApp: {\n      returnType: "teamsApp"\n    },\n    teamsAppDefinition: {\n      returnType: "teamsAppDefinition"\n    },\n    upgrade: {\n      argNames: ["consentedPermissionSet"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  teamsAppInstallations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsAppSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsAsyncOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsAsyncOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsTab: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    teamsApp: {\n      returnType: "teamsApp"\n    }\n  },\n  teamsTabs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamsTemplate: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamwork: {\n    properties: ["workforceIntegrations|workforceIntegrations|/[Name]|workforceIntegration", "deletedChats|deletedChats|/[Name]|deletedChat", "deletedTeams|deletedTeams|/[Name]|deletedTeam"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    workforceIntegrations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workforceIntegrations"\n    },\n    deletedChats: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deletedChats"\n    },\n    deletedTeams: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deletedTeams"\n    },\n    teamsAppSettings: {\n      returnType: "teamsAppSettings"\n    },\n    sendActivityNotificationToRecipients: {\n      argNames: ["topic", "activityType", "chainId", "previewText", "teamsAppId", "templateParameters", "recipients"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  teamworkBot: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamworkHostedContent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamworkTag: {\n    properties: ["members|teamworkTagMembers|/[Name]|teamworkTagMember"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    members: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teamworkTagMembers"\n    }\n  },\n  teamworkTags: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamworkTagMember: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  teamworkTagMembers: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  telecomExpenseManagementPartner: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  telecomExpenseManagementPartners: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  temporaryAccessPassAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  temporaryAccessPassAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  temporaryAccessPassAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  tenantAppManagementPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tenantRelationship: {\n    properties: ["delegatedAdminCustomers|delegatedAdminCustomers|/[Name]|delegatedAdminCustomer", "delegatedAdminRelationships|delegatedAdminRelationships|/[Name]|delegatedAdminRelationship"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    multiTenantOrganization: {\n      returnType: "multiTenantOrganization"\n    },\n    delegatedAdminCustomers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminCustomers"\n    },\n    delegatedAdminRelationships: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "delegatedAdminRelationships"\n    },\n    findTenantInformationByDomainName: {\n      argNames: ["domainName"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.tenantInformation"\n    },\n    findTenantInformationByTenantId: {\n      argNames: ["tenantId"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.tenantInformation"\n    }\n  },\n  term: {\n    properties: ["children|terms|/[Name]|term", "relations|relations|/[Name]|relation"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    children: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "terms"\n    },\n    relations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "relations"\n    },\n    set: {\n      returnType: "set"\n    }\n  },\n  termsAndConditions: {\n    properties: ["acceptanceStatuses|termsAndConditionsAcceptanceStatuss|/[Name]|termsAndConditionsAcceptanceStatus", "assignments|termsAndConditionsAssignments|/[Name]|termsAndConditionsAssignment"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    acceptanceStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "termsAndConditionsAcceptanceStatuss"\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "termsAndConditionsAssignments"\n    }\n  },\n  termsAndConditionss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  termsAndConditionsAcceptanceStatus: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    termsAndConditions: {\n      returnType: "termsAndConditions"\n    }\n  },\n  termsAndConditionsAcceptanceStatuss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  termsAndConditionsAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  termsAndConditionsAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  termsOfUseContainer: {\n    properties: ["agreementAcceptances|agreementAcceptances|/[Name]|agreementAcceptance", "agreements|agreements|/[Name]|agreement"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    agreementAcceptances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementAcceptances"\n    },\n    agreements: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreements"\n    }\n  },\n  textWebPart: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  threatAssessmentRequest: {\n    properties: ["results|threatAssessmentResults|/[Name]|threatAssessmentResult"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    results: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "threatAssessmentResults"\n    }\n  },\n  threatAssessmentRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  threatAssessmentResult: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  threatAssessmentResults: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  threatIntelligence: {\n    properties: ["articleIndicators|articleIndicators|/[Name]|articleIndicator", "articles|articles|/[Name]|article", "hostComponents|hostComponents|/[Name]|hostComponent", "hostCookies|hostCookies|/[Name]|hostCookie", "hostPairs|hostPairs|/[Name]|hostPair", "hostPorts|hostPorts|/[Name]|hostPort", "hosts|hosts|/[Name]|host", "hostSslCertificates|hostSslCertificates|/[Name]|hostSslCertificate", "hostTrackers|hostTrackers|/[Name]|hostTracker", "intelligenceProfileIndicators|intelligenceProfileIndicators|/[Name]|intelligenceProfileIndicator", "intelProfiles|intelligenceProfiles|/[Name]|intelligenceProfile", "passiveDnsRecords|passiveDnsRecords|/[Name]|passiveDnsRecord", "sslCertificates|sslCertificates|/[Name]|sslCertificate", "subdomains|subdomains|/[Name]|subdomain", "vulnerabilities|vulnerabilitys|/[Name]|vulnerability", "whoisHistoryRecords|whoisHistoryRecords|/[Name]|whoisHistoryRecord", "whoisRecords|whoisRecords|/[Name]|whoisRecord"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    articleIndicators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "articleIndicators"\n    },\n    articles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "articles"\n    },\n    hostComponents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostComponents"\n    },\n    hostCookies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostCookies"\n    },\n    hostPairs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPairs"\n    },\n    hostPorts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostPorts"\n    },\n    hosts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hosts"\n    },\n    hostSslCertificates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostSslCertificates"\n    },\n    hostTrackers: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "hostTrackers"\n    },\n    intelligenceProfileIndicators: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "intelligenceProfileIndicators"\n    },\n    intelProfiles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "intelligenceProfiles"\n    },\n    passiveDnsRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "passiveDnsRecords"\n    },\n    sslCertificates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sslCertificates"\n    },\n    subdomains: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "subdomains"\n    },\n    vulnerabilities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "vulnerabilitys"\n    },\n    whoisHistoryRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "whoisHistoryRecords"\n    },\n    whoisRecords: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "whoisRecords"\n    }\n  },\n  thumbnailSet: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  thumbnailSets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOff: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOffs: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOffReason: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOffReasons: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOffRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  timeOffRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  todo: {\n    properties: ["lists|todoTaskLists|/[Name]|todoTaskList"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    lists: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "todoTaskLists"\n    }\n  },\n  todoTask: {\n    properties: ["attachments|attachmentBases|/[Name]|attachmentBase", "attachmentSessions|attachmentSessions|/[Name]|attachmentSession", "checklistItems|checklistItems|/[Name]|checklistItem", "extensions|extensions|/[Name]|extension", "linkedResources|linkedResources|/[Name]|linkedResource"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    attachments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attachmentBases"\n    },\n    attachmentSessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "attachmentSessions"\n    },\n    checklistItems: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "checklistItems"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    linkedResources: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "linkedResources"\n    }\n  },\n  todoTasks: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  todoTaskList: {\n    properties: ["extensions|extensions|/[Name]|extension", "tasks|todoTasks|/[Name]|todoTask"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "todoTasks"\n    }\n  },\n  todoTaskLists: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tokenIssuancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tokenIssuancePolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tokenLifetimePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  tokenLifetimePolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  training: {\n    properties: ["languageDetails|trainingLanguageDetails|/[Name]|trainingLanguageDetail"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    languageDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "trainingLanguageDetails"\n    }\n  },\n  trainings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  trainingLanguageDetail: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  trainingLanguageDetails: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  trending: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resource: {\n      returnType: "entity"\n    }\n  },\n  trendings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  triggerTypesRoot: {\n    properties: ["retentionEventTypes|retentionEventTypes|/[Name]|retentionEventType"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    retentionEventTypes: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "retentionEventTypes"\n    }\n  },\n  triggersRoot: {\n    properties: ["retentionEvents|retentionEvents|/[Name]|retentionEvent"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    retentionEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "retentionEvents"\n    }\n  },\n  unbilledUsage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unclassifiedArtifact: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedGroupSource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    group: {\n      returnType: "group"\n    }\n  },\n  unifiedRbacResourceAction: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRbacResourceActions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRbacResourceNamespace: {\n    properties: ["resourceActions|unifiedRbacResourceActions|/[Name]|unifiedRbacResourceAction"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resourceActions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRbacResourceActions"\n    }\n  },\n  unifiedRbacResourceNamespaces: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appScope: {\n      returnType: "appScope"\n    },\n    directoryScope: {\n      returnType: "directoryObject"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    roleDefinition: {\n      returnType: "unifiedRoleDefinition"\n    }\n  },\n  unifiedRoleAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleAssignmentSchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "unifiedRoleEligibilitySchedule"\n    }\n  },\n  unifiedRoleAssignmentSchedules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleAssignmentScheduleInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "unifiedRoleEligibilityScheduleInstance"\n    }\n  },\n  unifiedRoleAssignmentScheduleInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleAssignmentScheduleRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    activatedUsing: {\n      returnType: "unifiedRoleEligibilitySchedule"\n    },\n    appScope: {\n      returnType: "appScope"\n    },\n    directoryScope: {\n      returnType: "directoryObject"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    roleDefinition: {\n      returnType: "unifiedRoleDefinition"\n    },\n    targetSchedule: {\n      returnType: "unifiedRoleAssignmentSchedule"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  unifiedRoleAssignmentScheduleRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleDefinition: {\n    properties: ["inheritsPermissionsFrom|unifiedRoleDefinitions|/[Name]|unifiedRoleDefinition"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    inheritsPermissionsFrom: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleDefinitions"\n    }\n  },\n  unifiedRoleDefinitions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleEligibilitySchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleEligibilitySchedules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleEligibilityScheduleInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleEligibilityScheduleInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleEligibilityScheduleRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appScope: {\n      returnType: "appScope"\n    },\n    directoryScope: {\n      returnType: "directoryObject"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    roleDefinition: {\n      returnType: "unifiedRoleDefinition"\n    },\n    targetSchedule: {\n      returnType: "unifiedRoleEligibilitySchedule"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  unifiedRoleEligibilityScheduleRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicy: {\n    properties: ["effectiveRules|unifiedRoleManagementPolicyRules|/[Name]|unifiedRoleManagementPolicyRule", "rules|unifiedRoleManagementPolicyRules|/[Name]|unifiedRoleManagementPolicyRule"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    effectiveRules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleManagementPolicyRules"\n    },\n    rules: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "unifiedRoleManagementPolicyRules"\n    }\n  },\n  unifiedRoleManagementPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyApprovalRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    policy: {\n      returnType: "unifiedRoleManagementPolicy"\n    }\n  },\n  unifiedRoleManagementPolicyAssignments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyAuthenticationContextRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyEnablementRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyExpirationRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyNotificationRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyRule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleManagementPolicyRules: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  unifiedRoleScheduleBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appScope: {\n      returnType: "appScope"\n    },\n    directoryScope: {\n      returnType: "directoryObject"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    roleDefinition: {\n      returnType: "unifiedRoleDefinition"\n    }\n  },\n  unifiedRoleScheduleInstanceBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appScope: {\n      returnType: "appScope"\n    },\n    directoryScope: {\n      returnType: "directoryObject"\n    },\n    principal: {\n      returnType: "directoryObject"\n    },\n    roleDefinition: {\n      returnType: "unifiedRoleDefinition"\n    }\n  },\n  unifiedStorageQuota: {\n    properties: ["services|serviceStorageQuotaBreakdowns|/[Name]|serviceStorageQuotaBreakdown"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    services: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "serviceStorageQuotaBreakdowns"\n    }\n  },\n  unmuteParticipantOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  updateRecordingStatusOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  urlAssessmentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  usedInsight: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    resource: {\n      returnType: "entity"\n    }\n  },\n  usedInsights: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  user: {\n    properties: ["appRoleAssignments|appRoleAssignments|/[Name]|appRoleAssignment", "createdObjects|directoryObjects|/[Name]|directoryObject", "directReports|directoryObjects|/[Name]|directoryObject", "licenseDetails|licenseDetailss|/[Name]|licenseDetails", "memberOf|directoryObjects|/[Name]|directoryObject", "oauth2PermissionGrants|oAuth2PermissionGrants|/[Name]|oAuth2PermissionGrant", "ownedDevices|directoryObjects|/[Name]|directoryObject", "ownedObjects|directoryObjects|/[Name]|directoryObject", "registeredDevices|directoryObjects|/[Name]|directoryObject", "scopedRoleMemberOf|scopedRoleMemberships|/[Name]|scopedRoleMembership", "sponsors|directoryObjects|/[Name]|directoryObject", "transitiveMemberOf|directoryObjects|/[Name]|directoryObject", "calendarGroups|calendarGroups|/[Name]|calendarGroup", "calendars|calendars|/[Name]|calendar", "calendarView|events|/[Name]|event", "contactFolders|contactFolders|/[Name]|contactFolder", "contacts|contacts|/[Name]|contact", "events|events|/[Name]|event", "mailFolders|mailFolders|/[Name]|mailFolder", "messages|messages|/[Name]|message", "people|persons|/[Name]|person", "drives|drives|/[Name]|drive", "followedSites|sites|/[Name]|site", "extensions|extensions|/[Name]|extension", "agreementAcceptances|agreementAcceptances|/[Name]|agreementAcceptance", "managedDevices|managedDevices|/[Name]|managedDevice", "managedAppRegistrations|managedAppRegistrations|/[Name]|managedAppRegistration", "deviceManagementTroubleshootingEvents|deviceManagementTroubleshootingEvents|/[Name]|deviceManagementTroubleshootingEvent", "photos|profilePhotos|/[Name]|profilePhoto", "activities|userActivitys|/[Name]|userActivity", "onlineMeetings|onlineMeetings|/[Name]|onlineMeeting", "chats|chats|/[Name]|chat", "joinedTeams|teams|/[Name]|team", "permissionGrants|resourceSpecificPermissionGrants|/[Name]|resourceSpecificPermissionGrant"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appRoleAssignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "appRoleAssignments"\n    },\n    createdObjects: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    directReports: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    licenseDetails: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "licenseDetailss"\n    },\n    manager: {\n      returnType: "directoryObject"\n    },\n    memberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    oauth2PermissionGrants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "oAuth2PermissionGrants"\n    },\n    ownedDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    ownedObjects: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    registeredDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    scopedRoleMemberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "scopedRoleMemberships"\n    },\n    sponsors: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    transitiveMemberOf: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "directoryObjects"\n    },\n    calendar: {\n      returnType: "calendar"\n    },\n    calendarGroups: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "calendarGroups"\n    },\n    calendars: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "calendars"\n    },\n    calendarView: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "events"\n    },\n    contactFolders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contactFolders"\n    },\n    contacts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "contacts"\n    },\n    events: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "events"\n    },\n    inferenceClassification: {\n      returnType: "inferenceClassification"\n    },\n    mailFolders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mailFolders"\n    },\n    messages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "messages"\n    },\n    outlook: {\n      returnType: "outlookUser"\n    },\n    people: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "persons"\n    },\n    drive: {\n      returnType: "drive"\n    },\n    drives: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "drives"\n    },\n    followedSites: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "sites"\n    },\n    extensions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "extensions"\n    },\n    agreementAcceptances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "agreementAcceptances"\n    },\n    managedDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedDevices"\n    },\n    managedAppRegistrations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "managedAppRegistrations"\n    },\n    deviceManagementTroubleshootingEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceManagementTroubleshootingEvents"\n    },\n    planner: {\n      returnType: "plannerUser"\n    },\n    insights: {\n      returnType: "itemInsights"\n    },\n    settings: {\n      returnType: "userSettings"\n    },\n    onenote: {\n      returnType: "onenote"\n    },\n    cloudClipboard: {\n      returnType: "cloudClipboardRoot"\n    },\n    photo: {\n      returnType: "profilePhoto"\n    },\n    photos: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "profilePhotos"\n    },\n    activities: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userActivitys"\n    },\n    onlineMeetings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "onlineMeetings"\n    },\n    presence: {\n      returnType: "presence"\n    },\n    authentication: {\n      returnType: "authentication"\n    },\n    chats: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "chats"\n    },\n    joinedTeams: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "teams"\n    },\n    permissionGrants: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "resourceSpecificPermissionGrants"\n    },\n    teamwork: {\n      returnType: "userTeamwork"\n    },\n    solutions: {\n      returnType: "userSolutionRoot"\n    },\n    todo: {\n      returnType: "todo"\n    },\n    employeeExperience: {\n      returnType: "employeeExperienceUser"\n    },\n    assignLicense: {\n      argNames: ["addLicenses", "removeLicenses"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.user"\n    },\n    changePassword: {\n      argNames: ["currentPassword", "newPassword"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    reprocessLicenseAssignment: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.user"\n    },\n    retryServiceProvisioning: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    revokeSignInSessions: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "boolean"\n    },\n    findMeetingTimes: {\n      argNames: ["attendees", "locationConstraint", "timeConstraint", "meetingDuration", "maxCandidates", "isOrganizerOptional", "returnSuggestionReasons", "minimumAttendeePercentage"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.meetingTimeSuggestionsResult"\n    },\n    getMailTips: {\n      argNames: ["EmailAddresses", "MailTipsOptions"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.mailTips[]"\n    },\n    sendMail: {\n      argNames: ["Message", "SaveToSentItems"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    translateExchangeIds: {\n      argNames: ["InputIds", "TargetIdType", "SourceIdType"],\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.convertIdResult[]"\n    },\n    removeAllDevicesFromManagement: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    wipeManagedAppRegistrationsByDeviceTag: {\n      argNames: ["deviceTag"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    exportPersonalData: {\n      argNames: ["storageLocation"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    exportDeviceAndAppManagementData: {\n      argNames: ["skip", "top"],\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.deviceAndAppManagementData"\n    },\n    getManagedAppDiagnosticStatuses: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "ComplexTypes.managedAppDiagnosticStatus[]"\n    },\n    getManagedAppPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "EntityTypes.managedAppPolicy[]"\n    },\n    getManagedDevicesWithAppFailures: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "Array<string>[]"\n    }\n  },\n  users: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userActivity: {\n    properties: ["historyItems|activityHistoryItems|/[Name]|activityHistoryItem"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    historyItems: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "activityHistoryItems"\n    }\n  },\n  userActivitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userConsentRequest: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    approval: {\n      returnType: "approval"\n    }\n  },\n  userConsentRequests: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIds: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByOSVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthAppPerformanceByOSVersions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthApplicationPerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthApplicationPerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDeviceModelPerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDeviceModelPerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDevicePerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDevicePerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDevicePerformanceDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthDevicePerformanceDetailss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthOSVersionPerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsAppHealthOSVersionPerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsBaseline: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    appHealthMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    batteryHealthMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    bestPracticesMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    deviceBootPerformanceMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    rebootAnalyticsMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    resourcePerformanceMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    },\n    workFromAnywhereMetrics: {\n      returnType: "userExperienceAnalyticsCategory"\n    }\n  },\n  userExperienceAnalyticsBaselines: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsCategory: {\n    properties: ["metricValues|userExperienceAnalyticsMetrics|/[Name]|userExperienceAnalyticsMetric"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    metricValues: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsMetrics"\n    }\n  },\n  userExperienceAnalyticsCategorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDevicePerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDevicePerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceScores: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceScoress: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupHistory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupHistorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupProcess: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupProcesss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupProcessPerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsDeviceStartupProcessPerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsMetric: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsMetrics: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsMetricHistory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsMetricHistorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsModelScores: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsModelScoress: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsOverview: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsScoreHistory: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsScoreHistorys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereDevice: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereDevices: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereMetric: {\n    properties: ["metricDevices|userExperienceAnalyticsWorkFromAnywhereDevices|/[Name]|userExperienceAnalyticsWorkFromAnywhereDevice"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    metricDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userExperienceAnalyticsWorkFromAnywhereDevices"\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereMetrics: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereModelPerformance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userExperienceAnalyticsWorkFromAnywhereModelPerformances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userFlowLanguageConfiguration: {\n    properties: ["defaultPages|userFlowLanguagePages|/[Name]|userFlowLanguagePage", "overridesPages|userFlowLanguagePages|/[Name]|userFlowLanguagePage"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    defaultPages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userFlowLanguagePages"\n    },\n    overridesPages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userFlowLanguagePages"\n    }\n  },\n  userFlowLanguageConfigurations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userFlowLanguagePage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userFlowLanguagePages: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userInsightsSettings: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userInstallStateSummary: {\n    properties: ["deviceStates|deviceInstallStates|/[Name]|deviceInstallState"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "deviceInstallStates"\n    }\n  },\n  userInstallStateSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userProcessingResult: {\n    properties: ["taskProcessingResults|taskProcessingResults|/[Name]|taskProcessingResult"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    subject: {\n      returnType: "user"\n    },\n    taskProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskProcessingResults"\n    }\n  },\n  userRegistrationDetails: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userRegistrationDetailss: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userScopeTeamsAppInstallation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    chat: {\n      returnType: "chat"\n    }\n  },\n  userScopeTeamsAppInstallations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userSettings: {\n    properties: ["windows|windowsSettings|/[Name]|windowsSetting"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    itemInsights: {\n      returnType: "userInsightsSettings"\n    },\n    windows: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsSettings"\n    },\n    shiftPreferences: {\n      returnType: "shiftPreferences"\n    },\n    storage: {\n      returnType: "userStorage"\n    }\n  },\n  userSignInInsight: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userSolutionRoot: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    workingTimeSchedule: {\n      returnType: "workingTimeSchedule"\n    }\n  },\n  userSource: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  userStorage: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    quota: {\n      returnType: "unifiedStorageQuota"\n    }\n  },\n  userTeamwork: {\n    properties: ["associatedTeams|associatedTeamInfos|/[Name]|associatedTeamInfo", "installedApps|userScopeTeamsAppInstallations|/[Name]|userScopeTeamsAppInstallation"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    associatedTeams: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "associatedTeamInfos"\n    },\n    installedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userScopeTeamsAppInstallations"\n    },\n    sendActivityNotification: {\n      argNames: ["topic", "activityType", "chainId", "previewText", "teamsAppId", "templateParameters"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  verticalSection: {\n    properties: ["webparts|webParts|/[Name]|webPart"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    webparts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "webParts"\n    }\n  },\n  virtualEndpoint: {\n    properties: ["auditEvents|cloudPcAuditEvents|/[Name]|cloudPcAuditEvent", "cloudPCs|cloudPCs|/[Name]|cloudPC", "deviceImages|cloudPcDeviceImages|/[Name]|cloudPcDeviceImage", "galleryImages|cloudPcGalleryImages|/[Name]|cloudPcGalleryImage", "onPremisesConnections|cloudPcOnPremisesConnections|/[Name]|cloudPcOnPremisesConnection", "provisioningPolicies|cloudPcProvisioningPolicys|/[Name]|cloudPcProvisioningPolicy", "userSettings|cloudPcUserSettings|/[Name]|cloudPcUserSetting"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    auditEvents: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcAuditEvents"\n    },\n    cloudPCs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPCs"\n    },\n    deviceImages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcDeviceImages"\n    },\n    galleryImages: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcGalleryImages"\n    },\n    onPremisesConnections: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcOnPremisesConnections"\n    },\n    provisioningPolicies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcProvisioningPolicys"\n    },\n    userSettings: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "cloudPcUserSettings"\n    }\n  },\n  virtualEvent: {\n    properties: ["presenters|virtualEventPresenters|/[Name]|virtualEventPresenter", "sessions|virtualEventSessions|/[Name]|virtualEventSession"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    presenters: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventPresenters"\n    },\n    sessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventSessions"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    publish: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  virtualEvents: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventPresenter: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventPresenters: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventRegistration: {\n    properties: ["sessions|virtualEventSessions|/[Name]|virtualEventSession"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    sessions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventSessions"\n    },\n    cancel: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  virtualEventRegistrations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventRegistrationConfiguration: {\n    properties: ["questions|virtualEventRegistrationQuestionBases|/[Name]|virtualEventRegistrationQuestionBase"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    questions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventRegistrationQuestionBases"\n    }\n  },\n  virtualEventRegistrationCustomQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventRegistrationPredefinedQuestion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventRegistrationQuestionBase: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventRegistrationQuestionBases: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventSession: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventSessions: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventTownhall: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventTownhalls: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventWebinar: {\n    properties: ["registrations|virtualEventRegistrations|/[Name]|virtualEventRegistration"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    registrationConfiguration: {\n      returnType: "virtualEventWebinarRegistrationConfiguration"\n    },\n    registrations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventRegistrations"\n    }\n  },\n  virtualEventWebinars: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventWebinarRegistrationConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  virtualEventsRoot: {\n    properties: ["events|virtualEvents|/[Name]|virtualEvent", "townhalls|virtualEventTownhalls|/[Name]|virtualEventTownhall", "webinars|virtualEventWebinars|/[Name]|virtualEventWebinar"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    events: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEvents"\n    },\n    townhalls: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventTownhalls"\n    },\n    webinars: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "virtualEventWebinars"\n    }\n  },\n  voiceAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  vppToken: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    syncLicenses: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "EntityTypes.vppToken"\n    }\n  },\n  vppTokens: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  vulnerability: {\n    properties: ["articles|articles|/[Name]|article", "components|vulnerabilityComponents|/[Name]|vulnerabilityComponent"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    articles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "articles"\n    },\n    components: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "vulnerabilityComponents"\n    }\n  },\n  vulnerabilityComponent: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  webApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  webPart: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    getPositionOfWebPart: {\n      requestType: utils_1.RequestType.PostWithArgsInBody,\n      returnType: "ComplexTypes.webPartPosition"\n    }\n  },\n  webParts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  whoisBaseRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    host: {\n      returnType: "host"\n    }\n  },\n  whoisHistoryRecord: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  whoisRecord: {\n    properties: ["history|whoisHistoryRecords|/[Name]|whoisHistoryRecord"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    history: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "whoisHistoryRecords"\n    }\n  },\n  win32LobApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10CompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10CustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10EndpointProtectionConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10EnrollmentCompletionPageConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10EnterpriseModernAppManagementConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10GeneralConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10MobileCompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10SecureAssessmentConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows10TeamGeneralConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows81CompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windows81GeneralConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsAppX: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsAutopilotDeploymentProfile: {\n    properties: ["assignedDevices|windowsAutopilotDeviceIdentitys|/[Name]|windowsAutopilotDeviceIdentity"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignedDevices: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsAutopilotDeviceIdentitys"\n    }\n  },\n  windowsAutopilotDeploymentProfileAssignment: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsAutopilotDeviceIdentity: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignUserToDevice: {\n      argNames: ["userPrincipalName", "addressableUserName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    unassignUserFromDevice: {\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    },\n    updateDeviceProperties: {\n      argNames: ["userPrincipalName", "addressableUserName", "groupTag", "displayName"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  windowsAutopilotDeviceIdentitys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsDefenderAdvancedThreatProtectionConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsDeviceMalwareState: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsDeviceMalwareStates: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsHelloForBusinessAuthenticationMethod: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    device: {\n      returnType: "device"\n    }\n  },\n  windowsHelloForBusinessAuthenticationMethods: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtection: {\n    properties: ["assignments|targetedManagedAppPolicyAssignments|/[Name]|targetedManagedAppPolicyAssignment", "exemptAppLockerFiles|windowsInformationProtectionAppLockerFiles|/[Name]|windowsInformationProtectionAppLockerFile", "protectedAppLockerFiles|windowsInformationProtectionAppLockerFiles|/[Name]|windowsInformationProtectionAppLockerFile"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    assignments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "targetedManagedAppPolicyAssignments"\n    },\n    exemptAppLockerFiles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsInformationProtectionAppLockerFiles"\n    },\n    protectedAppLockerFiles: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsInformationProtectionAppLockerFiles"\n    },\n    assign: {\n      argNames: ["assignments"],\n      requestType: utils_1.RequestType.PostWithArgsInBody\n    }\n  },\n  windowsInformationProtectionAppLearningSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionAppLearningSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionAppLockerFile: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionAppLockerFiles: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionNetworkLearningSummary: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionNetworkLearningSummarys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionPolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsInformationProtectionPolicys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsMalwareInformation: {\n    properties: ["deviceMalwareStates|malwareStateForWindowsDevices|/[Name]|malwareStateForWindowsDevice"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    deviceMalwareStates: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "malwareStateForWindowsDevices"\n    }\n  },\n  windowsMalwareInformations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsMicrosoftEdgeApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsMobileMSI: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsPhone81CompliancePolicy: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsPhone81CustomConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsPhone81GeneralConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsProtectionState: {\n    properties: ["detectedMalwareState|windowsDeviceMalwareStates|/[Name]|windowsDeviceMalwareState"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    detectedMalwareState: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsDeviceMalwareStates"\n    }\n  },\n  windowsSetting: {\n    properties: ["instances|windowsSettingInstances|/[Name]|windowsSettingInstance"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    instances: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "windowsSettingInstances"\n    }\n  },\n  windowsSettings: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsSettingInstance: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsSettingInstances: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsUniversalAppX: {\n    properties: ["committedContainedApps|mobileContainedApps|/[Name]|mobileContainedApp"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    committedContainedApps: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "mobileContainedApps"\n    }\n  },\n  windowsUniversalAppXContainedApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsUpdateForBusinessConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  windowsWebApp: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbook: {\n    properties: ["comments|workbookComments|/[Name]|workbookComment", "names|workbookNamedItems|/[Name]|workbookNamedItem", "operations|workbookOperations|/[Name]|workbookOperation", "tables|workbookTables|/[Name]|workbookTable", "worksheets|workbookWorksheets|/[Name]|workbookWorksheet"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    application: {\n      returnType: "workbookApplication"\n    },\n    comments: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookComments"\n    },\n    functions: {\n      returnType: "workbookFunctions"\n    },\n    names: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookNamedItems"\n    },\n    operations: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookOperations"\n    },\n    tables: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookTables"\n    },\n    worksheets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookWorksheets"\n    }\n  },\n  workbookApplication: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChart: {\n    properties: ["series|workbookChartSeriess|/[Name]|workbookChartSeries"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    axes: {\n      returnType: "workbookChartAxes"\n    },\n    dataLabels: {\n      returnType: "workbookChartDataLabels"\n    },\n    format: {\n      returnType: "workbookChartAreaFormat"\n    },\n    legend: {\n      returnType: "workbookChartLegend"\n    },\n    series: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookChartSeriess"\n    },\n    title: {\n      returnType: "workbookChartTitle"\n    },\n    worksheet: {\n      returnType: "workbookWorksheet"\n    }\n  },\n  workbookCharts: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartAreaFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    },\n    font: {\n      returnType: "workbookChartFont"\n    }\n  },\n  workbookChartAxes: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    categoryAxis: {\n      returnType: "workbookChartAxis"\n    },\n    seriesAxis: {\n      returnType: "workbookChartAxis"\n    },\n    valueAxis: {\n      returnType: "workbookChartAxis"\n    }\n  },\n  workbookChartAxis: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartAxisFormat"\n    },\n    majorGridlines: {\n      returnType: "workbookChartGridlines"\n    },\n    minorGridlines: {\n      returnType: "workbookChartGridlines"\n    },\n    title: {\n      returnType: "workbookChartAxisTitle"\n    }\n  },\n  workbookChartAxisFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    font: {\n      returnType: "workbookChartFont"\n    },\n    line: {\n      returnType: "workbookChartLineFormat"\n    }\n  },\n  workbookChartAxisTitle: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartAxisTitleFormat"\n    }\n  },\n  workbookChartAxisTitleFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    font: {\n      returnType: "workbookChartFont"\n    }\n  },\n  workbookChartDataLabelFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    },\n    font: {\n      returnType: "workbookChartFont"\n    }\n  },\n  workbookChartDataLabels: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartDataLabelFormat"\n    }\n  },\n  workbookChartFill: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartFont: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartGridlines: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartGridlinesFormat"\n    }\n  },\n  workbookChartGridlinesFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    line: {\n      returnType: "workbookChartLineFormat"\n    }\n  },\n  workbookChartLegend: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartLegendFormat"\n    }\n  },\n  workbookChartLegendFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    },\n    font: {\n      returnType: "workbookChartFont"\n    }\n  },\n  workbookChartLineFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartPoint: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartPointFormat"\n    }\n  },\n  workbookChartPoints: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartPointFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    }\n  },\n  workbookChartSeries: {\n    properties: ["points|workbookChartPoints|/[Name]|workbookChartPoint"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartSeriesFormat"\n    },\n    points: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookChartPoints"\n    }\n  },\n  workbookChartSeriess: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookChartSeriesFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    },\n    line: {\n      returnType: "workbookChartLineFormat"\n    }\n  },\n  workbookChartTitle: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookChartTitleFormat"\n    }\n  },\n  workbookChartTitleFormat: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    fill: {\n      returnType: "workbookChartFill"\n    },\n    font: {\n      returnType: "workbookChartFont"\n    }\n  },\n  workbookComment: {\n    properties: ["replies|workbookCommentReplys|/[Name]|workbookCommentReply"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    replies: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookCommentReplys"\n    }\n  },\n  workbookComments: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookCommentReply: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookCommentReplys: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookFilter: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookFormatProtection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookFunctionResult: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookFunctions: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookNamedItem: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    worksheet: {\n      returnType: "workbookWorksheet"\n    }\n  },\n  workbookNamedItems: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookOperation: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookOperations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookPivotTable: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    worksheet: {\n      returnType: "workbookWorksheet"\n    }\n  },\n  workbookPivotTables: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRange: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    format: {\n      returnType: "workbookRangeFormat"\n    },\n    sort: {\n      returnType: "workbookRangeSort"\n    },\n    worksheet: {\n      returnType: "workbookWorksheet"\n    }\n  },\n  workbookRangeBorder: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRangeBorders: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRangeFill: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRangeFont: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRangeFormat: {\n    properties: ["borders|workbookRangeBorders|/[Name]|workbookRangeBorder"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    borders: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookRangeBorders"\n    },\n    fill: {\n      returnType: "workbookRangeFill"\n    },\n    font: {\n      returnType: "workbookRangeFont"\n    },\n    protection: {\n      returnType: "workbookFormatProtection"\n    }\n  },\n  workbookRangeSort: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookRangeView: {\n    properties: ["rows|workbookRangeViews|/[Name]|workbookRangeView"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    rows: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookRangeViews"\n    }\n  },\n  workbookRangeViews: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookTable: {\n    properties: ["columns|workbookTableColumns|/[Name]|workbookTableColumn", "rows|workbookTableRows|/[Name]|workbookTableRow"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    columns: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookTableColumns"\n    },\n    rows: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookTableRows"\n    },\n    sort: {\n      returnType: "workbookTableSort"\n    },\n    worksheet: {\n      returnType: "workbookWorksheet"\n    }\n  },\n  workbookTables: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookTableColumn: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    filter: {\n      returnType: "workbookFilter"\n    }\n  },\n  workbookTableColumns: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookTableRow: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookTableRows: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookTableSort: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookWorksheet: {\n    properties: ["charts|workbookCharts|/[Name]|workbookChart", "names|workbookNamedItems|/[Name]|workbookNamedItem", "pivotTables|workbookPivotTables|/[Name]|workbookPivotTable", "tables|workbookTables|/[Name]|workbookTable"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    charts: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookCharts"\n    },\n    names: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookNamedItems"\n    },\n    pivotTables: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookPivotTables"\n    },\n    protection: {\n      returnType: "workbookWorksheetProtection"\n    },\n    tables: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workbookTables"\n    }\n  },\n  workbookWorksheets: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workbookWorksheetProtection: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workflow: {\n    properties: ["executionScope|userProcessingResults|/[Name]|userProcessingResult", "runs|runs|/[Name]|run", "taskReports|taskReports|/[Name]|taskReport", "userProcessingResults|userProcessingResults|/[Name]|userProcessingResult", "versions|workflowVersions|/[Name]|workflowVersion"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    executionScope: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userProcessingResults"\n    },\n    runs: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "runs"\n    },\n    taskReports: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "taskReports"\n    },\n    userProcessingResults: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "userProcessingResults"\n    },\n    versions: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "workflowVersions"\n    }\n  },\n  workflowBase: {\n    properties: ["tasks|tasks|/[Name]|task"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    createdBy: {\n      returnType: "user"\n    },\n    lastModifiedBy: {\n      returnType: "user"\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tasks"\n    }\n  },\n  workflowTemplate: {\n    properties: ["tasks|tasks|/[Name]|task"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    tasks: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "tasks"\n    }\n  },\n  workflowVersion: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workforceIntegration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workforceIntegrations: {\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  workingTimeSchedule: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  },\n  x509CertificateAuthenticationMethodConfiguration: {\n    properties: ["includeTargets|authenticationMethodTargets|/[Name]|authenticationMethodTarget"],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    },\n    includeTargets: {\n      requestType: utils_1.RequestType.Get,\n      returnType: "authenticationMethodTargets"\n    }\n  },\n  x509CertificateCombinationConfiguration: {\n    properties: [],\n    query: {\n      argNames: ["oData"],\n      requestType: utils_1.RequestType.OData\n    }\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/mapper/v2.js?')},"./build/rest.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.$REST = void 0;\nvar Helper = __webpack_require__(/*! ./helper */ "./build/helper/index.js");\nvar Lib = __webpack_require__(/*! ./lib */ "./build/lib/index.js");\nvar LibV2 = __webpack_require__(/*! ./v2 */ "./build/v2/index.js");\nvar sptypes_1 = __webpack_require__(/*! ./sptypes */ "./build/sptypes/index.js");\n/**\n * SharePoint REST Library\n */\nexports.$REST = {\n  __ver: 8.82,\n  AppContext: function AppContext(siteUrl) {\n    return Lib.Site.getAppContext(siteUrl);\n  },\n  Apps: Lib.Apps,\n  ContextInfo: Lib.ContextInfo,\n  DefaultRequestToHostFl: false,\n  drive: LibV2.drive,\n  drives: LibV2.drives,\n  GetWebUrlFromPageUrl: Lib.Web.getWebUrlFromPageUrl,\n  Graph: Lib.Graph,\n  GraphTypes: sptypes_1.GraphTypes,\n  GroupService: Lib.GroupService,\n  GroupSiteManager: Lib.GroupSiteManager,\n  Helper: Helper,\n  HubSites: Lib.HubSites,\n  HubSitesUtility: Lib.HubSitesUtility,\n  List: Lib.List,\n  ListByEntityName: Lib.List.getByEntityName,\n  ListDataAsStream: Lib.List.getDataAsStream,\n  Navigation: Lib.Navigation,\n  PeopleManager: Lib.PeopleManager,\n  PeoplePicker: Lib.PeoplePicker,\n  ProfileLoader: Lib.ProfileLoader,\n  RemoteWeb: function RemoteWeb(requestUrl) {\n    return Lib.Web.getRemoteWeb(requestUrl);\n  },\n  Search: Lib.Search,\n  Site: Lib.Site,\n  SiteIconManager: Lib.SiteIconManager,\n  SiteManager: Lib.SiteManager,\n  SitePages: Lib.SitePages,\n  SiteExists: function SiteExists(url) {\n    return Lib.Site.exists(url);\n  },\n  sites: LibV2.sites,\n  SiteUrl: function SiteUrl(id) {\n    return Lib.Site.getUrlById(id);\n  },\n  SPTypes: sptypes_1.SPTypes,\n  SocialFeed: Lib.SocialFeed,\n  ThemeManager: Lib.ThemeManager,\n  UserProfile: Lib.UserProfile,\n  Utility: Lib.Utility,\n  Web: Lib.Web,\n  WebTemplateExtensions: Lib.WebTemplateExtensions,\n  WorkflowInstanceService: Lib.WorkflowInstanceService,\n  WorkflowSubscriptionService: Lib.WorkflowSubscriptionService\n};\n// See if the library doesn\'t exist, or is an older version\nvar global = Lib.ContextInfo.window.$REST;\nif (global == null || global.__ver == null || global.__ver < exports.$REST.__ver) {\n  // Set the global variable\n  Lib.ContextInfo.window.$REST = exports.$REST;\n  // Ensure the SP lib exists\n  if (Lib.ContextInfo.window.SP) {\n    // If MDS is turned on in a SP2013 environment, it may throw an error\n    try {\n      // Alert other scripts this library is loaded\n      Lib.ContextInfo.window.SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs("gd-sprest");\n      Lib.ContextInfo.window.SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs("gd-sprest.js");\n    } catch (_a) {\n      // Log\n      console.error("[gd-sprest] Error notifying scripts using the SP SOD library.");\n    }\n  }\n}\n\n//# sourceURL=webpack://gd-sprest/./build/rest.js?')},"./build/sptypes/graphtypes.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.bookingReminderRecipients = exports.bookingPriceType = exports.bookingPageAccessControl = exports.answerInputType = exports.volumeType = exports.x509CertificateRuleType = exports.x509CertificateAuthenticationMode = exports.x509CertificateAffinityLevel = exports.microsoftAuthenticatorAuthenticationMode = exports.fido2RestrictionEnforcementType = exports.featureTargetType = exports.externalEmailOtpState = exports.baseAuthenticationMethod = exports.authenticationStrengthRequirements = exports.authenticationStrengthPolicyType = exports.authenticationMethodTargetType = exports.authenticationMethodState = exports.authenticationMethodsPolicyMigrationState = exports.authenticationMethodModes = exports.advancedConfigState = exports.userDefaultAuthenticationMethod = exports.signInUserType = exports.riskState = exports.riskLevel = exports.riskEventType = exports.riskDetail = exports.provisioningStepType = exports.provisioningStatusErrorCategory = exports.provisioningResult = exports.provisioningAction = exports.outlierMemberType = exports.outlierContainerType = exports.operationResult = exports.migrationStatus = exports.initiatorType = exports.includedUserTypes = exports.includedUserRoles = exports.groupType = exports.featureType = exports.conditionalAccessStatus = exports.authenticationMethodFeature = exports.appliedConditionalAccessPolicyResult = exports.workflowTriggerTimeBasedAttribute = exports.workflowExecutionType = exports.valueType = exports.membershipChangeType = exports.lifecycleWorkflowProcessingStatus = exports.lifecycleWorkflowCategory = exports.lifecycleTaskCategory = exports.customTaskExtensionOperationStatus = void 0;\nexports.federatedIdpMfaBehavior = exports.crossTenantAccessPolicyTargetType = exports.crossTenantAccessPolicyTargetConfigurationAccessType = exports.b2bIdentityProvidersType = exports.authenticationProtocol = exports.appManagementRestrictionState = exports.appKeyCredentialRestrictionType = exports.appCredentialRestrictionType = exports.allowInvitesFrom = exports.multiFactorAuthConfiguration = exports.onlineMeetingPresenters = exports.meetingChatMode = exports.lobbyBypassScope = exports.userType = exports.userFlowType = exports.identityUserFlowAttributeType = exports.identityUserFlowAttributeInputType = exports.identityUserFlowAttributeDataType = exports.authenticationAttributeCollectionInputType = exports.subjectRightsRequestType = exports.subjectRightsRequestStatus = exports.subjectRightsRequestStageStatus = exports.subjectRightsRequestStage = exports.dataSubjectType = exports.bodyType = exports.microsoftManagedDesktopType = exports.cloudPcRestorePointFrequencyType = exports.cloudPcRegionGroup = exports.cloudPcProvisioningType = exports.cloudPcProvisioningPolicyImageType = exports.cloudPcOnPremisesConnectionType = exports.cloudPcOnPremisesConnectionStatus = exports.cloudPcOnPremisesConnectionHealthCheckErrorType = exports.cloudPcGalleryImageStatus = exports.cloudPcDomainJoinType = exports.cloudPcDeviceImageStatus = exports.cloudPcDeviceImageOsStatus = exports.cloudPcDeviceImageErrorCode = exports.cloudPcAuditCategory = exports.cloudPcAuditActivityResult = exports.cloudPcAuditActivityOperationType = exports.physicalAddressType = exports.phoneType = exports.locationUniqueIdType = exports.locationType = exports.dayOfWeek = exports.bookingStaffRole = exports.bookingStaffMembershipStatus = exports.bookingsServiceAvailabilityType = exports.bookingsAvailabilityStatus = void 0;\nexports.automaticRepliesStatus = exports.attachmentType = exports.bookingType = exports.freeBusyStatus = exports.attendeeType = exports.activityDomain = exports.workbookOperationStatus = exports.serviceAppStatus = exports.restoreSessionStatus = exports.restorePointTags = exports.restorePointPreference = exports.restorableArtifact = exports.protectionUnitStatus = exports.protectionRuleStatus = exports.protectionPolicyStatus = exports.disableReason = exports.destinationType = exports.backupServiceStatus = exports.backupServiceConsumer = exports.artifactRestoreStatus = exports.educationUserRole = exports.educationGender = exports.educationExternalSource = exports.contactRelationship = exports.educationSubmissionStatus = exports.educationModuleStatus = exports.educationFeedbackResourceOutcomeStatus = exports.educationAssignmentStatus = exports.educationAddToCalendarOptions = exports.educationAddedStudentAction = exports.browserSiteTargetEnvironment = exports.browserSiteStatus = exports.browserSiteMergeType = exports.browserSiteListStatus = exports.browserSiteCompatibilityMode = exports.browserSharedCookieStatus = exports.browserSharedCookieSourceEnvironment = exports.weakAlgorithms = exports.templateApplicationLevel = exports.promptLoginBehavior = exports.permissionType = exports.permissionClassificationType = exports.partnerTenantType = exports.onPremisesDirectorySynchronizationDeletionPreventionType = exports.nativeAuthenticationApisEnabled = exports.multiTenantOrganizationState = exports.multiTenantOrganizationMemberState = exports.multiTenantOrganizationMemberRole = exports.multiTenantOrganizationMemberProcessingStatus = exports.layoutTemplateType = void 0;\nexports.attributeFlowType = exports.attributeFlowBehavior = exports.attributeDefinitionMetadata = exports.stagedFeatureName = exports.virtualAppointmentMessageType = exports.remindBeforeTimeInMinutesType = exports.titleAreaTextAlignmentType = exports.titleAreaLayoutType = exports.siteArchiveStatus = exports.sensitivityLabelAssignmentMethod = exports.sectionEmphasisType = exports.pagePromotionType = exports.pageLayoutType = exports.mediaSourceContentCategory = exports.longRunningOperationStatus = exports.horizontalSectionLayoutType = exports.driveItemSourceApplication = exports.columnTypes = exports.sharingDomainRestrictionMode = exports.sharingCapabilities = exports.imageTaggingChoice = exports.fileStorageContainerStatus = exports.weekIndex = exports.websiteType = exports.userPurpose = exports.timeZoneStandard = exports.sensitivity = exports.selectionLikelihoodInfo = exports.responseType = exports.recurrenceRangeType = exports.recurrencePatternType = exports.recipientScopeType = exports.onlineMeetingProviderType = exports.messageActionFlag = exports.meetingRequestType = exports.meetingMessageType = exports.mailTipsType = exports.inferenceClassificationType = exports.importance = exports.followupFlagStatus = exports.externalAudienceScope = exports.exchangeIdFormat = exports.eventType = exports.delegateMeetingMessageDeliveryOptions = exports.categoryColor = exports.calendarSharingActionType = exports.calendarSharingActionImportance = exports.calendarSharingAction = exports.calendarRoleType = exports.calendarColor = void 0;\nexports.tokenIssuerType = exports.templateScenarios = exports.signinFrequencyType = exports.signInFrequencyInterval = exports.signInFrequencyAuthenticationType = exports.riskDetectionTimingType = exports.persistentBrowserSessionMode = exports.filterMode = exports.countryLookupMethodType = exports.conditionalAccessTransferMethods = exports.conditionalAccessPolicyState = exports.conditionalAccessInsiderRiskLevels = exports.conditionalAccessGuestOrExternalUserTypes = exports.conditionalAccessGrantControl = exports.conditionalAccessExternalTenantsMembershipKind = exports.conditionalAccessDevicePlatform = exports.conditionalAccessClientApp = exports.cloudAppSecuritySessionControlType = exports.activityType = exports.agreementAcceptanceState = exports.userSignInRecommendationScope = exports.consentRequestFilterByCurrentUserOptions = exports.approvalFilterByCurrentUserOptions = exports.accessReviewStageFilterByCurrentUserOptions = exports.accessReviewScheduleDefinitionFilterByCurrentUserOptions = exports.accessReviewInstanceFilterByCurrentUserOptions = exports.accessReviewInstanceDecisionItemFilterByCurrentUserOptions = exports.accessReviewHistoryStatus = exports.accessReviewHistoryDecisionFilter = exports.endpointType = exports.synchronizationTaskExecutionResult = exports.synchronizationStatusCode = exports.synchronizationSecret = exports.synchronizationScheduleState = exports.synchronizationMetadata = exports.synchronizationJobRestartScope = exports.synchronizationDisposition = exports.scopeOperatorType = exports.scopeOperatorMultiValuedComparisonType = exports.quarantineReason = exports.objectMappingMetadata = exports.objectFlowTypes = exports.objectDefinitionMetadata = exports.mutability = exports.escrowBehavior = exports.entrySyncOperation = exports.entryExportStatus = exports.directoryDefinitionDiscoverabilities = exports.attributeType = exports.attributeMappingSourceType = void 0;\nexports.appLockerApplicationControlType = exports.appListType = exports.applicationGuardBlockFileTransferType = exports.applicationGuardBlockClipboardSharingType = exports.androidWorkProfileRequiredPasswordType = exports.androidWorkProfileDefaultAppPermissionPolicyType = exports.androidWorkProfileCrossProfileDataSharingType = exports.androidRequiredPasswordType = exports.installState = exports.windowsDeviceType = exports.windowsArchitecture = exports.win32LobAutoUpdateSupersededAppsState = exports.win32LobAppRuleType = exports.win32LobAppRuleOperator = exports.win32LobAppReturnCodeType = exports.win32LobAppRestartBehavior = exports.win32LobAppRegistryRuleOperationType = exports.win32LobAppPowerShellScriptRuleOperationType = exports.win32LobAppNotification = exports.win32LobAppMsiPackageType = exports.win32LobAppFileSystemOperationType = exports.win32LobAppDeliveryOptimizationPriority = exports.vppTokenAccountType = exports.runAsAccountType = exports.mobileAppPublishingState = exports.mobileAppContentFileUploadState = exports.microsoftStoreForBusinessLicenseType = exports.microsoftEdgeChannel = exports.mdmAppConfigKeyType = exports.managedAppAvailability = exports.installIntent = exports.complianceStatus = exports.certificateStatus = exports.socialIdentitySourceType = exports.connectedOrganizationState = exports.expirationPatternType = exports.customExtensionCalloutInstanceStatus = exports.allowedTargetScope = exports.accessReviewExpirationBehavior = exports.accessPackageSubjectType = exports.accessPackageRequestType = exports.accessPackageRequestState = exports.accessPackageFilterByCurrentUserOptions = exports.accessPackageExternalUserLifecycleAction = exports.accessPackageCustomExtensionStage = exports.accessPackageCatalogType = exports.accessPackageCatalogState = exports.accessPackageAssignmentState = exports.accessPackageAssignmentRequestFilterByCurrentUserOptions = exports.accessPackageAssignmentFilterByCurrentUserOptions = void 0;\nexports.stateManagementSetting = exports.siteSecurityLevel = exports.sharedPCAllowedAccountType = exports.sharedPCAccountDeletionPolicyType = exports.settingSourceType = exports.safeSearchFilterType = exports.requiredPasswordType = exports.ratingUnitedStatesTelevisionType = exports.ratingUnitedStatesMoviesType = exports.ratingUnitedKingdomTelevisionType = exports.ratingUnitedKingdomMoviesType = exports.ratingNewZealandTelevisionType = exports.ratingNewZealandMoviesType = exports.ratingJapanTelevisionType = exports.ratingJapanMoviesType = exports.ratingIrelandTelevisionType = exports.ratingIrelandMoviesType = exports.ratingGermanyTelevisionType = exports.ratingGermanyMoviesType = exports.ratingFranceTelevisionType = exports.ratingFranceMoviesType = exports.ratingCanadaTelevisionType = exports.ratingCanadaMoviesType = exports.ratingAustraliaTelevisionType = exports.ratingAustraliaMoviesType = exports.ratingAppsType = exports.prereleaseFeatures = exports.policyPlatformType = exports.miracastChannel = exports.iosUpdatesInstallStatus = exports.iosNotificationAlertType = exports.internetSiteSecurityLevel = exports.firewallPreSharedKeyEncodingMethodType = exports.firewallPacketQueueingMethodType = exports.firewallCertificateRevocationListCheckMethodType = exports.enablement = exports.editionUpgradeLicenseType = exports.edgeSearchEngineType = exports.edgeCookiePolicy = exports.diagnosticDataSubmissionMode = exports.deviceThreatProtectionLevel = exports.deviceComplianceActionType = exports.defenderThreatAction = exports.defenderScanType = exports.defenderPromptForSampleSubmission = exports.defenderMonitorFileActivity = exports.defenderCloudBlockLevelType = exports.bitLockerEncryptionMethod = exports.autoRestartNotificationDismissalMethod = exports.automaticUpdateMode = void 0;\nexports.windowsMalwareState = exports.windowsMalwareSeverity = exports.windowsMalwareExecutionState = exports.windowsMalwareCategory = exports.windowsDeviceHealthState = exports.windowsDefenderProductStatus = exports.userExperienceAnalyticsSummarizedBy = exports.userExperienceAnalyticsOperatingSystemRestartCategory = exports.userExperienceAnalyticsInsightSeverity = exports.userExperienceAnalyticsHealthState = exports.operatingSystemUpgradeEligibility = exports.obliterationBehavior = exports.managementAgentType = exports.managedDevicePartnerReportedHealthState = exports.managedDeviceOwnerType = exports.diskType = exports.deviceRegistrationState = exports.deviceManagementSubscriptionState = exports.deviceManagementExchangeAccessStateReason = exports.deviceManagementExchangeAccessState = exports.deviceLogCollectionTemplateType = exports.deviceEnrollmentType = exports.detectedAppPlatformType = exports.complianceState = exports.appLogUploadState = exports.appLogDecryptionAlgorithm = exports.actionState = exports.windowsHelloForBusinessPinUsage = exports.vppTokenSyncStatus = exports.vppTokenState = exports.mobileThreatPartnerTenantState = exports.mdmAuthority = exports.deviceManagementPartnerTenantState = exports.deviceManagementPartnerAppType = exports.deviceManagementExchangeConnectorType = exports.deviceManagementExchangeConnectorSyncType = exports.deviceManagementExchangeConnectorStatus = exports.windowsUserAccountControlSettings = exports.windowsUpdateType = exports.windowsUpdateNotificationDisplayOption = exports.windowsUpdateForBusinessUpdateWeeks = exports.windowsStartMenuModeType = exports.windowsStartMenuAppListVisibilityType = exports.windowsSpotlightEnablementSettings = exports.windowsDeliveryOptimizationMode = exports.windows10EditionType = exports.welcomeScreenMeetingInformation = exports.weeklySchedule = exports.webBrowserCookieSettings = exports.visibilitySetting = void 0;\nexports.assignmentScheduleFilterByCurrentUserOptions = exports.windowsSettingType = exports.delegatedAdminRelationshipStatus = exports.delegatedAdminRelationshipRequestStatus = exports.delegatedAdminRelationshipRequestAction = exports.delegatedAdminRelationshipOperationType = exports.delegatedAdminAccessContainerType = exports.delegatedAdminAccessAssignmentStatus = exports.operationStatus = exports.onenoteUserRole = exports.onenoteSourceService = exports.onenotePatchInsertPosition = exports.onenotePatchActionType = exports.plannerPreviewType = exports.plannerContainerType = exports.searchContent = exports.searchAlterationType = exports.entityType = exports.bucketAggregationSortProperty = exports.serviceUpdateSeverity = exports.serviceUpdateCategory = exports.serviceHealthStatus = exports.serviceHealthOrigin = exports.serviceHealthClassificationType = exports.postType = exports.appsUpdateChannelType = exports.applicationType = exports.deviceEnrollmentFailureReason = exports.deviceManagementReportStatus = exports.deviceManagementReportFileFormat = exports.deviceManagementExportJobLocalizationType = exports.remoteAssistanceOnboardingStatus = exports.notificationTemplateBrandingOptions = exports.windowsInformationProtectionPinCharacterRequirements = exports.windowsInformationProtectionEnforcementLevel = exports.targetedManagedAppGroupType = exports.managedBrowserType = exports.managedAppPinCharacterSet = exports.managedAppFlaggedReason = exports.managedAppDataTransferLevel = exports.managedAppDataStorageLocation = exports.managedAppDataEncryptionType = exports.managedAppClipboardSharingLevel = exports.windowsUserType = exports.windowsDeviceUsageType = exports.windowsAutopilotDeviceType = exports.importedWindowsAutopilotDeviceIdentityUploadStatus = exports.importedWindowsAutopilotDeviceIdentityImportStatus = exports.enrollmentState = exports.windowsMalwareThreatState = void 0;\nexports.payloadTheme = exports.payloadIndustry = exports.payloadDeliveryPlatform = exports.payloadComplexity = exports.payloadBrand = exports.oAuthAppScope = exports.notificationDeliveryPreference = exports.notificationDeliveryFrequency = exports.endUserNotificationType = exports.endUserNotificationSettingType = exports.endUserNotificationPreference = exports.coachmarkLocationType = exports.clickSource = exports.attackSimulationOperationType = exports.accountTargetContentType = exports.devicePlatformType = exports.dataPolicyOperationStatus = exports.status = exports.printTaskProcessingState = exports.printScaling = exports.printQuality = exports.printOrientation = exports.printOperationProcessingState = exports.printMultipageLayout = exports.printJobStateDetail = exports.printJobProcessingState = exports.printFinishing = exports.printEvent = exports.printerProcessingStateDetail = exports.printerProcessingState = exports.printerFeedOrientation = exports.printDuplexMode = exports.printColorMode = exports.unifiedRoleScheduleRequestActions = exports.unifiedRoleManagementPolicyRuleTargetOperations = exports.scheduleRequestActions = exports.roleEligibilityScheduleRequestFilterByCurrentUserOptions = exports.roleEligibilityScheduleInstanceFilterByCurrentUserOptions = exports.roleEligibilityScheduleFilterByCurrentUserOptions = exports.roleAssignmentScheduleRequestFilterByCurrentUserOptions = exports.roleAssignmentScheduleInstanceFilterByCurrentUserOptions = exports.roleAssignmentScheduleFilterByCurrentUserOptions = exports.privilegedAccessGroupRelationships = exports.privilegedAccessGroupMemberType = exports.privilegedAccessGroupAssignmentType = exports.eligibilityScheduleRequestFilterByCurrentUserOptions = exports.eligibilityScheduleInstanceFilterByCurrentUserOptions = exports.eligibilityScheduleFilterByCurrentUserOptions = exports.assignmentScheduleRequestFilterByCurrentUserOptions = exports.assignmentScheduleInstanceFilterByCurrentUserOptions = void 0;\nexports.virtualEventAttendeeRegistrationStatus = exports.tone = exports.sendDtmfCompletionReason = exports.screenSharingRole = exports.routingType = exports.routingMode = exports.rejectReason = exports.recordingStatus = exports.onlineMeetingVideoDisabledReason = exports.onlineMeetingRole = exports.onlineMeetingContentSharingDisabledReason = exports.modality = exports.meetingChatHistoryDefaultMode = exports.meetingAudience = exports.mediaState = exports.mediaDirection = exports.changeType = exports.callTranscriptionState = exports.callState = exports.callDirection = exports.broadcastMeetingAudience = exports.userAccountSecurityType = exports.securityResourceType = exports.securityNetworkProtocol = exports.registryValueType = exports.registryOperation = exports.registryHive = exports.processIntegrityLevel = exports.logonType = exports.fileHashType = exports.emailRole = exports.connectionStatus = exports.connectionDirection = exports.alertStatus = exports.alertSeverity = exports.alertFeedback = exports.trainingType = exports.trainingStatus = exports.trainingSettingType = exports.trainingCompletionDuration = exports.trainingAvailabilityStatus = exports.trainingAssignedTo = exports.targettedUserType = exports.simulationStatus = exports.simulationContentStatus = exports.simulationContentSource = exports.simulationAutomationStatus = exports.simulationAutomationRunStatus = exports.simulationAttackType = exports.simulationAttackTechnique = void 0;\nexports.engagementAsyncOperationType = exports.communityPrivacy = exports.wellknownListName = exports.taskStatus = exports.threatExpectedAssessment = exports.threatCategory = exports.threatAssessmentStatus = exports.threatAssessmentResultType = exports.threatAssessmentRequestSource = exports.threatAssessmentContentType = exports.mailDestinationRoutingReason = exports.workforceIntegrationSupportedEntities = exports.workforceIntegrationEncryptionProtocol = exports.timeOffReasonIconType = exports.scheduleEntityTheme = exports.scheduleChangeState = exports.scheduleChangeRequestActor = exports.teamworkUserIdentityType = exports.teamworkTagType = exports.teamworkConversationIdentityType = exports.teamworkCallEventType = exports.teamworkApplicationIdentityType = exports.teamworkActivityTopicSource = exports.teamVisibilityType = exports.teamSpecialization = exports.teamsAsyncOperationType = exports.teamsAsyncOperationStatus = exports.teamsAppResourceSpecificPermissionType = exports.teamsAppPublishingState = exports.teamsAppDistributionMethod = exports.giphyRatingType = exports.clonableTeamParts = exports.chatType = exports.chatMessageType = exports.chatMessagePolicyViolationVerdictDetailsTypes = exports.chatMessagePolicyViolationUserActionTypes = exports.chatMessagePolicyViolationDlpActionTypes = exports.chatMessageImportance = exports.chatMessageActions = exports.channelMembershipType = exports.callRecordingStatus = exports.binaryOperator = exports.lifecycleEventType = exports.authenticationPhoneType = exports.authenticationMethodSignInState = exports.authenticationMethodKeyStrength = exports.attestationLevel = exports.virtualEventStatus = exports.virtualEventRegistrationQuestionAnswerInputType = exports.virtualEventRegistrationPredefinedQuestionLabel = void 0;\nexports.vmCloudProvider = exports.serviceSource = exports.servicePrincipalType = exports.protocolType = exports.onboardingStatus = exports.mailboxConfigurationType = exports.kubernetesServiceType = exports.kubernetesPlatform = exports.ioTDeviceImportanceType = exports.incidentStatus = exports.googleCloudLocationType = exports.fileHashAlgorithm = exports.evidenceVerdict = exports.evidenceRole = exports.evidenceRemediationStatus = exports.deviceRiskScore = exports.deviceHealthStatus = exports.detectionStatus = exports.detectionSource = exports.defenderAvStatus = exports.containerPortProtocol = exports.alertDetermination = exports.alertClassification = exports.behaviorDuringRetentionPeriod = exports.sensorType = exports.sensorHealthStatus = exports.healthIssueType = exports.healthIssueStatus = exports.healthIssueSeverity = exports.deploymentStatus = exports.sourceType = exports.purgeType = exports.purgeAreas = exports.exportOptions = exports.exportLocation = exports.exportFormat = exports.exportFileStructure = exports.exportCriteria = exports.dataSourceScopes = exports.dataSourceHoldStatus = exports.dataSourceContainerStatus = exports.childSelectability = exports.caseStatus = exports.caseOperationStatus = exports.caseAction = exports.additionalOptions = exports.additionalDataOptions = exports.level = exports.courseStatus = exports.assignmentType = void 0;\nexports.ruleOperation = exports.propertyType = exports.label = exports.identityType = exports.externalItemContentType = exports.externalActivityType = exports.connectionState = exports.connectionOperationStatus = exports.aclType = exports.accessType = exports.answerState = exports.billingPeriod = exports.attributeSet = exports.wifiRadioType = exports.wifiBand = exports.videoCodec = exports.userFeedbackRating = exports.serviceRole = exports.pstnCallDurationSource = exports.productFamily = exports.networkTransportProtocol = exports.networkConnectionType = exports.mediaStreamDirection = exports.failureStage = exports.clientPlatform = exports.callType = exports.audioCodec = exports.termGroupScope = exports.relationType = exports.whoisDomainStatus = exports.vulnerabilitySeverity = exports.intelligenceProfileKind = exports.indicatorSource = exports.hostReputationRuleSeverity = exports.hostReputationClassification = exports.hostPortStatus = exports.hostPortProtocol = exports.contentFormat = exports.retentionTrigger = exports.queryType = exports.eventStatusType = exports.eventPropagationStatus = exports.defaultRecordBehavior = exports.actionAfterRetentionPeriod = void 0;\n/** customTaskExtensionOperationStatus types */\nexports.customTaskExtensionOperationStatus = {\n  completed: 0,\n  failed: 1,\n  unknownFutureValue: 2\n};\n/** lifecycleTaskCategory types */\nexports.lifecycleTaskCategory = {\n  joiner: 1,\n  leaver: 2,\n  unknownFutureValue: 4,\n  mover: 8\n};\n/** lifecycleWorkflowCategory types */\nexports.lifecycleWorkflowCategory = {\n  joiner: 0,\n  leaver: 1,\n  unknownFutureValue: 2,\n  mover: 3\n};\n/** lifecycleWorkflowProcessingStatus types */\nexports.lifecycleWorkflowProcessingStatus = {\n  queued: 0,\n  inProgress: 1,\n  completed: 2,\n  completedWithErrors: 3,\n  canceled: 4,\n  failed: 5,\n  unknownFutureValue: 6\n};\n/** membershipChangeType types */\nexports.membershipChangeType = {\n  add: 1,\n  remove: 2,\n  unknownFutureValue: 3\n};\n/** valueType types */\nexports.valueType = {\n  "enum": 0,\n  string: 1,\n  "int": 2,\n  bool: 3,\n  unknownFutureValue: 4\n};\n/** workflowExecutionType types */\nexports.workflowExecutionType = {\n  scheduled: 0,\n  onDemand: 1,\n  unknownFutureValue: 2\n};\n/** workflowTriggerTimeBasedAttribute types */\nexports.workflowTriggerTimeBasedAttribute = {\n  employeeHireDate: 0,\n  employeeLeaveDateTime: 1,\n  unknownFutureValue: 2,\n  createdDateTime: 3\n};\n/** appliedConditionalAccessPolicyResult types */\nexports.appliedConditionalAccessPolicyResult = {\n  success: 0,\n  failure: 1,\n  notApplied: 2,\n  notEnabled: 3,\n  unknown: 4,\n  unknownFutureValue: 5,\n  reportOnlySuccess: 6,\n  reportOnlyFailure: 7,\n  reportOnlyNotApplied: 8,\n  reportOnlyInterrupted: 9\n};\n/** authenticationMethodFeature types */\nexports.authenticationMethodFeature = {\n  ssprRegistered: 0,\n  ssprEnabled: 1,\n  ssprCapable: 2,\n  passwordlessCapable: 3,\n  mfaCapable: 4,\n  unknownFutureValue: 5\n};\n/** conditionalAccessStatus types */\nexports.conditionalAccessStatus = {\n  success: 0,\n  failure: 1,\n  notApplied: 2,\n  unknownFutureValue: 3\n};\n/** featureType types */\nexports.featureType = {\n  registration: 0,\n  reset: 1,\n  unknownFutureValue: 2\n};\n/** groupType types */\nexports.groupType = {\n  unifiedGroups: 0,\n  azureAD: 1,\n  unknownFutureValue: 2\n};\n/** includedUserRoles types */\nexports.includedUserRoles = {\n  all: 0,\n  privilegedAdmin: 1,\n  admin: 2,\n  user: 3,\n  unknownFutureValue: 4\n};\n/** includedUserTypes types */\nexports.includedUserTypes = {\n  all: 0,\n  member: 1,\n  guest: 2,\n  unknownFutureValue: 3\n};\n/** initiatorType types */\nexports.initiatorType = {\n  user: 0,\n  application: 1,\n  system: 2,\n  unknownFutureValue: 3\n};\n/** migrationStatus types */\nexports.migrationStatus = {\n  ready: 0,\n  needsReview: 1,\n  additionalStepsRequired: 2,\n  unknownFutureValue: 3\n};\n/** operationResult types */\nexports.operationResult = {\n  success: 0,\n  failure: 1,\n  timeout: 2,\n  unknownFutureValue: 3\n};\n/** outlierContainerType types */\nexports.outlierContainerType = {\n  group: 0,\n  unknownFutureValue: 1\n};\n/** outlierMemberType types */\nexports.outlierMemberType = {\n  user: 0,\n  unknownFutureValue: 1\n};\n/** provisioningAction types */\nexports.provisioningAction = {\n  other: 0,\n  create: 1,\n  "delete": 2,\n  disable: 3,\n  update: 4,\n  stagedDelete: 5,\n  unknownFutureValue: 6\n};\n/** provisioningResult types */\nexports.provisioningResult = {\n  success: 0,\n  failure: 1,\n  skipped: 2,\n  warning: 3,\n  unknownFutureValue: 4\n};\n/** provisioningStatusErrorCategory types */\nexports.provisioningStatusErrorCategory = {\n  failure: 0,\n  nonServiceFailure: 1,\n  success: 2,\n  unknownFutureValue: 3\n};\n/** provisioningStepType types */\nexports.provisioningStepType = {\n  "import": 0,\n  scoping: 1,\n  matching: 2,\n  processing: 3,\n  referenceResolution: 4,\n  "export": 5,\n  unknownFutureValue: 6\n};\n/** riskDetail types */\nexports.riskDetail = {\n  none: 0,\n  adminGeneratedTemporaryPassword: 1,\n  userPerformedSecuredPasswordChange: 2,\n  userPerformedSecuredPasswordReset: 3,\n  adminConfirmedSigninSafe: 4,\n  aiConfirmedSigninSafe: 5,\n  userPassedMFADrivenByRiskBasedPolicy: 6,\n  adminDismissedAllRiskForUser: 7,\n  adminConfirmedSigninCompromised: 8,\n  hidden: 9,\n  adminConfirmedUserCompromised: 10,\n  unknownFutureValue: 11,\n  adminConfirmedServicePrincipalCompromised: 13,\n  adminDismissedAllRiskForServicePrincipal: 14,\n  m365DAdminDismissedDetection: 12,\n  userChangedPasswordOnPremises: 15,\n  adminDismissedRiskForSignIn: 16,\n  adminConfirmedAccountSafe: 17\n};\n/** riskEventType types */\nexports.riskEventType = {\n  unlikelyTravel: 0,\n  anonymizedIPAddress: 1,\n  maliciousIPAddress: 2,\n  unfamiliarFeatures: 3,\n  malwareInfectedIPAddress: 4,\n  suspiciousIPAddress: 5,\n  leakedCredentials: 6,\n  investigationsThreatIntelligence: 7,\n  generic: 8,\n  adminConfirmedUserCompromised: 9,\n  mcasImpossibleTravel: 10,\n  mcasSuspiciousInboxManipulationRules: 11,\n  investigationsThreatIntelligenceSigninLinked: 12,\n  maliciousIPAddressValidCredentialsBlockedIP: 13,\n  unknownFutureValue: 14\n};\n/** riskLevel types */\nexports.riskLevel = {\n  low: 0,\n  medium: 1,\n  high: 2,\n  hidden: 3,\n  none: 4,\n  unknownFutureValue: 5\n};\n/** riskState types */\nexports.riskState = {\n  none: 0,\n  confirmedSafe: 1,\n  remediated: 2,\n  dismissed: 3,\n  atRisk: 4,\n  confirmedCompromised: 5,\n  unknownFutureValue: 6\n};\n/** signInUserType types */\nexports.signInUserType = {\n  member: 0,\n  guest: 1,\n  unknownFutureValue: 3\n};\n/** userDefaultAuthenticationMethod types */\nexports.userDefaultAuthenticationMethod = {\n  push: 0,\n  oath: 1,\n  voiceMobile: 2,\n  voiceAlternateMobile: 3,\n  voiceOffice: 4,\n  sms: 5,\n  none: 6,\n  unknownFutureValue: 7\n};\n/** advancedConfigState types */\nexports.advancedConfigState = {\n  "default": 0,\n  enabled: 1,\n  disabled: 2,\n  unknownFutureValue: 3\n};\n/** authenticationMethodModes types */\nexports.authenticationMethodModes = {\n  password: 1,\n  voice: 2,\n  hardwareOath: 4,\n  softwareOath: 8,\n  sms: 16,\n  fido2: 32,\n  windowsHelloForBusiness: 64,\n  microsoftAuthenticatorPush: 128,\n  deviceBasedPush: 256,\n  temporaryAccessPassOneTime: 512,\n  temporaryAccessPassMultiUse: 1024,\n  email: 2048,\n  x509CertificateSingleFactor: 4096,\n  x509CertificateMultiFactor: 8192,\n  federatedSingleFactor: 16384,\n  federatedMultiFactor: 32768,\n  unknownFutureValue: 65536\n};\n/** authenticationMethodsPolicyMigrationState types */\nexports.authenticationMethodsPolicyMigrationState = {\n  preMigration: 0,\n  migrationInProgress: 1,\n  migrationComplete: 2,\n  unknownFutureValue: 3\n};\n/** authenticationMethodState types */\nexports.authenticationMethodState = {\n  enabled: 0,\n  disabled: 1\n};\n/** authenticationMethodTargetType types */\nexports.authenticationMethodTargetType = {\n  user: 0,\n  group: 1,\n  unknownFutureValue: 2\n};\n/** authenticationStrengthPolicyType types */\nexports.authenticationStrengthPolicyType = {\n  builtIn: 0,\n  custom: 1,\n  unknownFutureValue: 2\n};\n/** authenticationStrengthRequirements types */\nexports.authenticationStrengthRequirements = {\n  none: 0,\n  mfa: 1,\n  unknownFutureValue: 2\n};\n/** baseAuthenticationMethod types */\nexports.baseAuthenticationMethod = {\n  password: 1,\n  voice: 2,\n  hardwareOath: 3,\n  softwareOath: 4,\n  sms: 5,\n  fido2: 6,\n  windowsHelloForBusiness: 7,\n  microsoftAuthenticator: 8,\n  temporaryAccessPass: 9,\n  email: 10,\n  x509Certificate: 11,\n  federation: 12,\n  unknownFutureValue: 13\n};\n/** externalEmailOtpState types */\nexports.externalEmailOtpState = {\n  "default": 0,\n  enabled: 1,\n  disabled: 2,\n  unknownFutureValue: 3\n};\n/** featureTargetType types */\nexports.featureTargetType = {\n  group: 0,\n  administrativeUnit: 1,\n  role: 2,\n  unknownFutureValue: 3\n};\n/** fido2RestrictionEnforcementType types */\nexports.fido2RestrictionEnforcementType = {\n  allow: 0,\n  block: 1,\n  unknownFutureValue: 2\n};\n/** microsoftAuthenticatorAuthenticationMode types */\nexports.microsoftAuthenticatorAuthenticationMode = {\n  deviceBasedPush: 0,\n  push: 1,\n  any: 2\n};\n/** x509CertificateAffinityLevel types */\nexports.x509CertificateAffinityLevel = {\n  low: 0,\n  high: 1,\n  unknownFutureValue: 2\n};\n/** x509CertificateAuthenticationMode types */\nexports.x509CertificateAuthenticationMode = {\n  x509CertificateSingleFactor: 0,\n  x509CertificateMultiFactor: 1,\n  unknownFutureValue: 2\n};\n/** x509CertificateRuleType types */\nexports.x509CertificateRuleType = {\n  issuerSubject: 0,\n  policyOID: 1,\n  unknownFutureValue: 2,\n  issuerSubjectAndPolicyOID: 3\n};\n/** volumeType types */\nexports.volumeType = {\n  operatingSystemVolume: 1,\n  fixedDataVolume: 2,\n  removableDataVolume: 3,\n  unknownFutureValue: 4\n};\n/** answerInputType types */\nexports.answerInputType = {\n  text: 0,\n  radioButton: 1,\n  unknownFutureValue: 2\n};\n/** bookingPageAccessControl types */\nexports.bookingPageAccessControl = {\n  unrestricted: 0,\n  restrictedToOrganization: 1,\n  unknownFutureValue: 2\n};\n/** bookingPriceType types */\nexports.bookingPriceType = {\n  undefined: 0,\n  fixedPrice: 1,\n  startingAt: 2,\n  hourly: 3,\n  free: 4,\n  priceVaries: 5,\n  callUs: 6,\n  notSet: 7,\n  unknownFutureValue: 8\n};\n/** bookingReminderRecipients types */\nexports.bookingReminderRecipients = {\n  allAttendees: 0,\n  staff: 1,\n  customer: 2,\n  unknownFutureValue: 3\n};\n/** bookingsAvailabilityStatus types */\nexports.bookingsAvailabilityStatus = {\n  available: 0,\n  busy: 1,\n  slotsAvailable: 2,\n  outOfOffice: 3,\n  unknownFutureValue: 4\n};\n/** bookingsServiceAvailabilityType types */\nexports.bookingsServiceAvailabilityType = {\n  bookWhenStaffAreFree: 0,\n  notBookable: 1,\n  customWeeklyHours: 2,\n  unknownFutureValue: 3\n};\n/** bookingStaffMembershipStatus types */\nexports.bookingStaffMembershipStatus = {\n  active: 0,\n  pendingAcceptance: 1,\n  rejectedByStaff: 2,\n  unknownFutureValue: 3\n};\n/** bookingStaffRole types */\nexports.bookingStaffRole = {\n  guest: 0,\n  administrator: 1,\n  viewer: 2,\n  externalGuest: 3,\n  unknownFutureValue: 4,\n  scheduler: 5,\n  teamMember: 6\n};\n/** dayOfWeek types */\nexports.dayOfWeek = {\n  sunday: 0,\n  monday: 1,\n  tuesday: 2,\n  wednesday: 3,\n  thursday: 4,\n  friday: 5,\n  saturday: 6\n};\n/** locationType types */\nexports.locationType = {\n  "default": 0,\n  conferenceRoom: 1,\n  homeAddress: 2,\n  businessAddress: 3,\n  geoCoordinates: 4,\n  streetAddress: 5,\n  hotel: 6,\n  restaurant: 7,\n  localBusiness: 8,\n  postalAddress: 9\n};\n/** locationUniqueIdType types */\nexports.locationUniqueIdType = {\n  unknown: 0,\n  locationStore: 1,\n  directory: 2,\n  "private": 3,\n  bing: 4\n};\n/** phoneType types */\nexports.phoneType = {\n  home: 0,\n  business: 1,\n  mobile: 2,\n  other: 3,\n  assistant: 4,\n  homeFax: 5,\n  businessFax: 6,\n  otherFax: 7,\n  pager: 8,\n  radio: 9\n};\n/** physicalAddressType types */\nexports.physicalAddressType = {\n  unknown: 0,\n  home: 1,\n  business: 2,\n  other: 3\n};\n/** cloudPcAuditActivityOperationType types */\nexports.cloudPcAuditActivityOperationType = {\n  create: 0,\n  "delete": 1,\n  patch: 2,\n  unknownFutureValue: 3\n};\n/** cloudPcAuditActivityResult types */\nexports.cloudPcAuditActivityResult = {\n  success: 0,\n  clientError: 1,\n  failure: 2,\n  timeout: 3,\n  unknownFutureValue: 4\n};\n/** cloudPcAuditCategory types */\nexports.cloudPcAuditCategory = {\n  cloudPC: 0,\n  unknownFutureValue: 1\n};\n/** cloudPcDeviceImageErrorCode types */\nexports.cloudPcDeviceImageErrorCode = {\n  internalServerError: 0,\n  sourceImageNotFound: 1,\n  osVersionNotSupported: 2,\n  sourceImageInvalid: 3,\n  sourceImageNotGeneralized: 4,\n  unknownFutureValue: 5,\n  vmAlreadyAzureAdjoined: 6,\n  paidSourceImageNotSupport: 7,\n  sourceImageNotSupportCustomizeVMName: 8,\n  sourceImageSizeExceedsLimitation: 9\n};\n/** cloudPcDeviceImageOsStatus types */\nexports.cloudPcDeviceImageOsStatus = {\n  supported: 0,\n  supportedWithWarning: 1,\n  unknown: 2,\n  unknownFutureValue: 3\n};\n/** cloudPcDeviceImageStatus types */\nexports.cloudPcDeviceImageStatus = {\n  pending: 0,\n  ready: 1,\n  failed: 2,\n  unknownFutureValue: 3\n};\n/** cloudPcDomainJoinType types */\nexports.cloudPcDomainJoinType = {\n  azureADJoin: 0,\n  hybridAzureADJoin: 1,\n  unknownFutureValue: 2\n};\n/** cloudPcGalleryImageStatus types */\nexports.cloudPcGalleryImageStatus = {\n  supported: 0,\n  supportedWithWarning: 1,\n  notSupported: 2,\n  unknownFutureValue: 3\n};\n/** cloudPcOnPremisesConnectionHealthCheckErrorType types */\nexports.cloudPcOnPremisesConnectionHealthCheckErrorType = {\n  dnsCheckFqdnNotFound: 100,\n  dnsCheckNameWithInvalidCharacter: 101,\n  dnsCheckUnknownError: 199,\n  adJoinCheckFqdnNotFound: 200,\n  adJoinCheckIncorrectCredentials: 201,\n  adJoinCheckOrganizationalUnitNotFound: 202,\n  adJoinCheckOrganizationalUnitIncorrectFormat: 203,\n  adJoinCheckComputerObjectAlreadyExists: 204,\n  adJoinCheckAccessDenied: 205,\n  adJoinCheckCredentialsExpired: 206,\n  adJoinCheckAccountLockedOrDisabled: 207,\n  adJoinCheckAccountQuotaExceeded: 208,\n  adJoinCheckServerNotOperational: 209,\n  adJoinCheckUnknownError: 299,\n  endpointConnectivityCheckCloudPcUrlNotAllowListed: 300,\n  endpointConnectivityCheckWVDUrlNotAllowListed: 301,\n  endpointConnectivityCheckIntuneUrlNotAllowListed: 302,\n  endpointConnectivityCheckAzureADUrlNotAllowListed: 303,\n  endpointConnectivityCheckLocaleUrlNotAllowListed: 304,\n  endpointConnectivityCheckUnknownError: 399,\n  azureAdDeviceSyncCheckDeviceNotFound: 400,\n  azureAdDeviceSyncCheckLongSyncCircle: 401,\n  azureAdDeviceSyncCheckConnectDisabled: 402,\n  azureAdDeviceSyncCheckDurationExceeded: 403,\n  azureAdDeviceSyncCheckScpNotConfigured: 404,\n  azureAdDeviceSyncCheckTransientServiceError: 498,\n  azureAdDeviceSyncCheckUnknownError: 499,\n  resourceAvailabilityCheckNoSubnetIP: 500,\n  resourceAvailabilityCheckSubscriptionDisabled: 501,\n  resourceAvailabilityCheckAzurePolicyViolation: 502,\n  resourceAvailabilityCheckSubscriptionNotFound: 503,\n  resourceAvailabilityCheckSubscriptionTransferred: 504,\n  resourceAvailabilityCheckGeneralSubscriptionError: 505,\n  resourceAvailabilityCheckUnsupportedVNetRegion: 506,\n  resourceAvailabilityCheckResourceGroupInvalid: 507,\n  resourceAvailabilityCheckVNetInvalid: 508,\n  resourceAvailabilityCheckSubnetInvalid: 509,\n  resourceAvailabilityCheckResourceGroupBeingDeleted: 510,\n  resourceAvailabilityCheckVNetBeingMoved: 511,\n  resourceAvailabilityCheckSubnetDelegationFailed: 512,\n  resourceAvailabilityCheckSubnetWithExternalResources: 513,\n  resourceAvailabilityCheckResourceGroupLockedForReadonly: 514,\n  resourceAvailabilityCheckResourceGroupLockedForDelete: 515,\n  resourceAvailabilityCheckNoIntuneReaderRoleError: 516,\n  resourceAvailabilityCheckIntuneDefaultWindowsRestrictionViolation: 517,\n  resourceAvailabilityCheckIntuneCustomWindowsRestrictionViolation: 518,\n  resourceAvailabilityCheckDeploymentQuotaLimitReached: 519,\n  resourceAvailabilityCheckTransientServiceError: 598,\n  resourceAvailabilityCheckUnknownError: 599,\n  permissionCheckNoSubscriptionReaderRole: 600,\n  permissionCheckNoResourceGroupOwnerRole: 601,\n  permissionCheckNoVNetContributorRole: 602,\n  permissionCheckNoResourceGroupNetworkContributorRole: 603,\n  permissionCheckNoWindows365NetworkUserRole: 604,\n  permissionCheckNoWindows365NetworkInterfaceContributorRole: 605,\n  permissionCheckTransientServiceError: 698,\n  permissionCheckUnknownError: 699,\n  udpConnectivityCheckStunUrlNotAllowListed: 800,\n  udpConnectivityCheckTurnUrlNotAllowListed: 801,\n  udpConnectivityCheckUrlsNotAllowListed: 802,\n  udpConnectivityCheckUnknownError: 899,\n  internalServerErrorDeploymentCanceled: 900,\n  internalServerErrorAllocateResourceFailed: 901,\n  internalServerErrorVMDeploymentTimeout: 902,\n  internalServerErrorUnableToRunDscScript: 903,\n  ssoCheckKerberosConfigurationError: 904,\n  internalServerUnknownError: 999,\n  unknownFutureValue: 1000\n};\n/** cloudPcOnPremisesConnectionStatus types */\nexports.cloudPcOnPremisesConnectionStatus = {\n  pending: 0,\n  running: 1,\n  passed: 2,\n  failed: 3,\n  warning: 4,\n  informational: 5,\n  unknownFutureValue: 6\n};\n/** cloudPcOnPremisesConnectionType types */\nexports.cloudPcOnPremisesConnectionType = {\n  hybridAzureADJoin: 0,\n  azureADJoin: 1,\n  unknownFutureValue: 2\n};\n/** cloudPcProvisioningPolicyImageType types */\nexports.cloudPcProvisioningPolicyImageType = {\n  gallery: 0,\n  custom: 1,\n  unknownFutureValue: 2\n};\n/** cloudPcProvisioningType types */\nexports.cloudPcProvisioningType = {\n  dedicated: 0,\n  shared: 1,\n  unknownFutureValue: 2\n};\n/** cloudPcRegionGroup types */\nexports.cloudPcRegionGroup = {\n  "default": 0,\n  australia: 1,\n  canada: 2,\n  usCentral: 3,\n  usEast: 4,\n  usWest: 5,\n  france: 6,\n  germany: 7,\n  europeUnion: 8,\n  unitedKingdom: 9,\n  japan: 10,\n  asia: 11,\n  india: 12,\n  southAmerica: 13,\n  euap: 14,\n  usGovernment: 15,\n  usGovernmentDOD: 16,\n  unknownFutureValue: 20,\n  norway: 17,\n  switzerland: 18,\n  southKorea: 19\n};\n/** cloudPcRestorePointFrequencyType types */\nexports.cloudPcRestorePointFrequencyType = {\n  "default": 0,\n  fourHours: 1,\n  sixHours: 2,\n  twelveHours: 3,\n  sixteenHours: 4,\n  twentyFourHours: 5,\n  unknownFutureValue: 6\n};\n/** microsoftManagedDesktopType types */\nexports.microsoftManagedDesktopType = {\n  notManaged: 0,\n  premiumManaged: 1,\n  standardManaged: 2,\n  starterManaged: 3,\n  unknownFutureValue: 4\n};\n/** bodyType types */\nexports.bodyType = {\n  text: 0,\n  html: 1\n};\n/** dataSubjectType types */\nexports.dataSubjectType = {\n  customer: 0,\n  currentEmployee: 1,\n  formerEmployee: 2,\n  prospectiveEmployee: 3,\n  student: 4,\n  teacher: 5,\n  faculty: 6,\n  other: 7,\n  unknownFutureValue: 8\n};\n/** subjectRightsRequestStage types */\nexports.subjectRightsRequestStage = {\n  contentRetrieval: 0,\n  contentReview: 1,\n  generateReport: 2,\n  contentDeletion: 3,\n  caseResolved: 4,\n  contentEstimate: 5,\n  unknownFutureValue: 6,\n  approval: 7\n};\n/** subjectRightsRequestStageStatus types */\nexports.subjectRightsRequestStageStatus = {\n  notStarted: 0,\n  current: 1,\n  completed: 3,\n  failed: 4,\n  unknownFutureValue: 5\n};\n/** subjectRightsRequestStatus types */\nexports.subjectRightsRequestStatus = {\n  active: 0,\n  closed: 1,\n  unknownFutureValue: 2\n};\n/** subjectRightsRequestType types */\nexports.subjectRightsRequestType = {\n  "export": 0,\n  "delete": 1,\n  access: 2,\n  tagForAction: 3,\n  unknownFutureValue: 4\n};\n/** authenticationAttributeCollectionInputType types */\nexports.authenticationAttributeCollectionInputType = {\n  text: 1,\n  radioSingleSelect: 2,\n  checkboxMultiSelect: 3,\n  "boolean": 4,\n  unknownFutureValue: 5\n};\n/** identityUserFlowAttributeDataType types */\nexports.identityUserFlowAttributeDataType = {\n  string: 1,\n  "boolean": 2,\n  int64: 3,\n  stringCollection: 4,\n  dateTime: 5,\n  unknownFutureValue: 6\n};\n/** identityUserFlowAttributeInputType types */\nexports.identityUserFlowAttributeInputType = {\n  textBox: 1,\n  dateTimeDropdown: 2,\n  radioSingleSelect: 3,\n  dropdownSingleSelect: 4,\n  emailBox: 5,\n  checkboxMultiSelect: 6\n};\n/** identityUserFlowAttributeType types */\nexports.identityUserFlowAttributeType = {\n  builtIn: 1,\n  custom: 2,\n  required: 3,\n  unknownFutureValue: 4\n};\n/** userFlowType types */\nexports.userFlowType = {\n  signUp: 1,\n  signIn: 2,\n  signUpOrSignIn: 3,\n  passwordReset: 4,\n  profileUpdate: 5,\n  resourceOwner: 6,\n  unknownFutureValue: 7\n};\n/** userType types */\nexports.userType = {\n  member: 0,\n  guest: 1,\n  unknownFutureValue: 2\n};\n/** lobbyBypassScope types */\nexports.lobbyBypassScope = {\n  organizer: 0,\n  organization: 1,\n  organizationAndFederated: 2,\n  everyone: 3,\n  unknownFutureValue: 4,\n  invited: 5,\n  organizationExcludingGuests: 6\n};\n/** meetingChatMode types */\nexports.meetingChatMode = {\n  enabled: 0,\n  disabled: 1,\n  limited: 2,\n  unknownFutureValue: 3\n};\n/** onlineMeetingPresenters types */\nexports.onlineMeetingPresenters = {\n  everyone: 0,\n  organization: 1,\n  roleIsPresenter: 2,\n  organizer: 3,\n  unknownFutureValue: 4\n};\n/** multiFactorAuthConfiguration types */\nexports.multiFactorAuthConfiguration = {\n  notRequired: 0,\n  required: 1,\n  unknownFutureValue: 2\n};\n/** allowInvitesFrom types */\nexports.allowInvitesFrom = {\n  none: 0,\n  adminsAndGuestInviters: 1,\n  adminsGuestInvitersAndAllMembers: 2,\n  everyone: 3,\n  unknownFutureValue: 4\n};\n/** appCredentialRestrictionType types */\nexports.appCredentialRestrictionType = {\n  passwordAddition: 0,\n  passwordLifetime: 1,\n  symmetricKeyAddition: 2,\n  symmetricKeyLifetime: 3,\n  customPasswordAddition: 4,\n  unknownFutureValue: 99\n};\n/** appKeyCredentialRestrictionType types */\nexports.appKeyCredentialRestrictionType = {\n  asymmetricKeyLifetime: 0,\n  unknownFutureValue: 99\n};\n/** appManagementRestrictionState types */\nexports.appManagementRestrictionState = {\n  enabled: 1,\n  disabled: 2,\n  unknownFutureValue: 3\n};\n/** authenticationProtocol types */\nexports.authenticationProtocol = {\n  wsFed: 0,\n  saml: 1,\n  unknownFutureValue: 2\n};\n/** b2bIdentityProvidersType types */\nexports.b2bIdentityProvidersType = {\n  azureActiveDirectory: 1,\n  externalFederation: 2,\n  socialIdentityProviders: 3,\n  emailOneTimePasscode: 4,\n  microsoftAccount: 5,\n  defaultConfiguredIdp: 6,\n  unknownFutureValue: 7\n};\n/** crossTenantAccessPolicyTargetConfigurationAccessType types */\nexports.crossTenantAccessPolicyTargetConfigurationAccessType = {\n  allowed: 1,\n  blocked: 2,\n  unknownFutureValue: 3\n};\n/** crossTenantAccessPolicyTargetType types */\nexports.crossTenantAccessPolicyTargetType = {\n  user: 1,\n  group: 2,\n  application: 3,\n  unknownFutureValue: 4\n};\n/** federatedIdpMfaBehavior types */\nexports.federatedIdpMfaBehavior = {\n  acceptIfMfaDoneByFederatedIdp: 0,\n  enforceMfaByFederatedIdp: 1,\n  rejectMfaByFederatedIdp: 2,\n  unknownFutureValue: 3\n};\n/** layoutTemplateType types */\nexports.layoutTemplateType = {\n  "default": 0,\n  verticalSplit: 1,\n  unknownFutureValue: 10\n};\n/** multiTenantOrganizationMemberProcessingStatus types */\nexports.multiTenantOrganizationMemberProcessingStatus = {\n  notStarted: 0,\n  running: 1,\n  succeeded: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** multiTenantOrganizationMemberRole types */\nexports.multiTenantOrganizationMemberRole = {\n  owner: 0,\n  member: 1,\n  unknownFutureValue: 2\n};\n/** multiTenantOrganizationMemberState types */\nexports.multiTenantOrganizationMemberState = {\n  pending: 0,\n  active: 1,\n  removed: 2,\n  unknownFutureValue: 3\n};\n/** multiTenantOrganizationState types */\nexports.multiTenantOrganizationState = {\n  active: 0,\n  inactive: 1,\n  unknownFutureValue: 2\n};\n/** nativeAuthenticationApisEnabled types */\nexports.nativeAuthenticationApisEnabled = {\n  none: 0,\n  all: 1,\n  unknownFutureValue: 2\n};\n/** onPremisesDirectorySynchronizationDeletionPreventionType types */\nexports.onPremisesDirectorySynchronizationDeletionPreventionType = {\n  disabled: 0,\n  enabledForCount: 1,\n  enabledForPercentage: 2,\n  unknownFutureValue: 3\n};\n/** partnerTenantType types */\nexports.partnerTenantType = {\n  microsoftSupport: 1,\n  syndicatePartner: 2,\n  breadthPartner: 3,\n  breadthPartnerDelegatedAdmin: 4,\n  resellerPartnerDelegatedAdmin: 5,\n  valueAddedResellerPartnerDelegatedAdmin: 6,\n  unknownFutureValue: 7\n};\n/** permissionClassificationType types */\nexports.permissionClassificationType = {\n  low: 1,\n  medium: 2,\n  high: 3,\n  unknownFutureValue: 4\n};\n/** permissionType types */\nexports.permissionType = {\n  application: 3,\n  delegated: 2,\n  delegatedUserConsentable: 1\n};\n/** promptLoginBehavior types */\nexports.promptLoginBehavior = {\n  translateToFreshPasswordAuthentication: 0,\n  nativeSupport: 1,\n  disabled: 2,\n  unknownFutureValue: 3\n};\n/** templateApplicationLevel types */\nexports.templateApplicationLevel = {\n  none: 0,\n  newPartners: 1,\n  existingPartners: 2,\n  unknownFutureValue: 4\n};\n/** weakAlgorithms types */\nexports.weakAlgorithms = {\n  rsaSha1: 1,\n  unknownFutureValue: 2\n};\n/** browserSharedCookieSourceEnvironment types */\nexports.browserSharedCookieSourceEnvironment = {\n  microsoftEdge: 0,\n  internetExplorer11: 1,\n  both: 2,\n  unknownFutureValue: 3\n};\n/** browserSharedCookieStatus types */\nexports.browserSharedCookieStatus = {\n  published: 0,\n  pendingAdd: 1,\n  pendingEdit: 2,\n  pendingDelete: 3,\n  unknownFutureValue: 4\n};\n/** browserSiteCompatibilityMode types */\nexports.browserSiteCompatibilityMode = {\n  "default": 0,\n  internetExplorer8Enterprise: 1,\n  internetExplorer7Enterprise: 2,\n  internetExplorer11: 3,\n  internetExplorer10: 4,\n  internetExplorer9: 5,\n  internetExplorer8: 6,\n  internetExplorer7: 7,\n  internetExplorer5: 8,\n  unknownFutureValue: 9\n};\n/** browserSiteListStatus types */\nexports.browserSiteListStatus = {\n  draft: 0,\n  published: 1,\n  pending: 2,\n  unknownFutureValue: 3\n};\n/** browserSiteMergeType types */\nexports.browserSiteMergeType = {\n  noMerge: 0,\n  "default": 1,\n  unknownFutureValue: 2\n};\n/** browserSiteStatus types */\nexports.browserSiteStatus = {\n  published: 0,\n  pendingAdd: 1,\n  pendingEdit: 2,\n  pendingDelete: 3,\n  unknownFutureValue: 4\n};\n/** browserSiteTargetEnvironment types */\nexports.browserSiteTargetEnvironment = {\n  internetExplorerMode: 0,\n  internetExplorer11: 1,\n  microsoftEdge: 2,\n  configurable: 3,\n  none: 4,\n  unknownFutureValue: 5\n};\n/** educationAddedStudentAction types */\nexports.educationAddedStudentAction = {\n  none: 0,\n  assignIfOpen: 1,\n  unknownFutureValue: 2\n};\n/** educationAddToCalendarOptions types */\nexports.educationAddToCalendarOptions = {\n  none: 0,\n  studentsAndPublisher: 1,\n  studentsAndTeamOwners: 2,\n  unknownFutureValue: 3,\n  studentsOnly: 4\n};\n/** educationAssignmentStatus types */\nexports.educationAssignmentStatus = {\n  draft: 0,\n  published: 1,\n  assigned: 2,\n  unknownFutureValue: 3,\n  inactive: 4\n};\n/** educationFeedbackResourceOutcomeStatus types */\nexports.educationFeedbackResourceOutcomeStatus = {\n  notPublished: 0,\n  pendingPublish: 1,\n  published: 2,\n  failedPublish: 3,\n  unknownFutureValue: 4\n};\n/** educationModuleStatus types */\nexports.educationModuleStatus = {\n  draft: 0,\n  published: 1,\n  unknownFutureValue: 2\n};\n/** educationSubmissionStatus types */\nexports.educationSubmissionStatus = {\n  working: 0,\n  submitted: 1,\n  released: 2,\n  returned: 3,\n  unknownFutureValue: 4,\n  reassigned: 5,\n  excused: 6\n};\n/** contactRelationship types */\nexports.contactRelationship = {\n  parent: 0,\n  relative: 1,\n  aide: 2,\n  doctor: 3,\n  guardian: 4,\n  child: 5,\n  other: 6,\n  unknownFutureValue: 7\n};\n/** educationExternalSource types */\nexports.educationExternalSource = {\n  sis: 0,\n  manual: 1,\n  unknownFutureValue: 2\n};\n/** educationGender types */\nexports.educationGender = {\n  female: 0,\n  male: 1,\n  other: 2,\n  unknownFutureValue: 3\n};\n/** educationUserRole types */\nexports.educationUserRole = {\n  student: 0,\n  teacher: 1,\n  none: 2,\n  unknownFutureValue: 3\n};\n/** artifactRestoreStatus types */\nexports.artifactRestoreStatus = {\n  added: 0,\n  scheduling: 1,\n  scheduled: 2,\n  inProgress: 3,\n  succeeded: 4,\n  failed: 5,\n  unknownFutureValue: 6\n};\n/** backupServiceConsumer types */\nexports.backupServiceConsumer = {\n  unknown: 0,\n  firstparty: 1,\n  thirdparty: 2,\n  unknownFutureValue: 3\n};\n/** backupServiceStatus types */\nexports.backupServiceStatus = {\n  disabled: 0,\n  enabled: 1,\n  protectionChangeLocked: 2,\n  restoreLocked: 3,\n  unknownFutureValue: 4\n};\n/** destinationType types */\nexports.destinationType = {\n  "new": 0,\n  inPlace: 1,\n  unknownFutureValue: 2\n};\n/** disableReason types */\nexports.disableReason = {\n  none: 0,\n  invalidBillingProfile: 1,\n  userRequested: 2,\n  unknownFutureValue: 3\n};\n/** protectionPolicyStatus types */\nexports.protectionPolicyStatus = {\n  inactive: 0,\n  activeWithErrors: 1,\n  updating: 2,\n  active: 3,\n  unknownFutureValue: 4\n};\n/** protectionRuleStatus types */\nexports.protectionRuleStatus = {\n  draft: 0,\n  active: 1,\n  completed: 2,\n  completedWithErrors: 3,\n  unknownFutureValue: 4\n};\n/** protectionUnitStatus types */\nexports.protectionUnitStatus = {\n  protectRequested: 0,\n  "protected": 1,\n  unprotectRequested: 2,\n  unprotected: 3,\n  removeRequested: 4,\n  unknownFutureValue: 5\n};\n/** restorableArtifact types */\nexports.restorableArtifact = {\n  message: 0,\n  unknownFutureValue: 1\n};\n/** restorePointPreference types */\nexports.restorePointPreference = {\n  latest: 0,\n  oldest: 1,\n  unknownFutureValue: 2\n};\n/** restorePointTags types */\nexports.restorePointTags = {\n  none: 0,\n  fastRestore: 1,\n  unknownFutureValue: 2\n};\n/** restoreSessionStatus types */\nexports.restoreSessionStatus = {\n  draft: 0,\n  activating: 1,\n  active: 2,\n  completedWithError: 3,\n  completed: 4,\n  unknownFutureValue: 5,\n  failed: 6\n};\n/** serviceAppStatus types */\nexports.serviceAppStatus = {\n  inactive: 0,\n  active: 1,\n  pendingActive: 2,\n  pendingInactive: 3,\n  unknownFutureValue: 4\n};\n/** workbookOperationStatus types */\nexports.workbookOperationStatus = {\n  notStarted: 0,\n  running: 1,\n  succeeded: 2,\n  failed: 3\n};\n/** activityDomain types */\nexports.activityDomain = {\n  unknown: 0,\n  work: 1,\n  personal: 2,\n  unrestricted: 3\n};\n/** attendeeType types */\nexports.attendeeType = {\n  required: 0,\n  optional: 1,\n  resource: 2\n};\n/** freeBusyStatus types */\nexports.freeBusyStatus = {\n  unknown: -1,\n  free: 0,\n  tentative: 1,\n  busy: 2,\n  oof: 3,\n  workingElsewhere: 4\n};\n/** bookingType types */\nexports.bookingType = {\n  unknown: 0,\n  standard: 1,\n  reserved: 2\n};\n/** attachmentType types */\nexports.attachmentType = {\n  file: 0,\n  item: 1,\n  reference: 2\n};\n/** automaticRepliesStatus types */\nexports.automaticRepliesStatus = {\n  disabled: 0,\n  alwaysEnabled: 1,\n  scheduled: 2\n};\n/** calendarColor types */\nexports.calendarColor = {\n  auto: -1,\n  lightBlue: 0,\n  lightGreen: 1,\n  lightOrange: 2,\n  lightGray: 3,\n  lightYellow: 4,\n  lightTeal: 5,\n  lightPink: 6,\n  lightBrown: 7,\n  lightRed: 8,\n  maxColor: 9\n};\n/** calendarRoleType types */\nexports.calendarRoleType = {\n  none: 0,\n  freeBusyRead: 1,\n  limitedRead: 2,\n  read: 3,\n  write: 4,\n  delegateWithoutPrivateEventAccess: 5,\n  delegateWithPrivateEventAccess: 6,\n  custom: 7\n};\n/** calendarSharingAction types */\nexports.calendarSharingAction = {\n  accept: 0,\n  acceptAndViewCalendar: 1,\n  viewCalendar: 2,\n  addThisCalendar: 3\n};\n/** calendarSharingActionImportance types */\nexports.calendarSharingActionImportance = {\n  primary: 0,\n  secondary: 1\n};\n/** calendarSharingActionType types */\nexports.calendarSharingActionType = {\n  accept: 0\n};\n/** categoryColor types */\nexports.categoryColor = {\n  none: -1,\n  preset0: 0,\n  preset1: 1,\n  preset2: 2,\n  preset3: 3,\n  preset4: 4,\n  preset5: 5,\n  preset6: 6,\n  preset7: 7,\n  preset8: 8,\n  preset9: 9,\n  preset10: 10,\n  preset11: 11,\n  preset12: 12,\n  preset13: 13,\n  preset14: 14,\n  preset15: 15,\n  preset16: 16,\n  preset17: 17,\n  preset18: 18,\n  preset19: 19,\n  preset20: 20,\n  preset21: 21,\n  preset22: 22,\n  preset23: 23,\n  preset24: 24\n};\n/** delegateMeetingMessageDeliveryOptions types */\nexports.delegateMeetingMessageDeliveryOptions = {\n  sendToDelegateAndInformationToPrincipal: 0,\n  sendToDelegateAndPrincipal: 1,\n  sendToDelegateOnly: 2\n};\n/** eventType types */\nexports.eventType = {\n  singleInstance: 0,\n  occurrence: 1,\n  exception: 2,\n  seriesMaster: 3\n};\n/** exchangeIdFormat types */\nexports.exchangeIdFormat = {\n  entryId: 0,\n  ewsId: 1,\n  immutableEntryId: 2,\n  restId: 3,\n  restImmutableEntryId: 4\n};\n/** externalAudienceScope types */\nexports.externalAudienceScope = {\n  none: 0,\n  contactsOnly: 1,\n  all: 2\n};\n/** followupFlagStatus types */\nexports.followupFlagStatus = {\n  notFlagged: 0,\n  complete: 1,\n  flagged: 2\n};\n/** importance types */\nexports.importance = {\n  low: 0,\n  normal: 1,\n  high: 2\n};\n/** inferenceClassificationType types */\nexports.inferenceClassificationType = {\n  focused: 0,\n  other: 1\n};\n/** mailTipsType types */\nexports.mailTipsType = {\n  automaticReplies: 1,\n  mailboxFullStatus: 2,\n  customMailTip: 4,\n  externalMemberCount: 8,\n  totalMemberCount: 16,\n  maxMessageSize: 32,\n  deliveryRestriction: 64,\n  moderationStatus: 128,\n  recipientScope: 256,\n  recipientSuggestions: 512\n};\n/** meetingMessageType types */\nexports.meetingMessageType = {\n  none: 0,\n  meetingRequest: 1,\n  meetingCancelled: 2,\n  meetingAccepted: 3,\n  meetingTenativelyAccepted: 4,\n  meetingDeclined: 5\n};\n/** meetingRequestType types */\nexports.meetingRequestType = {\n  none: 0,\n  newMeetingRequest: 1,\n  fullUpdate: 65536,\n  informationalUpdate: 131072,\n  silentUpdate: 262144,\n  outdated: 524288,\n  principalWantsCopy: 1048576\n};\n/** messageActionFlag types */\nexports.messageActionFlag = {\n  any: 0,\n  call: 1,\n  doNotForward: 2,\n  followUp: 3,\n  fyi: 4,\n  forward: 5,\n  noResponseNecessary: 6,\n  read: 7,\n  reply: 8,\n  replyToAll: 9,\n  review: 10\n};\n/** onlineMeetingProviderType types */\nexports.onlineMeetingProviderType = {\n  unknown: 0,\n  skypeForBusiness: 1,\n  skypeForConsumer: 2,\n  teamsForBusiness: 3\n};\n/** recipientScopeType types */\nexports.recipientScopeType = {\n  none: 0,\n  internal: 1,\n  external: 2,\n  externalPartner: 4,\n  externalNonPartner: 8\n};\n/** recurrencePatternType types */\nexports.recurrencePatternType = {\n  daily: 0,\n  weekly: 1,\n  absoluteMonthly: 2,\n  relativeMonthly: 3,\n  absoluteYearly: 4,\n  relativeYearly: 5\n};\n/** recurrenceRangeType types */\nexports.recurrenceRangeType = {\n  endDate: 0,\n  noEnd: 1,\n  numbered: 2\n};\n/** responseType types */\nexports.responseType = {\n  none: 0,\n  organizer: 1,\n  tentativelyAccepted: 2,\n  accepted: 3,\n  declined: 4,\n  notResponded: 5\n};\n/** selectionLikelihoodInfo types */\nexports.selectionLikelihoodInfo = {\n  notSpecified: 0,\n  high: 1\n};\n/** sensitivity types */\nexports.sensitivity = {\n  normal: 0,\n  personal: 1,\n  "private": 2,\n  confidential: 3\n};\n/** timeZoneStandard types */\nexports.timeZoneStandard = {\n  windows: 0,\n  iana: 1\n};\n/** userPurpose types */\nexports.userPurpose = {\n  user: 1,\n  linked: 2,\n  shared: 3,\n  room: 4,\n  equipment: 5,\n  others: 6,\n  unknownFutureValue: 7\n};\n/** websiteType types */\nexports.websiteType = {\n  other: 0,\n  home: 1,\n  work: 2,\n  blog: 3,\n  profile: 4\n};\n/** weekIndex types */\nexports.weekIndex = {\n  first: 0,\n  second: 1,\n  third: 2,\n  fourth: 3,\n  last: 4\n};\n/** fileStorageContainerStatus types */\nexports.fileStorageContainerStatus = {\n  inactive: 0,\n  active: 1,\n  unknownFutureValue: 2\n};\n/** imageTaggingChoice types */\nexports.imageTaggingChoice = {\n  disabled: 0,\n  basic: 1,\n  enhanced: 2,\n  unknownFutureValue: 3\n};\n/** sharingCapabilities types */\nexports.sharingCapabilities = {\n  disabled: 0,\n  externalUserSharingOnly: 1,\n  externalUserAndGuestSharing: 2,\n  existingExternalUserSharingOnly: 3,\n  unknownFutureValue: 4\n};\n/** sharingDomainRestrictionMode types */\nexports.sharingDomainRestrictionMode = {\n  none: 0,\n  allowList: 1,\n  blockList: 2,\n  unknownFutureValue: 3\n};\n/** columnTypes types */\nexports.columnTypes = {\n  note: 0,\n  text: 1,\n  choice: 2,\n  multichoice: 3,\n  number: 4,\n  currency: 5,\n  dateTime: 6,\n  lookup: 7,\n  "boolean": 8,\n  user: 9,\n  url: 10,\n  calculated: 11,\n  location: 12,\n  geolocation: 13,\n  term: 14,\n  multiterm: 15,\n  thumbnail: 16,\n  approvalStatus: 17,\n  unknownFutureValue: 18\n};\n/** driveItemSourceApplication types */\nexports.driveItemSourceApplication = {\n  teams: 0,\n  yammer: 1,\n  sharePoint: 2,\n  oneDrive: 3,\n  stream: 4,\n  powerPoint: 5,\n  office: 6,\n  loki: 7,\n  loop: 8,\n  other: 9,\n  unknownFutureValue: 10\n};\n/** horizontalSectionLayoutType types */\nexports.horizontalSectionLayoutType = {\n  none: 0,\n  oneColumn: 1,\n  twoColumns: 2,\n  threeColumns: 3,\n  oneThirdLeftColumn: 4,\n  oneThirdRightColumn: 5,\n  fullWidth: 6,\n  unknownFutureValue: 7\n};\n/** longRunningOperationStatus types */\nexports.longRunningOperationStatus = {\n  notStarted: 0,\n  running: 1,\n  succeeded: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** mediaSourceContentCategory types */\nexports.mediaSourceContentCategory = {\n  meeting: 0,\n  liveStream: 1,\n  presentation: 2,\n  screenRecording: 3,\n  story: 4,\n  profile: 5,\n  chat: 6,\n  note: 7,\n  comment: 8,\n  unknownFutureValue: 9\n};\n/** pageLayoutType types */\nexports.pageLayoutType = {\n  microsoftReserved: 0,\n  article: 1,\n  home: 2,\n  unknownFutureValue: 3\n};\n/** pagePromotionType types */\nexports.pagePromotionType = {\n  microsoftReserved: 0,\n  page: 1,\n  newsPost: 2,\n  unknownFutureValue: 3\n};\n/** sectionEmphasisType types */\nexports.sectionEmphasisType = {\n  none: 0,\n  neutral: 1,\n  soft: 2,\n  strong: 3,\n  unknownFutureValue: 4\n};\n/** sensitivityLabelAssignmentMethod types */\nexports.sensitivityLabelAssignmentMethod = {\n  standard: 0,\n  privileged: 1,\n  auto: 2,\n  unknownFutureValue: 3\n};\n/** siteArchiveStatus types */\nexports.siteArchiveStatus = {\n  recentlyArchived: 0,\n  fullyArchived: 1,\n  reactivating: 2,\n  unknownFutureValue: 3\n};\n/** titleAreaLayoutType types */\nexports.titleAreaLayoutType = {\n  imageAndTitle: 0,\n  plain: 1,\n  colorBlock: 2,\n  overlap: 3,\n  unknownFutureValue: 4\n};\n/** titleAreaTextAlignmentType types */\nexports.titleAreaTextAlignmentType = {\n  left: 0,\n  center: 1,\n  unknownFutureValue: 2\n};\n/** remindBeforeTimeInMinutesType types */\nexports.remindBeforeTimeInMinutesType = {\n  mins15: 0,\n  unknownFutureValue: 100\n};\n/** virtualAppointmentMessageType types */\nexports.virtualAppointmentMessageType = {\n  confirmation: 0,\n  reschedule: 1,\n  cancellation: 2,\n  unknownFutureValue: 10\n};\n/** stagedFeatureName types */\nexports.stagedFeatureName = {\n  passthroughAuthentication: 0,\n  seamlessSso: 1,\n  passwordHashSync: 2,\n  emailAsAlternateId: 3,\n  unknownFutureValue: 4,\n  certificateBasedAuthentication: 5,\n  multiFactorAuthentication: 6\n};\n/** attributeDefinitionMetadata types */\nexports.attributeDefinitionMetadata = {\n  BaseAttributeName: 0,\n  ComplexObjectDefinition: 1,\n  IsContainer: 2,\n  IsCustomerDefined: 3,\n  IsDomainQualified: 4,\n  LinkPropertyNames: 5,\n  LinkTypeName: 6,\n  MaximumLength: 7,\n  ReferencedProperty: 8\n};\n/** attributeFlowBehavior types */\nexports.attributeFlowBehavior = {\n  FlowWhenChanged: 0,\n  FlowAlways: 1\n};\n/** attributeFlowType types */\nexports.attributeFlowType = {\n  Always: 0,\n  ObjectAddOnly: 1,\n  MultiValueAddOnly: 2,\n  ValueAddOnly: 3,\n  AttributeAddOnly: 4\n};\n/** attributeMappingSourceType types */\nexports.attributeMappingSourceType = {\n  Attribute: 0,\n  Constant: 1,\n  Function: 2\n};\n/** attributeType types */\nexports.attributeType = {\n  String: 0,\n  Integer: 1,\n  Reference: 2,\n  Binary: 3,\n  Boolean: 4,\n  DateTime: 5\n};\n/** directoryDefinitionDiscoverabilities types */\nexports.directoryDefinitionDiscoverabilities = {\n  None: 0,\n  AttributeNames: 1,\n  AttributeDataTypes: 2,\n  AttributeReadOnly: 4,\n  ReferenceAttributes: 8,\n  UnknownFutureValue: 16\n};\n/** entryExportStatus types */\nexports.entryExportStatus = {\n  Noop: 0,\n  Success: 1,\n  RetryableError: 2,\n  PermanentError: 3,\n  Error: 4\n};\n/** entrySyncOperation types */\nexports.entrySyncOperation = {\n  None: 0,\n  Add: 1,\n  Delete: 2,\n  Update: 3\n};\n/** escrowBehavior types */\nexports.escrowBehavior = {\n  Default: 1,\n  IgnoreLookupReferenceResolutionFailure: 2\n};\n/** mutability types */\nexports.mutability = {\n  ReadWrite: 0,\n  ReadOnly: 1,\n  Immutable: 2,\n  WriteOnly: 3\n};\n/** objectDefinitionMetadata types */\nexports.objectDefinitionMetadata = {\n  PropertyNameAccountEnabled: 0,\n  PropertyNameSoftDeleted: 1,\n  IsSoftDeletionSupported: 2,\n  IsSynchronizeAllSupported: 3,\n  ConnectorDataStorageRequired: 4,\n  Extensions: 5,\n  BaseObjectName: 6\n};\n/** objectFlowTypes types */\nexports.objectFlowTypes = {\n  None: 0,\n  Add: 1,\n  Update: 2,\n  Delete: 4\n};\n/** objectMappingMetadata types */\nexports.objectMappingMetadata = {\n  EscrowBehavior: 0,\n  DisableMonitoringForChanges: 1,\n  OriginalJoiningProperty: 2,\n  Disposition: 3,\n  IsCustomerDefined: 4,\n  ExcludeFromReporting: 5,\n  Unsynchronized: 6\n};\n/** quarantineReason types */\nexports.quarantineReason = {\n  EncounteredBaseEscrowThreshold: 0,\n  EncounteredTotalEscrowThreshold: 1,\n  EncounteredEscrowProportionThreshold: 2,\n  EncounteredQuarantineException: 4,\n  Unknown: 8,\n  QuarantinedOnDemand: 16,\n  TooManyDeletes: 32,\n  IngestionInterrupted: 64\n};\n/** scopeOperatorMultiValuedComparisonType types */\nexports.scopeOperatorMultiValuedComparisonType = {\n  All: 0,\n  Any: 1\n};\n/** scopeOperatorType types */\nexports.scopeOperatorType = {\n  Binary: 0,\n  Unary: 1\n};\n/** synchronizationDisposition types */\nexports.synchronizationDisposition = {\n  Normal: 0,\n  Discard: 1,\n  Escrow: 2\n};\n/** synchronizationJobRestartScope types */\nexports.synchronizationJobRestartScope = {\n  None: 0,\n  ConnectorDataStore: 1,\n  Escrows: 2,\n  Watermark: 4,\n  QuarantineState: 8,\n  Full: 15,\n  ForceDeletes: 32\n};\n/** synchronizationMetadata types */\nexports.synchronizationMetadata = {\n  GalleryApplicationIdentifier: 0,\n  GalleryApplicationKey: 1,\n  IsOAuthEnabled: 2,\n  IsSynchronizationAgentAssignmentRequired: 3,\n  IsSynchronizationAgentRequired: 4,\n  IsSynchronizationInPreview: 5,\n  OAuthSettings: 6,\n  SynchronizationLearnMoreIbizaFwLink: 7,\n  ConfigurationFields: 8\n};\n/** synchronizationScheduleState types */\nexports.synchronizationScheduleState = {\n  Active: 0,\n  Disabled: 1,\n  Paused: 2\n};\n/** synchronizationSecret types */\nexports.synchronizationSecret = {\n  None: 0,\n  UserName: 1,\n  Password: 2,\n  SecretToken: 3,\n  AppKey: 4,\n  BaseAddress: 5,\n  ClientIdentifier: 6,\n  ClientSecret: 7,\n  SingleSignOnType: 11,\n  Sandbox: 12,\n  Url: 13,\n  Domain: 14,\n  ConsumerKey: 15,\n  ConsumerSecret: 16,\n  TokenKey: 17,\n  TokenExpiration: 18,\n  Oauth2AccessToken: 19,\n  Oauth2AccessTokenCreationTime: 20,\n  Oauth2RefreshToken: 21,\n  SyncAll: 22,\n  InstanceName: 24,\n  Oauth2ClientId: 27,\n  Oauth2ClientSecret: 28,\n  CompanyId: 29,\n  UpdateKeyOnSoftDelete: 30,\n  SynchronizationSchedule: 33,\n  SystemOfRecord: 34,\n  SandboxName: 35,\n  EnforceDomain: 36,\n  SyncNotificationSettings: 37,\n  SkipOutOfScopeDeletions: 40,\n  Oauth2AuthorizationCode: 62,\n  Oauth2RedirectUri: 63,\n  ApplicationTemplateIdentifier: 64,\n  Oauth2TokenExchangeUri: 65,\n  Oauth2AuthorizationUri: 66,\n  AuthenticationType: 67,\n  Server: 70,\n  PerformInboundEntitlementGrants: 100,\n  HardDeletesEnabled: 101,\n  SyncAgentCompatibilityKey: 102,\n  SyncAgentADContainer: 103,\n  ValidateDomain: 206,\n  TestReferences: 207,\n  ConnectionString: 250\n};\n/** synchronizationStatusCode types */\nexports.synchronizationStatusCode = {\n  NotConfigured: 0,\n  NotRun: 1,\n  Active: 2,\n  Paused: 3,\n  Quarantine: 4\n};\n/** synchronizationTaskExecutionResult types */\nexports.synchronizationTaskExecutionResult = {\n  Succeeded: 0,\n  Failed: 1,\n  EntryLevelErrors: 2\n};\n/** endpointType types */\nexports.endpointType = {\n  "default": 0,\n  voicemail: 1,\n  skypeForBusiness: 2,\n  skypeForBusinessVoipPhone: 3,\n  unknownFutureValue: 4\n};\n/** accessReviewHistoryDecisionFilter types */\nexports.accessReviewHistoryDecisionFilter = {\n  approve: 0,\n  deny: 1,\n  notReviewed: 2,\n  dontKnow: 3,\n  notNotified: 4,\n  unknownFutureValue: 5\n};\n/** accessReviewHistoryStatus types */\nexports.accessReviewHistoryStatus = {\n  done: 0,\n  inprogress: 1,\n  error: 2,\n  requested: 3,\n  unknownFutureValue: 4\n};\n/** accessReviewInstanceDecisionItemFilterByCurrentUserOptions types */\nexports.accessReviewInstanceDecisionItemFilterByCurrentUserOptions = {\n  reviewer: 1,\n  unknownFutureValue: 2\n};\n/** accessReviewInstanceFilterByCurrentUserOptions types */\nexports.accessReviewInstanceFilterByCurrentUserOptions = {\n  reviewer: 1,\n  unknownFutureValue: 2\n};\n/** accessReviewScheduleDefinitionFilterByCurrentUserOptions types */\nexports.accessReviewScheduleDefinitionFilterByCurrentUserOptions = {\n  reviewer: 1,\n  unknownFutureValue: 2\n};\n/** accessReviewStageFilterByCurrentUserOptions types */\nexports.accessReviewStageFilterByCurrentUserOptions = {\n  reviewer: 1,\n  unknownFutureValue: 2\n};\n/** approvalFilterByCurrentUserOptions types */\nexports.approvalFilterByCurrentUserOptions = {\n  target: 0,\n  createdBy: 1,\n  approver: 2,\n  unknownFutureValue: 3\n};\n/** consentRequestFilterByCurrentUserOptions types */\nexports.consentRequestFilterByCurrentUserOptions = {\n  reviewer: 0,\n  unknownFutureValue: 1\n};\n/** userSignInRecommendationScope types */\nexports.userSignInRecommendationScope = {\n  tenant: 0,\n  application: 1,\n  unknownFutureValue: 2\n};\n/** agreementAcceptanceState types */\nexports.agreementAcceptanceState = {\n  accepted: 2,\n  declined: 3,\n  unknownFutureValue: 5\n};\n/** activityType types */\nexports.activityType = {\n  signin: 0,\n  user: 1,\n  unknownFutureValue: 2,\n  servicePrincipal: 3\n};\n/** cloudAppSecuritySessionControlType types */\nexports.cloudAppSecuritySessionControlType = {\n  mcasConfigured: 0,\n  monitorOnly: 1,\n  blockDownloads: 2,\n  unknownFutureValue: 3\n};\n/** conditionalAccessClientApp types */\nexports.conditionalAccessClientApp = {\n  all: 0,\n  browser: 1,\n  mobileAppsAndDesktopClients: 2,\n  exchangeActiveSync: 3,\n  easSupported: 4,\n  other: 5,\n  unknownFutureValue: 6\n};\n/** conditionalAccessDevicePlatform types */\nexports.conditionalAccessDevicePlatform = {\n  android: 0,\n  iOS: 1,\n  windows: 2,\n  windowsPhone: 3,\n  macOS: 4,\n  all: 5,\n  unknownFutureValue: 6,\n  linux: 7\n};\n/** conditionalAccessExternalTenantsMembershipKind types */\nexports.conditionalAccessExternalTenantsMembershipKind = {\n  all: 0,\n  enumerated: 1,\n  unknownFutureValue: 2\n};\n/** conditionalAccessGrantControl types */\nexports.conditionalAccessGrantControl = {\n  block: 0,\n  mfa: 1,\n  compliantDevice: 2,\n  domainJoinedDevice: 3,\n  approvedApplication: 4,\n  compliantApplication: 5,\n  passwordChange: 6,\n  unknownFutureValue: 7\n};\n/** conditionalAccessGuestOrExternalUserTypes types */\nexports.conditionalAccessGuestOrExternalUserTypes = {\n  none: 0,\n  internalGuest: 1,\n  b2bCollaborationGuest: 2,\n  b2bCollaborationMember: 4,\n  b2bDirectConnectUser: 8,\n  otherExternalUser: 16,\n  serviceProvider: 32,\n  unknownFutureValue: 64\n};\n/** conditionalAccessInsiderRiskLevels types */\nexports.conditionalAccessInsiderRiskLevels = {\n  minor: 1,\n  moderate: 2,\n  elevated: 4,\n  unknownFutureValue: 8\n};\n/** conditionalAccessPolicyState types */\nexports.conditionalAccessPolicyState = {\n  enabled: 0,\n  disabled: 1,\n  enabledForReportingButNotEnforced: 2\n};\n/** conditionalAccessTransferMethods types */\nexports.conditionalAccessTransferMethods = {\n  none: 0,\n  deviceCodeFlow: 1,\n  authenticationTransfer: 2,\n  unknownFutureValue: 4\n};\n/** countryLookupMethodType types */\nexports.countryLookupMethodType = {\n  clientIpAddress: 0,\n  authenticatorAppGps: 1,\n  unknownFutureValue: 2\n};\n/** filterMode types */\nexports.filterMode = {\n  include: 0,\n  exclude: 1\n};\n/** persistentBrowserSessionMode types */\nexports.persistentBrowserSessionMode = {\n  always: 0,\n  never: 1\n};\n/** riskDetectionTimingType types */\nexports.riskDetectionTimingType = {\n  notDefined: 0,\n  realtime: 1,\n  nearRealtime: 2,\n  offline: 3,\n  unknownFutureValue: 4\n};\n/** signInFrequencyAuthenticationType types */\nexports.signInFrequencyAuthenticationType = {\n  primaryAndSecondaryAuthentication: 0,\n  secondaryAuthentication: 1,\n  unknownFutureValue: 2\n};\n/** signInFrequencyInterval types */\nexports.signInFrequencyInterval = {\n  timeBased: 0,\n  everyTime: 1,\n  unknownFutureValue: 2\n};\n/** signinFrequencyType types */\nexports.signinFrequencyType = {\n  days: 0,\n  hours: 1\n};\n/** templateScenarios types */\nexports.templateScenarios = {\n  "new": 0,\n  secureFoundation: 1,\n  zeroTrust: 2,\n  remoteWork: 4,\n  protectAdmins: 8,\n  emergingThreats: 16,\n  unknownFutureValue: 32\n};\n/** tokenIssuerType types */\nexports.tokenIssuerType = {\n  AzureAD: 0,\n  ADFederationServices: 1,\n  UnknownFutureValue: 2,\n  AzureADBackupAuth: 3,\n  ADFederationServicesMFAAdapter: 4,\n  NPSExtension: 5\n};\n/** accessPackageAssignmentFilterByCurrentUserOptions types */\nexports.accessPackageAssignmentFilterByCurrentUserOptions = {\n  target: 1,\n  createdBy: 2,\n  unknownFutureValue: 99\n};\n/** accessPackageAssignmentRequestFilterByCurrentUserOptions types */\nexports.accessPackageAssignmentRequestFilterByCurrentUserOptions = {\n  target: 1,\n  createdBy: 2,\n  approver: 3,\n  unknownFutureValue: 99\n};\n/** accessPackageAssignmentState types */\nexports.accessPackageAssignmentState = {\n  delivering: 0,\n  partiallyDelivered: 1,\n  delivered: 2,\n  expired: 3,\n  deliveryFailed: 4,\n  unknownFutureValue: 5\n};\n/** accessPackageCatalogState types */\nexports.accessPackageCatalogState = {\n  unpublished: 1,\n  published: 2,\n  unknownFutureValue: 3\n};\n/** accessPackageCatalogType types */\nexports.accessPackageCatalogType = {\n  userManaged: 1,\n  serviceDefault: 2,\n  serviceManaged: 3,\n  unknownFutureValue: 4\n};\n/** accessPackageCustomExtensionStage types */\nexports.accessPackageCustomExtensionStage = {\n  assignmentRequestCreated: 1,\n  assignmentRequestApproved: 2,\n  assignmentRequestGranted: 3,\n  assignmentRequestRemoved: 4,\n  assignmentFourteenDaysBeforeExpiration: 5,\n  assignmentOneDayBeforeExpiration: 6,\n  unknownFutureValue: 7\n};\n/** accessPackageExternalUserLifecycleAction types */\nexports.accessPackageExternalUserLifecycleAction = {\n  none: 0,\n  blockSignIn: 1,\n  blockSignInAndDelete: 2,\n  unknownFutureValue: 3\n};\n/** accessPackageFilterByCurrentUserOptions types */\nexports.accessPackageFilterByCurrentUserOptions = {\n  allowedRequestor: 1,\n  unknownFutureValue: 99\n};\n/** accessPackageRequestState types */\nexports.accessPackageRequestState = {\n  submitted: 0,\n  pendingApproval: 1,\n  delivering: 2,\n  delivered: 3,\n  deliveryFailed: 4,\n  denied: 5,\n  scheduled: 6,\n  canceled: 7,\n  partiallyDelivered: 8,\n  unknownFutureValue: 9\n};\n/** accessPackageRequestType types */\nexports.accessPackageRequestType = {\n  notSpecified: 0,\n  userAdd: 1,\n  userUpdate: 2,\n  userRemove: 3,\n  adminAdd: 4,\n  adminUpdate: 5,\n  adminRemove: 6,\n  systemAdd: 7,\n  systemUpdate: 8,\n  systemRemove: 9,\n  onBehalfAdd: 10,\n  unknownFutureValue: 11\n};\n/** accessPackageSubjectType types */\nexports.accessPackageSubjectType = {\n  notSpecified: 0,\n  user: 1,\n  servicePrincipal: 2,\n  unknownFutureValue: 3\n};\n/** accessReviewExpirationBehavior types */\nexports.accessReviewExpirationBehavior = {\n  keepAccess: 0,\n  removeAccess: 1,\n  acceptAccessRecommendation: 2,\n  unknownFutureValue: 99\n};\n/** allowedTargetScope types */\nexports.allowedTargetScope = {\n  notSpecified: 0,\n  specificDirectoryUsers: 1,\n  specificConnectedOrganizationUsers: 2,\n  specificDirectoryServicePrincipals: 3,\n  allMemberUsers: 4,\n  allDirectoryUsers: 5,\n  allDirectoryServicePrincipals: 6,\n  allConfiguredConnectedOrganizationUsers: 7,\n  allExternalUsers: 8,\n  unknownFutureValue: 10\n};\n/** customExtensionCalloutInstanceStatus types */\nexports.customExtensionCalloutInstanceStatus = {\n  calloutSent: 1,\n  callbackReceived: 2,\n  calloutFailed: 3,\n  callbackTimedOut: 4,\n  waitingForCallback: 5,\n  unknownFutureValue: 6\n};\n/** expirationPatternType types */\nexports.expirationPatternType = {\n  notSpecified: 0,\n  noExpiration: 1,\n  afterDateTime: 2,\n  afterDuration: 3\n};\n/** connectedOrganizationState types */\nexports.connectedOrganizationState = {\n  configured: 0,\n  proposed: 1,\n  unknownFutureValue: 2\n};\n/** socialIdentitySourceType types */\nexports.socialIdentitySourceType = {\n  facebook: 1,\n  unknownFutureValue: 2\n};\n/** certificateStatus types */\nexports.certificateStatus = {\n  notProvisioned: 0,\n  provisioned: 1\n};\n/** complianceStatus types */\nexports.complianceStatus = {\n  unknown: 0,\n  notApplicable: 1,\n  compliant: 2,\n  remediated: 3,\n  nonCompliant: 4,\n  error: 5,\n  conflict: 6,\n  notAssigned: 7\n};\n/** installIntent types */\nexports.installIntent = {\n  available: 0,\n  required: 1,\n  uninstall: 2,\n  availableWithoutEnrollment: 3\n};\n/** managedAppAvailability types */\nexports.managedAppAvailability = {\n  global: 0,\n  lineOfBusiness: 1\n};\n/** mdmAppConfigKeyType types */\nexports.mdmAppConfigKeyType = {\n  stringType: 0,\n  integerType: 1,\n  realType: 2,\n  booleanType: 3,\n  tokenType: 4\n};\n/** microsoftEdgeChannel types */\nexports.microsoftEdgeChannel = {\n  dev: 0,\n  beta: 1,\n  stable: 2,\n  unknownFutureValue: 3\n};\n/** microsoftStoreForBusinessLicenseType types */\nexports.microsoftStoreForBusinessLicenseType = {\n  offline: 0,\n  online: 1\n};\n/** mobileAppContentFileUploadState types */\nexports.mobileAppContentFileUploadState = {\n  success: 0,\n  transientError: 1,\n  error: 2,\n  unknown: 3,\n  azureStorageUriRequestSuccess: 100,\n  azureStorageUriRequestPending: 101,\n  azureStorageUriRequestFailed: 102,\n  azureStorageUriRequestTimedOut: 103,\n  azureStorageUriRenewalSuccess: 200,\n  azureStorageUriRenewalPending: 201,\n  azureStorageUriRenewalFailed: 202,\n  azureStorageUriRenewalTimedOut: 203,\n  commitFileSuccess: 300,\n  commitFilePending: 301,\n  commitFileFailed: 302,\n  commitFileTimedOut: 303\n};\n/** mobileAppPublishingState types */\nexports.mobileAppPublishingState = {\n  notPublished: 0,\n  processing: 1,\n  published: 2\n};\n/** runAsAccountType types */\nexports.runAsAccountType = {\n  system: 0,\n  user: 1\n};\n/** vppTokenAccountType types */\nexports.vppTokenAccountType = {\n  business: 0,\n  education: 1\n};\n/** win32LobAppDeliveryOptimizationPriority types */\nexports.win32LobAppDeliveryOptimizationPriority = {\n  notConfigured: 0,\n  foreground: 1\n};\n/** win32LobAppFileSystemOperationType types */\nexports.win32LobAppFileSystemOperationType = {\n  notConfigured: 0,\n  exists: 1,\n  modifiedDate: 2,\n  createdDate: 3,\n  version: 4,\n  sizeInMB: 5\n};\n/** win32LobAppMsiPackageType types */\nexports.win32LobAppMsiPackageType = {\n  perMachine: 0,\n  perUser: 1,\n  dualPurpose: 2\n};\n/** win32LobAppNotification types */\nexports.win32LobAppNotification = {\n  showAll: 0,\n  showReboot: 1,\n  hideAll: 2\n};\n/** win32LobAppPowerShellScriptRuleOperationType types */\nexports.win32LobAppPowerShellScriptRuleOperationType = {\n  notConfigured: 0,\n  string: 1,\n  dateTime: 2,\n  integer: 3,\n  "float": 4,\n  version: 5,\n  "boolean": 6\n};\n/** win32LobAppRegistryRuleOperationType types */\nexports.win32LobAppRegistryRuleOperationType = {\n  notConfigured: 0,\n  exists: 1,\n  doesNotExist: 2,\n  string: 3,\n  integer: 4,\n  version: 5\n};\n/** win32LobAppRestartBehavior types */\nexports.win32LobAppRestartBehavior = {\n  basedOnReturnCode: 0,\n  allow: 1,\n  suppress: 2,\n  force: 3\n};\n/** win32LobAppReturnCodeType types */\nexports.win32LobAppReturnCodeType = {\n  failed: 0,\n  success: 1,\n  softReboot: 2,\n  hardReboot: 3,\n  retry: 4\n};\n/** win32LobAppRuleOperator types */\nexports.win32LobAppRuleOperator = {\n  notConfigured: 0,\n  equal: 1,\n  notEqual: 2,\n  greaterThan: 4,\n  greaterThanOrEqual: 5,\n  lessThan: 8,\n  lessThanOrEqual: 9\n};\n/** win32LobAppRuleType types */\nexports.win32LobAppRuleType = {\n  detection: 0,\n  requirement: 1\n};\n/** win32LobAutoUpdateSupersededAppsState types */\nexports.win32LobAutoUpdateSupersededAppsState = {\n  notConfigured: 0,\n  enabled: 1,\n  unknownFutureValue: 2\n};\n/** windowsArchitecture types */\nexports.windowsArchitecture = {\n  none: 0,\n  x86: 1,\n  x64: 2,\n  arm: 4,\n  neutral: 8\n};\n/** windowsDeviceType types */\nexports.windowsDeviceType = {\n  none: 0,\n  desktop: 1,\n  mobile: 2,\n  holographic: 4,\n  team: 8,\n  unknownFutureValue: 16\n};\n/** installState types */\nexports.installState = {\n  notApplicable: 0,\n  installed: 1,\n  failed: 2,\n  notInstalled: 3,\n  uninstallFailed: 4,\n  unknown: 5\n};\n/** androidRequiredPasswordType types */\nexports.androidRequiredPasswordType = {\n  deviceDefault: 0,\n  alphabetic: 1,\n  alphanumeric: 2,\n  alphanumericWithSymbols: 3,\n  lowSecurityBiometric: 4,\n  numeric: 5,\n  numericComplex: 6,\n  any: 7\n};\n/** androidWorkProfileCrossProfileDataSharingType types */\nexports.androidWorkProfileCrossProfileDataSharingType = {\n  deviceDefault: 0,\n  preventAny: 1,\n  allowPersonalToWork: 2,\n  noRestrictions: 3\n};\n/** androidWorkProfileDefaultAppPermissionPolicyType types */\nexports.androidWorkProfileDefaultAppPermissionPolicyType = {\n  deviceDefault: 0,\n  prompt: 1,\n  autoGrant: 2,\n  autoDeny: 3\n};\n/** androidWorkProfileRequiredPasswordType types */\nexports.androidWorkProfileRequiredPasswordType = {\n  deviceDefault: 0,\n  lowSecurityBiometric: 1,\n  required: 2,\n  atLeastNumeric: 3,\n  numericComplex: 4,\n  atLeastAlphabetic: 5,\n  atLeastAlphanumeric: 6,\n  alphanumericWithSymbols: 7\n};\n/** applicationGuardBlockClipboardSharingType types */\nexports.applicationGuardBlockClipboardSharingType = {\n  notConfigured: 0,\n  blockBoth: 1,\n  blockHostToContainer: 2,\n  blockContainerToHost: 3,\n  blockNone: 4\n};\n/** applicationGuardBlockFileTransferType types */\nexports.applicationGuardBlockFileTransferType = {\n  notConfigured: 0,\n  blockImageAndTextFile: 1,\n  blockImageFile: 2,\n  blockNone: 3,\n  blockTextFile: 4\n};\n/** appListType types */\nexports.appListType = {\n  none: 0,\n  appsInListCompliant: 1,\n  appsNotInListCompliant: 2\n};\n/** appLockerApplicationControlType types */\nexports.appLockerApplicationControlType = {\n  notConfigured: 0,\n  enforceComponentsAndStoreApps: 1,\n  auditComponentsAndStoreApps: 2,\n  enforceComponentsStoreAppsAndSmartlocker: 3,\n  auditComponentsStoreAppsAndSmartlocker: 4\n};\n/** automaticUpdateMode types */\nexports.automaticUpdateMode = {\n  userDefined: 0,\n  notifyDownload: 1,\n  autoInstallAtMaintenanceTime: 2,\n  autoInstallAndRebootAtMaintenanceTime: 3,\n  autoInstallAndRebootAtScheduledTime: 4,\n  autoInstallAndRebootWithoutEndUserControl: 5\n};\n/** autoRestartNotificationDismissalMethod types */\nexports.autoRestartNotificationDismissalMethod = {\n  notConfigured: 0,\n  automatic: 1,\n  user: 2,\n  unknownFutureValue: 3\n};\n/** bitLockerEncryptionMethod types */\nexports.bitLockerEncryptionMethod = {\n  aesCbc128: 3,\n  aesCbc256: 4,\n  xtsAes128: 6,\n  xtsAes256: 7\n};\n/** defenderCloudBlockLevelType types */\nexports.defenderCloudBlockLevelType = {\n  notConfigured: 0,\n  high: 1,\n  highPlus: 2,\n  zeroTolerance: 3\n};\n/** defenderMonitorFileActivity types */\nexports.defenderMonitorFileActivity = {\n  userDefined: 0,\n  disable: 1,\n  monitorAllFiles: 2,\n  monitorIncomingFilesOnly: 3,\n  monitorOutgoingFilesOnly: 4\n};\n/** defenderPromptForSampleSubmission types */\nexports.defenderPromptForSampleSubmission = {\n  userDefined: 0,\n  alwaysPrompt: 1,\n  promptBeforeSendingPersonalData: 2,\n  neverSendData: 3,\n  sendAllDataWithoutPrompting: 4\n};\n/** defenderScanType types */\nexports.defenderScanType = {\n  userDefined: 0,\n  disabled: 1,\n  quick: 2,\n  full: 3\n};\n/** defenderThreatAction types */\nexports.defenderThreatAction = {\n  deviceDefault: 0,\n  clean: 1,\n  quarantine: 2,\n  remove: 3,\n  allow: 4,\n  userDefined: 5,\n  block: 6\n};\n/** deviceComplianceActionType types */\nexports.deviceComplianceActionType = {\n  noAction: 0,\n  notification: 1,\n  block: 2,\n  retire: 3,\n  wipe: 4,\n  removeResourceAccessProfiles: 5,\n  pushNotification: 9\n};\n/** deviceThreatProtectionLevel types */\nexports.deviceThreatProtectionLevel = {\n  unavailable: 0,\n  secured: 1,\n  low: 2,\n  medium: 3,\n  high: 4,\n  notSet: 10\n};\n/** diagnosticDataSubmissionMode types */\nexports.diagnosticDataSubmissionMode = {\n  userDefined: 0,\n  none: 1,\n  basic: 2,\n  enhanced: 3,\n  full: 4\n};\n/** edgeCookiePolicy types */\nexports.edgeCookiePolicy = {\n  userDefined: 0,\n  allow: 1,\n  blockThirdParty: 2,\n  blockAll: 3\n};\n/** edgeSearchEngineType types */\nexports.edgeSearchEngineType = {\n  "default": 0,\n  bing: 1\n};\n/** editionUpgradeLicenseType types */\nexports.editionUpgradeLicenseType = {\n  productKey: 0,\n  licenseFile: 1\n};\n/** enablement types */\nexports.enablement = {\n  notConfigured: 0,\n  enabled: 1,\n  disabled: 2\n};\n/** firewallCertificateRevocationListCheckMethodType types */\nexports.firewallCertificateRevocationListCheckMethodType = {\n  deviceDefault: 0,\n  none: 1,\n  attempt: 2,\n  require: 3\n};\n/** firewallPacketQueueingMethodType types */\nexports.firewallPacketQueueingMethodType = {\n  deviceDefault: 0,\n  disabled: 1,\n  queueInbound: 2,\n  queueOutbound: 3,\n  queueBoth: 4\n};\n/** firewallPreSharedKeyEncodingMethodType types */\nexports.firewallPreSharedKeyEncodingMethodType = {\n  deviceDefault: 0,\n  none: 1,\n  utF8: 2\n};\n/** internetSiteSecurityLevel types */\nexports.internetSiteSecurityLevel = {\n  userDefined: 0,\n  medium: 1,\n  mediumHigh: 2,\n  high: 3\n};\n/** iosNotificationAlertType types */\nexports.iosNotificationAlertType = {\n  deviceDefault: 0,\n  banner: 1,\n  modal: 2,\n  none: 3\n};\n/** iosUpdatesInstallStatus types */\nexports.iosUpdatesInstallStatus = {\n  deviceOsHigherThanDesiredOsVersion: -2016330696,\n  sharedDeviceUserLoggedInError: -2016330699,\n  notSupportedOperation: -2016330701,\n  installFailed: -2016330702,\n  installPhoneCallInProgress: -2016330703,\n  installInsufficientPower: -2016330704,\n  installInsufficientSpace: -2016330705,\n  installing: -2016330706,\n  downloadInsufficientNetwork: -2016330707,\n  downloadInsufficientPower: -2016330708,\n  downloadInsufficientSpace: -2016330709,\n  downloadRequiresComputer: -2016330710,\n  downloadFailed: -2016330711,\n  downloading: -2016330712,\n  success: 0,\n  available: 1,\n  idle: 2,\n  unknown: 3\n};\n/** miracastChannel types */\nexports.miracastChannel = {\n  userDefined: 0,\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n  five: 5,\n  six: 6,\n  seven: 7,\n  eight: 8,\n  nine: 9,\n  ten: 10,\n  eleven: 11,\n  thirtySix: 36,\n  forty: 40,\n  fortyFour: 44,\n  fortyEight: 48,\n  oneHundredFortyNine: 149,\n  oneHundredFiftyThree: 153,\n  oneHundredFiftySeven: 157,\n  oneHundredSixtyOne: 161,\n  oneHundredSixtyFive: 165\n};\n/** policyPlatformType types */\nexports.policyPlatformType = {\n  android: 0,\n  androidForWork: 1,\n  iOS: 2,\n  macOS: 3,\n  windowsPhone81: 4,\n  windows81AndLater: 5,\n  windows10AndLater: 6,\n  all: 100\n};\n/** prereleaseFeatures types */\nexports.prereleaseFeatures = {\n  userDefined: 0,\n  settingsOnly: 1,\n  settingsAndExperimentations: 2,\n  notAllowed: 3\n};\n/** ratingAppsType types */\nexports.ratingAppsType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  agesAbove4: 2,\n  agesAbove9: 3,\n  agesAbove12: 4,\n  agesAbove17: 5\n};\n/** ratingAustraliaMoviesType types */\nexports.ratingAustraliaMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  mature: 4,\n  agesAbove15: 5,\n  agesAbove18: 6\n};\n/** ratingAustraliaTelevisionType types */\nexports.ratingAustraliaTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  preschoolers: 2,\n  children: 3,\n  general: 4,\n  parentalGuidance: 5,\n  mature: 6,\n  agesAbove15: 7,\n  agesAbove15AdultViolence: 8\n};\n/** ratingCanadaMoviesType types */\nexports.ratingCanadaMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  agesAbove14: 4,\n  agesAbove18: 5,\n  restricted: 6\n};\n/** ratingCanadaTelevisionType types */\nexports.ratingCanadaTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  children: 2,\n  childrenAbove8: 3,\n  general: 4,\n  parentalGuidance: 5,\n  agesAbove14: 6,\n  agesAbove18: 7\n};\n/** ratingFranceMoviesType types */\nexports.ratingFranceMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  agesAbove10: 2,\n  agesAbove12: 3,\n  agesAbove16: 4,\n  agesAbove18: 5\n};\n/** ratingFranceTelevisionType types */\nexports.ratingFranceTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  agesAbove10: 2,\n  agesAbove12: 3,\n  agesAbove16: 4,\n  agesAbove18: 5\n};\n/** ratingGermanyMoviesType types */\nexports.ratingGermanyMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  agesAbove6: 3,\n  agesAbove12: 4,\n  agesAbove16: 5,\n  adults: 6\n};\n/** ratingGermanyTelevisionType types */\nexports.ratingGermanyTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  agesAbove6: 3,\n  agesAbove12: 4,\n  agesAbove16: 5,\n  adults: 6\n};\n/** ratingIrelandMoviesType types */\nexports.ratingIrelandMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  agesAbove12: 4,\n  agesAbove15: 5,\n  agesAbove16: 6,\n  adults: 7\n};\n/** ratingIrelandTelevisionType types */\nexports.ratingIrelandTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  children: 3,\n  youngAdults: 4,\n  parentalSupervision: 5,\n  mature: 6\n};\n/** ratingJapanMoviesType types */\nexports.ratingJapanMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  agesAbove15: 4,\n  agesAbove18: 5\n};\n/** ratingJapanTelevisionType types */\nexports.ratingJapanTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  explicitAllowed: 2\n};\n/** ratingNewZealandMoviesType types */\nexports.ratingNewZealandMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  mature: 4,\n  agesAbove13: 5,\n  agesAbove15: 6,\n  agesAbove16: 7,\n  agesAbove18: 8,\n  restricted: 9,\n  agesAbove16Restricted: 10\n};\n/** ratingNewZealandTelevisionType types */\nexports.ratingNewZealandTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  adults: 4\n};\n/** ratingUnitedKingdomMoviesType types */\nexports.ratingUnitedKingdomMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  universalChildren: 3,\n  parentalGuidance: 4,\n  agesAbove12Video: 5,\n  agesAbove12Cinema: 6,\n  agesAbove15: 7,\n  adults: 8\n};\n/** ratingUnitedKingdomTelevisionType types */\nexports.ratingUnitedKingdomTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  caution: 2\n};\n/** ratingUnitedStatesMoviesType types */\nexports.ratingUnitedStatesMoviesType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  general: 2,\n  parentalGuidance: 3,\n  parentalGuidance13: 4,\n  restricted: 5,\n  adults: 6\n};\n/** ratingUnitedStatesTelevisionType types */\nexports.ratingUnitedStatesTelevisionType = {\n  allAllowed: 0,\n  allBlocked: 1,\n  childrenAll: 2,\n  childrenAbove7: 3,\n  general: 4,\n  parentalGuidance: 5,\n  childrenAbove14: 6,\n  adults: 7\n};\n/** requiredPasswordType types */\nexports.requiredPasswordType = {\n  deviceDefault: 0,\n  alphanumeric: 1,\n  numeric: 2\n};\n/** safeSearchFilterType types */\nexports.safeSearchFilterType = {\n  userDefined: 0,\n  strict: 1,\n  moderate: 2\n};\n/** settingSourceType types */\nexports.settingSourceType = {\n  deviceConfiguration: 0,\n  deviceIntent: 1\n};\n/** sharedPCAccountDeletionPolicyType types */\nexports.sharedPCAccountDeletionPolicyType = {\n  immediate: 0,\n  diskSpaceThreshold: 1,\n  diskSpaceThresholdOrInactiveThreshold: 2\n};\n/** sharedPCAllowedAccountType types */\nexports.sharedPCAllowedAccountType = {\n  guest: 1,\n  domain: 2\n};\n/** siteSecurityLevel types */\nexports.siteSecurityLevel = {\n  userDefined: 0,\n  low: 1,\n  mediumLow: 2,\n  medium: 3,\n  mediumHigh: 4,\n  high: 5\n};\n/** stateManagementSetting types */\nexports.stateManagementSetting = {\n  notConfigured: 0,\n  blocked: 1,\n  allowed: 2\n};\n/** visibilitySetting types */\nexports.visibilitySetting = {\n  notConfigured: 0,\n  hide: 1,\n  show: 2\n};\n/** webBrowserCookieSettings types */\nexports.webBrowserCookieSettings = {\n  browserDefault: 0,\n  blockAlways: 1,\n  allowCurrentWebSite: 2,\n  allowFromWebsitesVisited: 3,\n  allowAlways: 4\n};\n/** weeklySchedule types */\nexports.weeklySchedule = {\n  userDefined: 0,\n  everyday: 1,\n  sunday: 2,\n  monday: 3,\n  tuesday: 4,\n  wednesday: 5,\n  thursday: 6,\n  friday: 7,\n  saturday: 8\n};\n/** welcomeScreenMeetingInformation types */\nexports.welcomeScreenMeetingInformation = {\n  userDefined: 0,\n  showOrganizerAndTimeOnly: 1,\n  showOrganizerAndTimeAndSubject: 2\n};\n/** windows10EditionType types */\nexports.windows10EditionType = {\n  windows10Enterprise: 0,\n  windows10EnterpriseN: 1,\n  windows10Education: 2,\n  windows10EducationN: 3,\n  windows10MobileEnterprise: 4,\n  windows10HolographicEnterprise: 5,\n  windows10Professional: 6,\n  windows10ProfessionalN: 7,\n  windows10ProfessionalEducation: 8,\n  windows10ProfessionalEducationN: 9,\n  windows10ProfessionalWorkstation: 10,\n  windows10ProfessionalWorkstationN: 11\n};\n/** windowsDeliveryOptimizationMode types */\nexports.windowsDeliveryOptimizationMode = {\n  userDefined: 0,\n  httpOnly: 1,\n  httpWithPeeringNat: 2,\n  httpWithPeeringPrivateGroup: 3,\n  httpWithInternetPeering: 4,\n  simpleDownload: 99,\n  bypassMode: 100\n};\n/** windowsSpotlightEnablementSettings types */\nexports.windowsSpotlightEnablementSettings = {\n  notConfigured: 0,\n  disabled: 1,\n  enabled: 2\n};\n/** windowsStartMenuAppListVisibilityType types */\nexports.windowsStartMenuAppListVisibilityType = {\n  userDefined: 0,\n  collapse: 1,\n  remove: 2,\n  disableSettingsApp: 4\n};\n/** windowsStartMenuModeType types */\nexports.windowsStartMenuModeType = {\n  userDefined: 0,\n  fullScreen: 1,\n  nonFullScreen: 2\n};\n/** windowsUpdateForBusinessUpdateWeeks types */\nexports.windowsUpdateForBusinessUpdateWeeks = {\n  userDefined: 0,\n  firstWeek: 1,\n  secondWeek: 2,\n  thirdWeek: 4,\n  fourthWeek: 8,\n  everyWeek: 15,\n  unknownFutureValue: 22\n};\n/** windowsUpdateNotificationDisplayOption types */\nexports.windowsUpdateNotificationDisplayOption = {\n  notConfigured: 0,\n  defaultNotifications: 1,\n  restartWarningsOnly: 2,\n  disableAllNotifications: 3,\n  unknownFutureValue: 4\n};\n/** windowsUpdateType types */\nexports.windowsUpdateType = {\n  userDefined: 0,\n  all: 1,\n  businessReadyOnly: 2,\n  windowsInsiderBuildFast: 3,\n  windowsInsiderBuildSlow: 4,\n  windowsInsiderBuildRelease: 5\n};\n/** windowsUserAccountControlSettings types */\nexports.windowsUserAccountControlSettings = {\n  userDefined: 0,\n  alwaysNotify: 1,\n  notifyOnAppChanges: 2,\n  notifyOnAppChangesWithoutDimming: 3,\n  neverNotify: 4\n};\n/** deviceManagementExchangeConnectorStatus types */\nexports.deviceManagementExchangeConnectorStatus = {\n  none: 0,\n  connectionPending: 1,\n  connected: 2,\n  disconnected: 3,\n  unknownFutureValue: 4\n};\n/** deviceManagementExchangeConnectorSyncType types */\nexports.deviceManagementExchangeConnectorSyncType = {\n  fullSync: 0,\n  deltaSync: 1\n};\n/** deviceManagementExchangeConnectorType types */\nexports.deviceManagementExchangeConnectorType = {\n  onPremises: 0,\n  hosted: 1,\n  serviceToService: 2,\n  dedicated: 3,\n  unknownFutureValue: 4\n};\n/** deviceManagementPartnerAppType types */\nexports.deviceManagementPartnerAppType = {\n  unknown: 0,\n  singleTenantApp: 1,\n  multiTenantApp: 2\n};\n/** deviceManagementPartnerTenantState types */\nexports.deviceManagementPartnerTenantState = {\n  unknown: 0,\n  unavailable: 1,\n  enabled: 2,\n  terminated: 3,\n  rejected: 4,\n  unresponsive: 5\n};\n/** mdmAuthority types */\nexports.mdmAuthority = {\n  unknown: 0,\n  intune: 1,\n  sccm: 2,\n  office365: 3\n};\n/** mobileThreatPartnerTenantState types */\nexports.mobileThreatPartnerTenantState = {\n  unavailable: 0,\n  available: 1,\n  enabled: 2,\n  unresponsive: 3,\n  unknownFutureValue: 6\n};\n/** vppTokenState types */\nexports.vppTokenState = {\n  unknown: 0,\n  valid: 1,\n  expired: 2,\n  invalid: 3,\n  assignedToExternalMDM: 4\n};\n/** vppTokenSyncStatus types */\nexports.vppTokenSyncStatus = {\n  none: 0,\n  inProgress: 1,\n  completed: 2,\n  failed: 3\n};\n/** windowsHelloForBusinessPinUsage types */\nexports.windowsHelloForBusinessPinUsage = {\n  allowed: 0,\n  required: 1,\n  disallowed: 2\n};\n/** actionState types */\nexports.actionState = {\n  none: 0,\n  pending: 1,\n  canceled: 2,\n  active: 3,\n  done: 4,\n  failed: 5,\n  notSupported: 6\n};\n/** appLogDecryptionAlgorithm types */\nexports.appLogDecryptionAlgorithm = {\n  aes256: 0,\n  unknownFutureValue: 1\n};\n/** appLogUploadState types */\nexports.appLogUploadState = {\n  pending: 0,\n  completed: 1,\n  failed: 2,\n  unknownFutureValue: 3\n};\n/** complianceState types */\nexports.complianceState = {\n  unknown: 0,\n  compliant: 1,\n  noncompliant: 2,\n  conflict: 3,\n  error: 4,\n  inGracePeriod: 254,\n  configManager: 255\n};\n/** detectedAppPlatformType types */\nexports.detectedAppPlatformType = {\n  unknown: 0,\n  windows: 1,\n  windowsMobile: 2,\n  windowsHolographic: 3,\n  ios: 4,\n  macOS: 5,\n  chromeOS: 6,\n  androidOSP: 7,\n  androidDeviceAdministrator: 8,\n  androidWorkProfile: 9,\n  androidDedicatedAndFullyManaged: 10,\n  unknownFutureValue: 11\n};\n/** deviceEnrollmentType types */\nexports.deviceEnrollmentType = {\n  unknown: 0,\n  userEnrollment: 1,\n  deviceEnrollmentManager: 2,\n  appleBulkWithUser: 3,\n  appleBulkWithoutUser: 4,\n  windowsAzureADJoin: 5,\n  windowsBulkUserless: 6,\n  windowsAutoEnrollment: 7,\n  windowsBulkAzureDomainJoin: 8,\n  windowsCoManagement: 9,\n  windowsAzureADJoinUsingDeviceAuth: 10,\n  appleUserEnrollment: 11,\n  appleUserEnrollmentWithServiceAccount: 12\n};\n/** deviceLogCollectionTemplateType types */\nexports.deviceLogCollectionTemplateType = {\n  predefined: 0,\n  unknownFutureValue: 1\n};\n/** deviceManagementExchangeAccessState types */\nexports.deviceManagementExchangeAccessState = {\n  none: 0,\n  unknown: 1,\n  allowed: 2,\n  blocked: 3,\n  quarantined: 4\n};\n/** deviceManagementExchangeAccessStateReason types */\nexports.deviceManagementExchangeAccessStateReason = {\n  none: 0,\n  unknown: 1,\n  exchangeGlobalRule: 2,\n  exchangeIndividualRule: 3,\n  exchangeDeviceRule: 4,\n  exchangeUpgrade: 5,\n  exchangeMailboxPolicy: 6,\n  other: 7,\n  compliant: 8,\n  notCompliant: 9,\n  notEnrolled: 10,\n  unknownLocation: 12,\n  mfaRequired: 13,\n  azureADBlockDueToAccessPolicy: 14,\n  compromisedPassword: 15,\n  deviceNotKnownWithManagedApp: 16\n};\n/** deviceManagementSubscriptionState types */\nexports.deviceManagementSubscriptionState = {\n  pending: 0,\n  active: 1,\n  warning: 2,\n  disabled: 3,\n  deleted: 4,\n  blocked: 5,\n  lockedOut: 8\n};\n/** deviceRegistrationState types */\nexports.deviceRegistrationState = {\n  notRegistered: 0,\n  registered: 2,\n  revoked: 3,\n  keyConflict: 4,\n  approvalPending: 5,\n  certificateReset: 6,\n  notRegisteredPendingEnrollment: 7,\n  unknown: 8\n};\n/** diskType types */\nexports.diskType = {\n  unknown: 0,\n  hdd: 1,\n  ssd: 2,\n  unknownFutureValue: 3\n};\n/** managedDeviceOwnerType types */\nexports.managedDeviceOwnerType = {\n  unknown: 0,\n  company: 1,\n  personal: 2\n};\n/** managedDevicePartnerReportedHealthState types */\nexports.managedDevicePartnerReportedHealthState = {\n  unknown: 0,\n  activated: 1,\n  deactivated: 2,\n  secured: 3,\n  lowSeverity: 4,\n  mediumSeverity: 5,\n  highSeverity: 6,\n  unresponsive: 7,\n  compromised: 8,\n  misconfigured: 9\n};\n/** managementAgentType types */\nexports.managementAgentType = {\n  eas: 1,\n  mdm: 2,\n  easMdm: 3,\n  intuneClient: 4,\n  easIntuneClient: 5,\n  configurationManagerClient: 8,\n  configurationManagerClientMdm: 10,\n  configurationManagerClientMdmEas: 11,\n  unknown: 16,\n  jamf: 32,\n  googleCloudDevicePolicyController: 64,\n  microsoft365ManagedMdm: 258,\n  msSense: 1024\n};\n/** obliterationBehavior types */\nexports.obliterationBehavior = {\n  "default": 0,\n  doNotObliterate: 1,\n  obliterateWithWarning: 2,\n  always: 3,\n  unknownFutureValue: 999\n};\n/** operatingSystemUpgradeEligibility types */\nexports.operatingSystemUpgradeEligibility = {\n  upgraded: 0,\n  unknown: 1,\n  notCapable: 2,\n  capable: 3,\n  unknownFutureValue: 4\n};\n/** userExperienceAnalyticsHealthState types */\nexports.userExperienceAnalyticsHealthState = {\n  unknown: 0,\n  insufficientData: 1,\n  needsAttention: 2,\n  meetingGoals: 3,\n  unknownFutureValue: 4\n};\n/** userExperienceAnalyticsInsightSeverity types */\nexports.userExperienceAnalyticsInsightSeverity = {\n  none: 0,\n  informational: 1,\n  warning: 2,\n  error: 3,\n  unknownFutureValue: 4\n};\n/** userExperienceAnalyticsOperatingSystemRestartCategory types */\nexports.userExperienceAnalyticsOperatingSystemRestartCategory = {\n  unknown: 0,\n  restartWithUpdate: 1,\n  restartWithoutUpdate: 2,\n  blueScreen: 3,\n  shutdownWithUpdate: 4,\n  shutdownWithoutUpdate: 5,\n  longPowerButtonPress: 6,\n  bootError: 7,\n  update: 8,\n  unknownFutureValue: 9\n};\n/** userExperienceAnalyticsSummarizedBy types */\nexports.userExperienceAnalyticsSummarizedBy = {\n  none: 0,\n  model: 1,\n  allRegressions: 3,\n  modelRegression: 4,\n  manufacturerRegression: 5,\n  operatingSystemVersionRegression: 6,\n  unknownFutureValue: 7\n};\n/** windowsDefenderProductStatus types */\nexports.windowsDefenderProductStatus = {\n  noStatus: 0,\n  serviceNotRunning: 1,\n  serviceStartedWithoutMalwareProtection: 2,\n  pendingFullScanDueToThreatAction: 4,\n  pendingRebootDueToThreatAction: 8,\n  pendingManualStepsDueToThreatAction: 16,\n  avSignaturesOutOfDate: 32,\n  asSignaturesOutOfDate: 64,\n  noQuickScanHappenedForSpecifiedPeriod: 128,\n  noFullScanHappenedForSpecifiedPeriod: 256,\n  systemInitiatedScanInProgress: 512,\n  systemInitiatedCleanInProgress: 1024,\n  samplesPendingSubmission: 2048,\n  productRunningInEvaluationMode: 4096,\n  productRunningInNonGenuineMode: 8192,\n  productExpired: 16384,\n  offlineScanRequired: 32768,\n  serviceShutdownAsPartOfSystemShutdown: 65536,\n  threatRemediationFailedCritically: 131072,\n  threatRemediationFailedNonCritically: 262144,\n  noStatusFlagsSet: 524288,\n  platformOutOfDate: 1048576,\n  platformUpdateInProgress: 2097152,\n  platformAboutToBeOutdated: 4194304,\n  signatureOrPlatformEndOfLifeIsPastOrIsImpending: 8388608,\n  windowsSModeSignaturesInUseOnNonWin10SInstall: 16777216\n};\n/** windowsDeviceHealthState types */\nexports.windowsDeviceHealthState = {\n  clean: 0,\n  fullScanPending: 1,\n  rebootPending: 2,\n  manualStepsPending: 4,\n  offlineScanPending: 8,\n  critical: 16\n};\n/** windowsMalwareCategory types */\nexports.windowsMalwareCategory = {\n  invalid: 0,\n  adware: 1,\n  spyware: 2,\n  passwordStealer: 3,\n  trojanDownloader: 4,\n  worm: 5,\n  backdoor: 6,\n  remoteAccessTrojan: 7,\n  trojan: 8,\n  emailFlooder: 9,\n  keylogger: 10,\n  dialer: 11,\n  monitoringSoftware: 12,\n  browserModifier: 13,\n  cookie: 14,\n  browserPlugin: 15,\n  aolExploit: 16,\n  nuker: 17,\n  securityDisabler: 18,\n  jokeProgram: 19,\n  hostileActiveXControl: 20,\n  softwareBundler: 21,\n  stealthNotifier: 22,\n  settingsModifier: 23,\n  toolBar: 24,\n  remoteControlSoftware: 25,\n  trojanFtp: 26,\n  potentialUnwantedSoftware: 27,\n  icqExploit: 28,\n  trojanTelnet: 29,\n  exploit: 30,\n  filesharingProgram: 31,\n  malwareCreationTool: 32,\n  remote_Control_Software: 33,\n  tool: 34,\n  trojanDenialOfService: 36,\n  trojanDropper: 37,\n  trojanMassMailer: 38,\n  trojanMonitoringSoftware: 39,\n  trojanProxyServer: 40,\n  virus: 42,\n  known: 43,\n  unknown: 44,\n  spp: 45,\n  behavior: 46,\n  vulnerability: 47,\n  policy: 48,\n  enterpriseUnwantedSoftware: 49,\n  ransom: 50,\n  hipsRule: 51\n};\n/** windowsMalwareExecutionState types */\nexports.windowsMalwareExecutionState = {\n  unknown: 0,\n  blocked: 1,\n  allowed: 2,\n  running: 3,\n  notRunning: 4\n};\n/** windowsMalwareSeverity types */\nexports.windowsMalwareSeverity = {\n  unknown: 0,\n  low: 1,\n  moderate: 2,\n  high: 4,\n  severe: 5\n};\n/** windowsMalwareState types */\nexports.windowsMalwareState = {\n  unknown: 0,\n  detected: 1,\n  cleaned: 2,\n  quarantined: 3,\n  removed: 4,\n  allowed: 5,\n  blocked: 6,\n  cleanFailed: 102,\n  quarantineFailed: 103,\n  removeFailed: 104,\n  allowFailed: 105,\n  abandoned: 106,\n  blockFailed: 107\n};\n/** windowsMalwareThreatState types */\nexports.windowsMalwareThreatState = {\n  active: 0,\n  actionFailed: 1,\n  manualStepsRequired: 2,\n  fullScanRequired: 3,\n  rebootRequired: 4,\n  remediatedWithNonCriticalFailures: 5,\n  quarantined: 6,\n  removed: 7,\n  cleaned: 8,\n  allowed: 9,\n  noStatusCleared: 10\n};\n/** enrollmentState types */\nexports.enrollmentState = {\n  unknown: 0,\n  enrolled: 1,\n  pendingReset: 2,\n  failed: 3,\n  notContacted: 4\n};\n/** importedWindowsAutopilotDeviceIdentityImportStatus types */\nexports.importedWindowsAutopilotDeviceIdentityImportStatus = {\n  unknown: 0,\n  pending: 1,\n  partial: 2,\n  complete: 3,\n  error: 4\n};\n/** importedWindowsAutopilotDeviceIdentityUploadStatus types */\nexports.importedWindowsAutopilotDeviceIdentityUploadStatus = {\n  noUpload: 0,\n  pending: 1,\n  complete: 2,\n  error: 3\n};\n/** windowsAutopilotDeviceType types */\nexports.windowsAutopilotDeviceType = {\n  windowsPc: 0,\n  holoLens: 1,\n  unknownFutureValue: 99\n};\n/** windowsDeviceUsageType types */\nexports.windowsDeviceUsageType = {\n  singleUser: 0,\n  shared: 1,\n  unknownFutureValue: 2\n};\n/** windowsUserType types */\nexports.windowsUserType = {\n  administrator: 0,\n  standard: 1,\n  unknownFutureValue: 2\n};\n/** managedAppClipboardSharingLevel types */\nexports.managedAppClipboardSharingLevel = {\n  allApps: 0,\n  managedAppsWithPasteIn: 1,\n  managedApps: 2,\n  blocked: 3\n};\n/** managedAppDataEncryptionType types */\nexports.managedAppDataEncryptionType = {\n  useDeviceSettings: 0,\n  afterDeviceRestart: 1,\n  whenDeviceLockedExceptOpenFiles: 2,\n  whenDeviceLocked: 3\n};\n/** managedAppDataStorageLocation types */\nexports.managedAppDataStorageLocation = {\n  oneDriveForBusiness: 1,\n  sharePoint: 2,\n  box: 3,\n  localStorage: 6\n};\n/** managedAppDataTransferLevel types */\nexports.managedAppDataTransferLevel = {\n  allApps: 0,\n  managedApps: 1,\n  none: 2\n};\n/** managedAppFlaggedReason types */\nexports.managedAppFlaggedReason = {\n  none: 0,\n  rootedDevice: 1\n};\n/** managedAppPinCharacterSet types */\nexports.managedAppPinCharacterSet = {\n  numeric: 0,\n  alphanumericAndSymbol: 1\n};\n/** managedBrowserType types */\nexports.managedBrowserType = {\n  notConfigured: 0,\n  microsoftEdge: 1\n};\n/** targetedManagedAppGroupType types */\nexports.targetedManagedAppGroupType = {\n  selectedPublicApps: 0,\n  allCoreMicrosoftApps: 1,\n  allMicrosoftApps: 2,\n  allApps: 4\n};\n/** windowsInformationProtectionEnforcementLevel types */\nexports.windowsInformationProtectionEnforcementLevel = {\n  noProtection: 0,\n  encryptAndAuditOnly: 1,\n  encryptAuditAndPrompt: 2,\n  encryptAuditAndBlock: 3\n};\n/** windowsInformationProtectionPinCharacterRequirements types */\nexports.windowsInformationProtectionPinCharacterRequirements = {\n  notAllow: 0,\n  requireAtLeastOne: 1,\n  allow: 2\n};\n/** notificationTemplateBrandingOptions types */\nexports.notificationTemplateBrandingOptions = {\n  none: 0,\n  includeCompanyLogo: 1,\n  includeCompanyName: 2,\n  includeContactInformation: 4,\n  includeCompanyPortalLink: 8,\n  includeDeviceDetails: 16,\n  unknownFutureValue: 32\n};\n/** remoteAssistanceOnboardingStatus types */\nexports.remoteAssistanceOnboardingStatus = {\n  notOnboarded: 0,\n  onboarding: 1,\n  onboarded: 2\n};\n/** deviceManagementExportJobLocalizationType types */\nexports.deviceManagementExportJobLocalizationType = {\n  localizedValuesAsAdditionalColumn: 0,\n  replaceLocalizableValues: 1\n};\n/** deviceManagementReportFileFormat types */\nexports.deviceManagementReportFileFormat = {\n  csv: 0,\n  pdf: 1,\n  json: 2,\n  unknownFutureValue: 3\n};\n/** deviceManagementReportStatus types */\nexports.deviceManagementReportStatus = {\n  unknown: 0,\n  notStarted: 1,\n  inProgress: 2,\n  completed: 3,\n  failed: 4\n};\n/** deviceEnrollmentFailureReason types */\nexports.deviceEnrollmentFailureReason = {\n  unknown: 0,\n  authentication: 1,\n  authorization: 2,\n  accountValidation: 3,\n  userValidation: 4,\n  deviceNotSupported: 5,\n  inMaintenance: 6,\n  badRequest: 7,\n  featureNotSupported: 8,\n  enrollmentRestrictionsEnforced: 9,\n  clientDisconnected: 10,\n  userAbandonment: 11\n};\n/** applicationType types */\nexports.applicationType = {\n  universal: 1,\n  desktop: 2\n};\n/** appsUpdateChannelType types */\nexports.appsUpdateChannelType = {\n  current: 0,\n  monthlyEnterprise: 1,\n  semiAnnual: 2,\n  unknownFutureValue: 3\n};\n/** postType types */\nexports.postType = {\n  regular: 0,\n  quick: 1,\n  strategic: 2,\n  unknownFutureValue: 3\n};\n/** serviceHealthClassificationType types */\nexports.serviceHealthClassificationType = {\n  advisory: 1,\n  incident: 2,\n  unknownFutureValue: 3\n};\n/** serviceHealthOrigin types */\nexports.serviceHealthOrigin = {\n  microsoft: 1,\n  thirdParty: 2,\n  customer: 3,\n  unknownFutureValue: 4\n};\n/** serviceHealthStatus types */\nexports.serviceHealthStatus = {\n  serviceOperational: 0,\n  investigating: 1,\n  restoringService: 2,\n  verifyingService: 3,\n  serviceRestored: 4,\n  postIncidentReviewPublished: 5,\n  serviceDegradation: 6,\n  serviceInterruption: 7,\n  extendedRecovery: 8,\n  falsePositive: 9,\n  investigationSuspended: 10,\n  resolved: 11,\n  mitigatedExternal: 12,\n  mitigated: 13,\n  resolvedExternal: 14,\n  confirmed: 15,\n  reported: 16,\n  unknownFutureValue: 17\n};\n/** serviceUpdateCategory types */\nexports.serviceUpdateCategory = {\n  preventOrFixIssue: 1,\n  planForChange: 2,\n  stayInformed: 3,\n  unknownFutureValue: 4\n};\n/** serviceUpdateSeverity types */\nexports.serviceUpdateSeverity = {\n  normal: 1,\n  high: 2,\n  critical: 3,\n  unknownFutureValue: 4\n};\n/** bucketAggregationSortProperty types */\nexports.bucketAggregationSortProperty = {\n  count: 0,\n  keyAsString: 1,\n  keyAsNumber: 2,\n  unknownFutureValue: 3\n};\n/** entityType types */\nexports.entityType = {\n  event: 0,\n  message: 1,\n  driveItem: 2,\n  externalItem: 4,\n  site: 5,\n  list: 6,\n  listItem: 7,\n  drive: 8,\n  unknownFutureValue: 9,\n  acronym: 12,\n  bookmark: 13,\n  chatMessage: 10,\n  person: 11\n};\n/** searchAlterationType types */\nexports.searchAlterationType = {\n  suggestion: 0,\n  modification: 1,\n  unknownFutureValue: 2\n};\n/** searchContent types */\nexports.searchContent = {\n  sharedContent: 1,\n  privateContent: 2,\n  unknownFutureValue: 4\n};\n/** plannerContainerType types */\nexports.plannerContainerType = {\n  group: 1,\n  unknownFutureValue: 2,\n  roster: 3\n};\n/** plannerPreviewType types */\nexports.plannerPreviewType = {\n  automatic: 0,\n  noPreview: 1,\n  checklist: 2,\n  description: 3,\n  reference: 4\n};\n/** onenotePatchActionType types */\nexports.onenotePatchActionType = {\n  Replace: 0,\n  Append: 1,\n  Delete: 2,\n  Insert: 3,\n  Prepend: 4\n};\n/** onenotePatchInsertPosition types */\nexports.onenotePatchInsertPosition = {\n  After: 0,\n  Before: 1\n};\n/** onenoteSourceService types */\nexports.onenoteSourceService = {\n  Unknown: 0,\n  OneDrive: 1,\n  OneDriveForBusiness: 2,\n  OnPremOneDriveForBusiness: 3\n};\n/** onenoteUserRole types */\nexports.onenoteUserRole = {\n  None: -1,\n  Owner: 0,\n  Contributor: 1,\n  Reader: 2\n};\n/** operationStatus types */\nexports.operationStatus = {\n  NotStarted: 0,\n  Running: 1,\n  Completed: 2,\n  Failed: 3\n};\n/** delegatedAdminAccessAssignmentStatus types */\nexports.delegatedAdminAccessAssignmentStatus = {\n  pending: 0,\n  active: 1,\n  deleting: 2,\n  deleted: 3,\n  error: 4,\n  unknownFutureValue: 5\n};\n/** delegatedAdminAccessContainerType types */\nexports.delegatedAdminAccessContainerType = {\n  securityGroup: 0,\n  unknownFutureValue: 1\n};\n/** delegatedAdminRelationshipOperationType types */\nexports.delegatedAdminRelationshipOperationType = {\n  delegatedAdminAccessAssignmentUpdate: 0,\n  unknownFutureValue: 1,\n  delegatedAdminRelationshipUpdate: 2\n};\n/** delegatedAdminRelationshipRequestAction types */\nexports.delegatedAdminRelationshipRequestAction = {\n  lockForApproval: 0,\n  approve: 1,\n  terminate: 2,\n  unknownFutureValue: 3,\n  reject: 4\n};\n/** delegatedAdminRelationshipRequestStatus types */\nexports.delegatedAdminRelationshipRequestStatus = {\n  created: 0,\n  pending: 1,\n  succeeded: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** delegatedAdminRelationshipStatus types */\nexports.delegatedAdminRelationshipStatus = {\n  activating: 0,\n  active: 1,\n  approvalPending: 2,\n  approved: 3,\n  created: 4,\n  expired: 5,\n  expiring: 6,\n  terminated: 7,\n  terminating: 8,\n  terminationRequested: 9,\n  unknownFutureValue: 10\n};\n/** windowsSettingType types */\nexports.windowsSettingType = {\n  roaming: 0,\n  backup: 1,\n  unknownFutureValue: 2\n};\n/** assignmentScheduleFilterByCurrentUserOptions types */\nexports.assignmentScheduleFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** assignmentScheduleInstanceFilterByCurrentUserOptions types */\nexports.assignmentScheduleInstanceFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** assignmentScheduleRequestFilterByCurrentUserOptions types */\nexports.assignmentScheduleRequestFilterByCurrentUserOptions = {\n  principal: 1,\n  createdBy: 2,\n  approver: 3,\n  unknownFutureValue: 4\n};\n/** eligibilityScheduleFilterByCurrentUserOptions types */\nexports.eligibilityScheduleFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** eligibilityScheduleInstanceFilterByCurrentUserOptions types */\nexports.eligibilityScheduleInstanceFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** eligibilityScheduleRequestFilterByCurrentUserOptions types */\nexports.eligibilityScheduleRequestFilterByCurrentUserOptions = {\n  principal: 1,\n  createdBy: 2,\n  approver: 3,\n  unknownFutureValue: 4\n};\n/** privilegedAccessGroupAssignmentType types */\nexports.privilegedAccessGroupAssignmentType = {\n  assigned: 1,\n  activated: 2,\n  unknownFutureValue: 3\n};\n/** privilegedAccessGroupMemberType types */\nexports.privilegedAccessGroupMemberType = {\n  direct: 1,\n  group: 2,\n  unknownFutureValue: 3\n};\n/** privilegedAccessGroupRelationships types */\nexports.privilegedAccessGroupRelationships = {\n  owner: 1,\n  member: 2,\n  unknownFutureValue: 3\n};\n/** roleAssignmentScheduleFilterByCurrentUserOptions types */\nexports.roleAssignmentScheduleFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** roleAssignmentScheduleInstanceFilterByCurrentUserOptions types */\nexports.roleAssignmentScheduleInstanceFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** roleAssignmentScheduleRequestFilterByCurrentUserOptions types */\nexports.roleAssignmentScheduleRequestFilterByCurrentUserOptions = {\n  principal: 1,\n  createdBy: 2,\n  approver: 3,\n  unknownFutureValue: 4\n};\n/** roleEligibilityScheduleFilterByCurrentUserOptions types */\nexports.roleEligibilityScheduleFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** roleEligibilityScheduleInstanceFilterByCurrentUserOptions types */\nexports.roleEligibilityScheduleInstanceFilterByCurrentUserOptions = {\n  principal: 1,\n  unknownFutureValue: 2\n};\n/** roleEligibilityScheduleRequestFilterByCurrentUserOptions types */\nexports.roleEligibilityScheduleRequestFilterByCurrentUserOptions = {\n  principal: 1,\n  createdBy: 2,\n  approver: 3,\n  unknownFutureValue: 4\n};\n/** scheduleRequestActions types */\nexports.scheduleRequestActions = {\n  adminAssign: 1,\n  adminUpdate: 2,\n  adminRemove: 3,\n  selfActivate: 4,\n  selfDeactivate: 5,\n  adminExtend: 6,\n  adminRenew: 7,\n  selfExtend: 8,\n  selfRenew: 9,\n  unknownFutureValue: 10\n};\n/** unifiedRoleManagementPolicyRuleTargetOperations types */\nexports.unifiedRoleManagementPolicyRuleTargetOperations = {\n  all: 0,\n  activate: 1,\n  deactivate: 2,\n  assign: 3,\n  update: 4,\n  remove: 5,\n  extend: 6,\n  renew: 7,\n  unknownFutureValue: 8\n};\n/** unifiedRoleScheduleRequestActions types */\nexports.unifiedRoleScheduleRequestActions = {\n  adminAssign: 1,\n  adminUpdate: 2,\n  adminRemove: 3,\n  selfActivate: 4,\n  selfDeactivate: 5,\n  adminExtend: 6,\n  adminRenew: 7,\n  selfExtend: 8,\n  selfRenew: 9,\n  unknownFutureValue: 10\n};\n/** printColorMode types */\nexports.printColorMode = {\n  blackAndWhite: 0,\n  grayscale: 1,\n  color: 2,\n  auto: 3,\n  unknownFutureValue: 4\n};\n/** printDuplexMode types */\nexports.printDuplexMode = {\n  flipOnLongEdge: 0,\n  flipOnShortEdge: 1,\n  oneSided: 2,\n  unknownFutureValue: 3\n};\n/** printerFeedOrientation types */\nexports.printerFeedOrientation = {\n  longEdgeFirst: 0,\n  shortEdgeFirst: 1,\n  unknownFutureValue: 2\n};\n/** printerProcessingState types */\nexports.printerProcessingState = {\n  unknown: 0,\n  idle: 1,\n  processing: 2,\n  stopped: 3,\n  unknownFutureValue: 4\n};\n/** printerProcessingStateDetail types */\nexports.printerProcessingStateDetail = {\n  paused: 0,\n  mediaJam: 2,\n  mediaNeeded: 3,\n  mediaLow: 4,\n  mediaEmpty: 5,\n  coverOpen: 6,\n  interlockOpen: 7,\n  outputTrayMissing: 9,\n  outputAreaFull: 10,\n  markerSupplyLow: 11,\n  markerSupplyEmpty: 12,\n  inputTrayMissing: 13,\n  outputAreaAlmostFull: 14,\n  markerWasteAlmostFull: 15,\n  markerWasteFull: 16,\n  fuserOverTemp: 17,\n  fuserUnderTemp: 18,\n  other: 19,\n  none: 20,\n  movingToPaused: 21,\n  shutdown: 22,\n  connectingToDevice: 23,\n  timedOut: 24,\n  stopping: 25,\n  stoppedPartially: 26,\n  tonerLow: 27,\n  tonerEmpty: 28,\n  spoolAreaFull: 29,\n  doorOpen: 30,\n  opticalPhotoConductorNearEndOfLife: 31,\n  opticalPhotoConductorLifeOver: 32,\n  developerLow: 33,\n  developerEmpty: 34,\n  interpreterResourceUnavailable: 35,\n  unknownFutureValue: 36,\n  alertRemovalOfBinaryChangeEntry: 37,\n  banderAdded: 38,\n  banderAlmostEmpty: 39,\n  banderAlmostFull: 40,\n  banderAtLimit: 41,\n  banderClosed: 42,\n  banderConfigurationChange: 43,\n  banderCoverClosed: 44,\n  banderCoverOpen: 45,\n  banderEmpty: 46,\n  banderFull: 47,\n  banderInterlockClosed: 48,\n  banderInterlockOpen: 49,\n  banderJam: 50,\n  banderLifeAlmostOver: 51,\n  banderLifeOver: 52,\n  banderMemoryExhausted: 53,\n  banderMissing: 54,\n  banderMotorFailure: 55,\n  banderNearLimit: 56,\n  banderOffline: 57,\n  banderOpened: 58,\n  banderOverTemperature: 59,\n  banderPowerSaver: 60,\n  banderRecoverableFailure: 61,\n  banderRecoverableStorage: 62,\n  banderRemoved: 63,\n  banderResourceAdded: 64,\n  banderResourceRemoved: 65,\n  banderThermistorFailure: 66,\n  banderTimingFailure: 67,\n  banderTurnedOff: 68,\n  banderTurnedOn: 69,\n  banderUnderTemperature: 70,\n  banderUnrecoverableFailure: 71,\n  banderUnrecoverableStorageError: 72,\n  banderWarmingUp: 73,\n  binderAdded: 74,\n  binderAlmostEmpty: 75,\n  binderAlmostFull: 76,\n  binderAtLimit: 77,\n  binderClosed: 78,\n  binderConfigurationChange: 79,\n  binderCoverClosed: 80,\n  binderCoverOpen: 81,\n  binderEmpty: 82,\n  binderFull: 83,\n  binderInterlockClosed: 84,\n  binderInterlockOpen: 85,\n  binderJam: 86,\n  binderLifeAlmostOver: 87,\n  binderLifeOver: 88,\n  binderMemoryExhausted: 89,\n  binderMissing: 90,\n  binderMotorFailure: 91,\n  binderNearLimit: 92,\n  binderOffline: 93,\n  binderOpened: 94,\n  binderOverTemperature: 95,\n  binderPowerSaver: 96,\n  binderRecoverableFailure: 97,\n  binderRecoverableStorage: 98,\n  binderRemoved: 99,\n  binderResourceAdded: 100,\n  binderResourceRemoved: 101,\n  binderThermistorFailure: 102,\n  binderTimingFailure: 103,\n  binderTurnedOff: 104,\n  binderTurnedOn: 105,\n  binderUnderTemperature: 106,\n  binderUnrecoverableFailure: 107,\n  binderUnrecoverableStorageError: 108,\n  binderWarmingUp: 109,\n  cameraFailure: 110,\n  chamberCooling: 111,\n  chamberFailure: 112,\n  chamberHeating: 113,\n  chamberTemperatureHigh: 114,\n  chamberTemperatureLow: 115,\n  cleanerLifeAlmostOver: 116,\n  cleanerLifeOver: 117,\n  configurationChange: 118,\n  deactivated: 119,\n  deleted: 120,\n  dieCutterAdded: 121,\n  dieCutterAlmostEmpty: 122,\n  dieCutterAlmostFull: 123,\n  dieCutterAtLimit: 124,\n  dieCutterClosed: 125,\n  dieCutterConfigurationChange: 126,\n  dieCutterCoverClosed: 127,\n  dieCutterCoverOpen: 128,\n  dieCutterEmpty: 129,\n  dieCutterFull: 130,\n  dieCutterInterlockClosed: 131,\n  dieCutterInterlockOpen: 132,\n  dieCutterJam: 133,\n  dieCutterLifeAlmostOver: 134,\n  dieCutterLifeOver: 135,\n  dieCutterMemoryExhausted: 136,\n  dieCutterMissing: 137,\n  dieCutterMotorFailure: 138,\n  dieCutterNearLimit: 139,\n  dieCutterOffline: 140,\n  dieCutterOpened: 141,\n  dieCutterOverTemperature: 142,\n  dieCutterPowerSaver: 143,\n  dieCutterRecoverableFailure: 144,\n  dieCutterRecoverableStorage: 145,\n  dieCutterRemoved: 146,\n  dieCutterResourceAdded: 147,\n  dieCutterResourceRemoved: 148,\n  dieCutterThermistorFailure: 149,\n  dieCutterTimingFailure: 150,\n  dieCutterTurnedOff: 151,\n  dieCutterTurnedOn: 152,\n  dieCutterUnderTemperature: 153,\n  dieCutterUnrecoverableFailure: 154,\n  dieCutterUnrecoverableStorageError: 155,\n  dieCutterWarmingUp: 156,\n  extruderCooling: 157,\n  extruderFailure: 158,\n  extruderHeating: 159,\n  extruderJam: 160,\n  extruderTemperatureHigh: 161,\n  extruderTemperatureLow: 162,\n  fanFailure: 163,\n  faxModemLifeAlmostOver: 164,\n  faxModemLifeOver: 165,\n  faxModemMissing: 166,\n  faxModemTurnedOff: 167,\n  faxModemTurnedOn: 168,\n  folderAdded: 169,\n  folderAlmostEmpty: 170,\n  folderAlmostFull: 171,\n  folderAtLimit: 172,\n  folderClosed: 173,\n  folderConfigurationChange: 174,\n  folderCoverClosed: 175,\n  folderCoverOpen: 176,\n  folderEmpty: 177,\n  folderFull: 178,\n  folderInterlockClosed: 179,\n  folderInterlockOpen: 180,\n  folderJam: 181,\n  folderLifeAlmostOver: 182,\n  folderLifeOver: 183,\n  folderMemoryExhausted: 184,\n  folderMissing: 185,\n  folderMotorFailure: 186,\n  folderNearLimit: 187,\n  folderOffline: 188,\n  folderOpened: 189,\n  folderOverTemperature: 190,\n  folderPowerSaver: 191,\n  folderRecoverableFailure: 192,\n  folderRecoverableStorage: 193,\n  folderRemoved: 194,\n  folderResourceAdded: 195,\n  folderResourceRemoved: 196,\n  folderThermistorFailure: 197,\n  folderTimingFailure: 198,\n  folderTurnedOff: 199,\n  folderTurnedOn: 200,\n  folderUnderTemperature: 201,\n  folderUnrecoverableFailure: 202,\n  folderUnrecoverableStorageError: 203,\n  folderWarmingUp: 204,\n  hibernate: 205,\n  holdNewJobs: 206,\n  identifyPrinterRequested: 207,\n  imprinterAdded: 208,\n  imprinterAlmostEmpty: 209,\n  imprinterAlmostFull: 210,\n  imprinterAtLimit: 211,\n  imprinterClosed: 212,\n  imprinterConfigurationChange: 213,\n  imprinterCoverClosed: 214,\n  imprinterCoverOpen: 215,\n  imprinterEmpty: 216,\n  imprinterFull: 217,\n  imprinterInterlockClosed: 218,\n  imprinterInterlockOpen: 219,\n  imprinterJam: 220,\n  imprinterLifeAlmostOver: 221,\n  imprinterLifeOver: 222,\n  imprinterMemoryExhausted: 223,\n  imprinterMissing: 224,\n  imprinterMotorFailure: 225,\n  imprinterNearLimit: 226,\n  imprinterOffline: 227,\n  imprinterOpened: 228,\n  imprinterOverTemperature: 229,\n  imprinterPowerSaver: 230,\n  imprinterRecoverableFailure: 231,\n  imprinterRecoverableStorage: 232,\n  imprinterRemoved: 233,\n  imprinterResourceAdded: 234,\n  imprinterResourceRemoved: 235,\n  imprinterThermistorFailure: 236,\n  imprinterTimingFailure: 237,\n  imprinterTurnedOff: 238,\n  imprinterTurnedOn: 239,\n  imprinterUnderTemperature: 240,\n  imprinterUnrecoverableFailure: 241,\n  imprinterUnrecoverableStorageError: 242,\n  imprinterWarmingUp: 243,\n  inputCannotFeedSizeSelected: 244,\n  inputManualInputRequest: 245,\n  inputMediaColorChange: 246,\n  inputMediaFormPartsChange: 247,\n  inputMediaSizeChange: 248,\n  inputMediaTrayFailure: 249,\n  inputMediaTrayFeedError: 250,\n  inputMediaTrayJam: 251,\n  inputMediaTypeChange: 252,\n  inputMediaWeightChange: 253,\n  inputPickRollerFailure: 254,\n  inputPickRollerLifeOver: 255,\n  inputPickRollerLifeWarn: 256,\n  inputPickRollerMissing: 257,\n  inputTrayElevationFailure: 258,\n  inputTrayPositionFailure: 259,\n  inserterAdded: 260,\n  inserterAlmostEmpty: 261,\n  inserterAlmostFull: 262,\n  inserterAtLimit: 263,\n  inserterClosed: 264,\n  inserterConfigurationChange: 265,\n  inserterCoverClosed: 266,\n  inserterCoverOpen: 267,\n  inserterEmpty: 268,\n  inserterFull: 269,\n  inserterInterlockClosed: 270,\n  inserterInterlockOpen: 271,\n  inserterJam: 272,\n  inserterLifeAlmostOver: 273,\n  inserterLifeOver: 274,\n  inserterMemoryExhausted: 275,\n  inserterMissing: 276,\n  inserterMotorFailure: 277,\n  inserterNearLimit: 278,\n  inserterOffline: 279,\n  inserterOpened: 280,\n  inserterOverTemperature: 281,\n  inserterPowerSaver: 282,\n  inserterRecoverableFailure: 283,\n  inserterRecoverableStorage: 284,\n  inserterRemoved: 285,\n  inserterResourceAdded: 286,\n  inserterResourceRemoved: 287,\n  inserterThermistorFailure: 288,\n  inserterTimingFailure: 289,\n  inserterTurnedOff: 290,\n  inserterTurnedOn: 291,\n  inserterUnderTemperature: 292,\n  inserterUnrecoverableFailure: 293,\n  inserterUnrecoverableStorageError: 294,\n  inserterWarmingUp: 295,\n  interlockClosed: 296,\n  interpreterCartridgeAdded: 297,\n  interpreterCartridgeDeleted: 298,\n  interpreterComplexPageEncountered: 299,\n  interpreterMemoryDecrease: 300,\n  interpreterMemoryIncrease: 301,\n  interpreterResourceAdded: 302,\n  interpreterResourceDeleted: 303,\n  lampAtEol: 304,\n  lampFailure: 305,\n  lampNearEol: 306,\n  laserAtEol: 307,\n  laserFailure: 308,\n  laserNearEol: 309,\n  makeEnvelopeAdded: 310,\n  makeEnvelopeAlmostEmpty: 311,\n  makeEnvelopeAlmostFull: 312,\n  makeEnvelopeAtLimit: 313,\n  makeEnvelopeClosed: 314,\n  makeEnvelopeConfigurationChange: 315,\n  makeEnvelopeCoverClosed: 316,\n  makeEnvelopeCoverOpen: 317,\n  makeEnvelopeEmpty: 318,\n  makeEnvelopeFull: 319,\n  makeEnvelopeInterlockClosed: 320,\n  makeEnvelopeInterlockOpen: 321,\n  makeEnvelopeJam: 322,\n  makeEnvelopeLifeAlmostOver: 323,\n  makeEnvelopeLifeOver: 324,\n  makeEnvelopeMemoryExhausted: 325,\n  makeEnvelopeMissing: 326,\n  makeEnvelopeMotorFailure: 327,\n  makeEnvelopeNearLimit: 328,\n  makeEnvelopeOffline: 329,\n  makeEnvelopeOpened: 330,\n  makeEnvelopeOverTemperature: 331,\n  makeEnvelopePowerSaver: 332,\n  makeEnvelopeRecoverableFailure: 333,\n  makeEnvelopeRecoverableStorage: 334,\n  makeEnvelopeRemoved: 335,\n  makeEnvelopeResourceAdded: 336,\n  makeEnvelopeResourceRemoved: 337,\n  makeEnvelopeThermistorFailure: 338,\n  makeEnvelopeTimingFailure: 339,\n  makeEnvelopeTurnedOff: 340,\n  makeEnvelopeTurnedOn: 341,\n  makeEnvelopeUnderTemperature: 342,\n  makeEnvelopeUnrecoverableFailure: 343,\n  makeEnvelopeUnrecoverableStorageError: 344,\n  makeEnvelopeWarmingUp: 345,\n  markerAdjustingPrintQuality: 346,\n  markerCleanerMissing: 347,\n  markerDeveloperAlmostEmpty: 348,\n  markerDeveloperEmpty: 349,\n  markerDeveloperMissing: 350,\n  markerFuserMissing: 351,\n  markerFuserThermistorFailure: 352,\n  markerFuserTimingFailure: 353,\n  markerInkAlmostEmpty: 354,\n  markerInkEmpty: 355,\n  markerInkMissing: 356,\n  markerOpcMissing: 357,\n  markerPrintRibbonAlmostEmpty: 358,\n  markerPrintRibbonEmpty: 359,\n  markerPrintRibbonMissing: 360,\n  markerSupplyAlmostEmpty: 361,\n  markerSupplyMissing: 362,\n  markerTonerCartridgeMissing: 363,\n  markerTonerMissing: 364,\n  markerWasteInkReceptacleAlmostFull: 365,\n  markerWasteInkReceptacleFull: 366,\n  markerWasteInkReceptacleMissing: 367,\n  markerWasteMissing: 368,\n  markerWasteTonerReceptacleAlmostFull: 369,\n  markerWasteTonerReceptacleFull: 370,\n  markerWasteTonerReceptacleMissing: 371,\n  materialEmpty: 372,\n  materialLow: 373,\n  materialNeeded: 374,\n  mediaDrying: 375,\n  mediaPathCannotDuplexMediaSelected: 376,\n  mediaPathFailure: 377,\n  mediaPathInputEmpty: 378,\n  mediaPathInputFeedError: 379,\n  mediaPathInputJam: 380,\n  mediaPathInputRequest: 381,\n  mediaPathJam: 382,\n  mediaPathMediaTrayAlmostFull: 383,\n  mediaPathMediaTrayFull: 384,\n  mediaPathMediaTrayMissing: 385,\n  mediaPathOutputFeedError: 386,\n  mediaPathOutputFull: 387,\n  mediaPathOutputJam: 388,\n  mediaPathPickRollerFailure: 389,\n  mediaPathPickRollerLifeOver: 390,\n  mediaPathPickRollerLifeWarn: 391,\n  mediaPathPickRollerMissing: 392,\n  motorFailure: 393,\n  outputMailboxSelectFailure: 394,\n  outputMediaTrayFailure: 395,\n  outputMediaTrayFeedError: 396,\n  outputMediaTrayJam: 397,\n  perforaterAdded: 398,\n  perforaterAlmostEmpty: 399,\n  perforaterAlmostFull: 400,\n  perforaterAtLimit: 401,\n  perforaterClosed: 402,\n  perforaterConfigurationChange: 403,\n  perforaterCoverClosed: 404,\n  perforaterCoverOpen: 405,\n  perforaterEmpty: 406,\n  perforaterFull: 407,\n  perforaterInterlockClosed: 408,\n  perforaterInterlockOpen: 409,\n  perforaterJam: 410,\n  perforaterLifeAlmostOver: 411,\n  perforaterLifeOver: 412,\n  perforaterMemoryExhausted: 413,\n  perforaterMissing: 414,\n  perforaterMotorFailure: 415,\n  perforaterNearLimit: 416,\n  perforaterOffline: 417,\n  perforaterOpened: 418,\n  perforaterOverTemperature: 419,\n  perforaterPowerSaver: 420,\n  perforaterRecoverableFailure: 421,\n  perforaterRecoverableStorage: 422,\n  perforaterRemoved: 423,\n  perforaterResourceAdded: 424,\n  perforaterResourceRemoved: 425,\n  perforaterThermistorFailure: 426,\n  perforaterTimingFailure: 427,\n  perforaterTurnedOff: 428,\n  perforaterTurnedOn: 429,\n  perforaterUnderTemperature: 430,\n  perforaterUnrecoverableFailure: 431,\n  perforaterUnrecoverableStorageError: 432,\n  perforaterWarmingUp: 433,\n  platformCooling: 434,\n  platformFailure: 435,\n  platformHeating: 436,\n  platformTemperatureHigh: 437,\n  platformTemperatureLow: 438,\n  powerDown: 439,\n  powerUp: 440,\n  printerManualReset: 441,\n  printerNmsReset: 442,\n  printerReadyToPrint: 443,\n  puncherAdded: 444,\n  puncherAlmostEmpty: 445,\n  puncherAlmostFull: 446,\n  puncherAtLimit: 447,\n  puncherClosed: 448,\n  puncherConfigurationChange: 449,\n  puncherCoverClosed: 450,\n  puncherCoverOpen: 451,\n  puncherEmpty: 452,\n  puncherFull: 453,\n  puncherInterlockClosed: 454,\n  puncherInterlockOpen: 455,\n  puncherJam: 456,\n  puncherLifeAlmostOver: 457,\n  puncherLifeOver: 458,\n  puncherMemoryExhausted: 459,\n  puncherMissing: 460,\n  puncherMotorFailure: 461,\n  puncherNearLimit: 462,\n  puncherOffline: 463,\n  puncherOpened: 464,\n  puncherOverTemperature: 465,\n  puncherPowerSaver: 466,\n  puncherRecoverableFailure: 467,\n  puncherRecoverableStorage: 468,\n  puncherRemoved: 469,\n  puncherResourceAdded: 470,\n  puncherResourceRemoved: 471,\n  puncherThermistorFailure: 472,\n  puncherTimingFailure: 473,\n  puncherTurnedOff: 474,\n  puncherTurnedOn: 475,\n  puncherUnderTemperature: 476,\n  puncherUnrecoverableFailure: 477,\n  puncherUnrecoverableStorageError: 478,\n  puncherWarmingUp: 479,\n  resuming: 480,\n  scanMediaPathFailure: 481,\n  scanMediaPathInputEmpty: 482,\n  scanMediaPathInputFeedError: 483,\n  scanMediaPathInputJam: 484,\n  scanMediaPathInputRequest: 485,\n  scanMediaPathJam: 486,\n  scanMediaPathOutputFeedError: 487,\n  scanMediaPathOutputFull: 488,\n  scanMediaPathOutputJam: 489,\n  scanMediaPathPickRollerFailure: 490,\n  scanMediaPathPickRollerLifeOver: 491,\n  scanMediaPathPickRollerLifeWarn: 492,\n  scanMediaPathPickRollerMissing: 493,\n  scanMediaPathTrayAlmostFull: 494,\n  scanMediaPathTrayFull: 495,\n  scanMediaPathTrayMissing: 496,\n  scannerLightFailure: 497,\n  scannerLightLifeAlmostOver: 498,\n  scannerLightLifeOver: 499,\n  scannerLightMissing: 500,\n  scannerSensorFailure: 501,\n  scannerSensorLifeAlmostOver: 502,\n  scannerSensorLifeOver: 503,\n  scannerSensorMissing: 504,\n  separationCutterAdded: 505,\n  separationCutterAlmostEmpty: 506,\n  separationCutterAlmostFull: 507,\n  separationCutterAtLimit: 508,\n  separationCutterClosed: 509,\n  separationCutterConfigurationChange: 510,\n  separationCutterCoverClosed: 511,\n  separationCutterCoverOpen: 512,\n  separationCutterEmpty: 513,\n  separationCutterFull: 514,\n  separationCutterInterlockClosed: 515,\n  separationCutterInterlockOpen: 516,\n  separationCutterJam: 517,\n  separationCutterLifeAlmostOver: 518,\n  separationCutterLifeOver: 519,\n  separationCutterMemoryExhausted: 520,\n  separationCutterMissing: 521,\n  separationCutterMotorFailure: 522,\n  separationCutterNearLimit: 523,\n  separationCutterOffline: 524,\n  separationCutterOpened: 525,\n  separationCutterOverTemperature: 526,\n  separationCutterPowerSaver: 527,\n  separationCutterRecoverableFailure: 528,\n  separationCutterRecoverableStorage: 529,\n  separationCutterRemoved: 530,\n  separationCutterResourceAdded: 531,\n  separationCutterResourceRemoved: 532,\n  separationCutterThermistorFailure: 533,\n  separationCutterTimingFailure: 534,\n  separationCutterTurnedOff: 535,\n  separationCutterTurnedOn: 536,\n  separationCutterUnderTemperature: 537,\n  separationCutterUnrecoverableFailure: 538,\n  separationCutterUnrecoverableStorageError: 539,\n  separationCutterWarmingUp: 540,\n  sheetRotatorAdded: 541,\n  sheetRotatorAlmostEmpty: 542,\n  sheetRotatorAlmostFull: 543,\n  sheetRotatorAtLimit: 544,\n  sheetRotatorClosed: 545,\n  sheetRotatorConfigurationChange: 546,\n  sheetRotatorCoverClosed: 547,\n  sheetRotatorCoverOpen: 548,\n  sheetRotatorEmpty: 549,\n  sheetRotatorFull: 550,\n  sheetRotatorInterlockClosed: 551,\n  sheetRotatorInterlockOpen: 552,\n  sheetRotatorJam: 553,\n  sheetRotatorLifeAlmostOver: 554,\n  sheetRotatorLifeOver: 555,\n  sheetRotatorMemoryExhausted: 556,\n  sheetRotatorMissing: 557,\n  sheetRotatorMotorFailure: 558,\n  sheetRotatorNearLimit: 559,\n  sheetRotatorOffline: 560,\n  sheetRotatorOpened: 561,\n  sheetRotatorOverTemperature: 562,\n  sheetRotatorPowerSaver: 563,\n  sheetRotatorRecoverableFailure: 564,\n  sheetRotatorRecoverableStorage: 565,\n  sheetRotatorRemoved: 566,\n  sheetRotatorResourceAdded: 567,\n  sheetRotatorResourceRemoved: 568,\n  sheetRotatorThermistorFailure: 569,\n  sheetRotatorTimingFailure: 570,\n  sheetRotatorTurnedOff: 571,\n  sheetRotatorTurnedOn: 572,\n  sheetRotatorUnderTemperature: 573,\n  sheetRotatorUnrecoverableFailure: 574,\n  sheetRotatorUnrecoverableStorageError: 575,\n  sheetRotatorWarmingUp: 576,\n  slitterAdded: 577,\n  slitterAlmostEmpty: 578,\n  slitterAlmostFull: 579,\n  slitterAtLimit: 580,\n  slitterClosed: 581,\n  slitterConfigurationChange: 582,\n  slitterCoverClosed: 583,\n  slitterCoverOpen: 584,\n  slitterEmpty: 585,\n  slitterFull: 586,\n  slitterInterlockClosed: 587,\n  slitterInterlockOpen: 588,\n  slitterJam: 589,\n  slitterLifeAlmostOver: 590,\n  slitterLifeOver: 591,\n  slitterMemoryExhausted: 592,\n  slitterMissing: 593,\n  slitterMotorFailure: 594,\n  slitterNearLimit: 595,\n  slitterOffline: 596,\n  slitterOpened: 597,\n  slitterOverTemperature: 598,\n  slitterPowerSaver: 599,\n  slitterRecoverableFailure: 600,\n  slitterRecoverableStorage: 601,\n  slitterRemoved: 602,\n  slitterResourceAdded: 603,\n  slitterResourceRemoved: 604,\n  slitterThermistorFailure: 605,\n  slitterTimingFailure: 606,\n  slitterTurnedOff: 607,\n  slitterTurnedOn: 608,\n  slitterUnderTemperature: 609,\n  slitterUnrecoverableFailure: 610,\n  slitterUnrecoverableStorageError: 611,\n  slitterWarmingUp: 612,\n  stackerAdded: 613,\n  stackerAlmostEmpty: 614,\n  stackerAlmostFull: 615,\n  stackerAtLimit: 616,\n  stackerClosed: 617,\n  stackerConfigurationChange: 618,\n  stackerCoverClosed: 619,\n  stackerCoverOpen: 620,\n  stackerEmpty: 621,\n  stackerFull: 622,\n  stackerInterlockClosed: 623,\n  stackerInterlockOpen: 624,\n  stackerJam: 625,\n  stackerLifeAlmostOver: 626,\n  stackerLifeOver: 627,\n  stackerMemoryExhausted: 628,\n  stackerMissing: 629,\n  stackerMotorFailure: 630,\n  stackerNearLimit: 631,\n  stackerOffline: 632,\n  stackerOpened: 633,\n  stackerOverTemperature: 634,\n  stackerPowerSaver: 635,\n  stackerRecoverableFailure: 636,\n  stackerRecoverableStorage: 637,\n  stackerRemoved: 638,\n  stackerResourceAdded: 639,\n  stackerResourceRemoved: 640,\n  stackerThermistorFailure: 641,\n  stackerTimingFailure: 642,\n  stackerTurnedOff: 643,\n  stackerTurnedOn: 644,\n  stackerUnderTemperature: 645,\n  stackerUnrecoverableFailure: 646,\n  stackerUnrecoverableStorageError: 647,\n  stackerWarmingUp: 648,\n  standby: 649,\n  staplerAdded: 650,\n  staplerAlmostEmpty: 651,\n  staplerAlmostFull: 652,\n  staplerAtLimit: 653,\n  staplerClosed: 654,\n  staplerConfigurationChange: 655,\n  staplerCoverClosed: 656,\n  staplerCoverOpen: 657,\n  staplerEmpty: 658,\n  staplerFull: 659,\n  staplerInterlockClosed: 660,\n  staplerInterlockOpen: 661,\n  staplerJam: 662,\n  staplerLifeAlmostOver: 663,\n  staplerLifeOver: 664,\n  staplerMemoryExhausted: 665,\n  staplerMissing: 666,\n  staplerMotorFailure: 667,\n  staplerNearLimit: 668,\n  staplerOffline: 669,\n  staplerOpened: 670,\n  staplerOverTemperature: 671,\n  staplerPowerSaver: 672,\n  staplerRecoverableFailure: 673,\n  staplerRecoverableStorage: 674,\n  staplerRemoved: 675,\n  staplerResourceAdded: 676,\n  staplerResourceRemoved: 677,\n  staplerThermistorFailure: 678,\n  staplerTimingFailure: 679,\n  staplerTurnedOff: 680,\n  staplerTurnedOn: 681,\n  staplerUnderTemperature: 682,\n  staplerUnrecoverableFailure: 683,\n  staplerUnrecoverableStorageError: 684,\n  staplerWarmingUp: 685,\n  stitcherAdded: 686,\n  stitcherAlmostEmpty: 687,\n  stitcherAlmostFull: 688,\n  stitcherAtLimit: 689,\n  stitcherClosed: 690,\n  stitcherConfigurationChange: 691,\n  stitcherCoverClosed: 692,\n  stitcherCoverOpen: 693,\n  stitcherEmpty: 694,\n  stitcherFull: 695,\n  stitcherInterlockClosed: 696,\n  stitcherInterlockOpen: 697,\n  stitcherJam: 698,\n  stitcherLifeAlmostOver: 699,\n  stitcherLifeOver: 700,\n  stitcherMemoryExhausted: 701,\n  stitcherMissing: 702,\n  stitcherMotorFailure: 703,\n  stitcherNearLimit: 704,\n  stitcherOffline: 705,\n  stitcherOpened: 706,\n  stitcherOverTemperature: 707,\n  stitcherPowerSaver: 708,\n  stitcherRecoverableFailure: 709,\n  stitcherRecoverableStorage: 710,\n  stitcherRemoved: 711,\n  stitcherResourceAdded: 712,\n  stitcherResourceRemoved: 713,\n  stitcherThermistorFailure: 714,\n  stitcherTimingFailure: 715,\n  stitcherTurnedOff: 716,\n  stitcherTurnedOn: 717,\n  stitcherUnderTemperature: 718,\n  stitcherUnrecoverableFailure: 719,\n  stitcherUnrecoverableStorageError: 720,\n  stitcherWarmingUp: 721,\n  subunitAdded: 722,\n  subunitAlmostEmpty: 723,\n  subunitAlmostFull: 724,\n  subunitAtLimit: 725,\n  subunitClosed: 726,\n  subunitCoolingDown: 727,\n  subunitEmpty: 728,\n  subunitFull: 729,\n  subunitLifeAlmostOver: 730,\n  subunitLifeOver: 731,\n  subunitMemoryExhausted: 732,\n  subunitMissing: 733,\n  subunitMotorFailure: 734,\n  subunitNearLimit: 735,\n  subunitOffline: 736,\n  subunitOpened: 737,\n  subunitOverTemperature: 738,\n  subunitPowerSaver: 739,\n  subunitRecoverableFailure: 740,\n  subunitRecoverableStorage: 741,\n  subunitRemoved: 742,\n  subunitResourceAdded: 743,\n  subunitResourceRemoved: 744,\n  subunitThermistorFailure: 745,\n  subunitTimingFailure: 746,\n  subunitTurnedOff: 747,\n  subunitTurnedOn: 748,\n  subunitUnderTemperature: 749,\n  subunitUnrecoverableFailure: 750,\n  subunitUnrecoverableStorage: 751,\n  subunitWarmingUp: 752,\n  suspend: 753,\n  testing: 754,\n  trimmerAdded: 755,\n  trimmerAlmostEmpty: 756,\n  trimmerAlmostFull: 757,\n  trimmerAtLimit: 758,\n  trimmerClosed: 759,\n  trimmerConfigurationChange: 760,\n  trimmerCoverClosed: 761,\n  trimmerCoverOpen: 762,\n  trimmerEmpty: 763,\n  trimmerFull: 764,\n  trimmerInterlockClosed: 765,\n  trimmerInterlockOpen: 766,\n  trimmerJam: 767,\n  trimmerLifeAlmostOver: 768,\n  trimmerLifeOver: 769,\n  trimmerMemoryExhausted: 770,\n  trimmerMissing: 771,\n  trimmerMotorFailure: 772,\n  trimmerNearLimit: 773,\n  trimmerOffline: 774,\n  trimmerOpened: 775,\n  trimmerOverTemperature: 776,\n  trimmerPowerSaver: 777,\n  trimmerRecoverableFailure: 778,\n  trimmerRecoverableStorage: 779,\n  trimmerRemoved: 780,\n  trimmerResourceAdded: 781,\n  trimmerResourceRemoved: 782,\n  trimmerThermistorFailure: 783,\n  trimmerTimingFailure: 784,\n  trimmerTurnedOff: 785,\n  trimmerTurnedOn: 786,\n  trimmerUnderTemperature: 787,\n  trimmerUnrecoverableFailure: 788,\n  trimmerUnrecoverableStorageError: 789,\n  trimmerWarmingUp: 790,\n  unknown: 791,\n  wrapperAdded: 792,\n  wrapperAlmostEmpty: 793,\n  wrapperAlmostFull: 794,\n  wrapperAtLimit: 795,\n  wrapperClosed: 796,\n  wrapperConfigurationChange: 797,\n  wrapperCoverClosed: 798,\n  wrapperCoverOpen: 799,\n  wrapperEmpty: 800,\n  wrapperFull: 801,\n  wrapperInterlockClosed: 802,\n  wrapperInterlockOpen: 803,\n  wrapperJam: 804,\n  wrapperLifeAlmostOver: 805,\n  wrapperLifeOver: 806,\n  wrapperMemoryExhausted: 807,\n  wrapperMissing: 808,\n  wrapperMotorFailure: 809,\n  wrapperNearLimit: 810,\n  wrapperOffline: 811,\n  wrapperOpened: 812,\n  wrapperOverTemperature: 813,\n  wrapperPowerSaver: 814,\n  wrapperRecoverableFailure: 815,\n  wrapperRecoverableStorage: 816,\n  wrapperRemoved: 817,\n  wrapperResourceAdded: 818,\n  wrapperResourceRemoved: 819,\n  wrapperThermistorFailure: 820,\n  wrapperTimingFailure: 821,\n  wrapperTurnedOff: 822,\n  wrapperTurnedOn: 823,\n  wrapperUnderTemperature: 824,\n  wrapperUnrecoverableFailure: 825,\n  wrapperUnrecoverableStorageError: 826,\n  wrapperWarmingUp: 827\n};\n/** printEvent types */\nexports.printEvent = {\n  jobStarted: 0,\n  unknownFutureValue: 1\n};\n/** printFinishing types */\nexports.printFinishing = {\n  none: 3,\n  staple: 4,\n  punch: 5,\n  cover: 6,\n  bind: 7,\n  saddleStitch: 8,\n  stitchEdge: 9,\n  stapleTopLeft: 20,\n  stapleBottomLeft: 21,\n  stapleTopRight: 22,\n  stapleBottomRight: 23,\n  stitchLeftEdge: 24,\n  stitchTopEdge: 25,\n  stitchRightEdge: 26,\n  stitchBottomEdge: 27,\n  stapleDualLeft: 28,\n  stapleDualTop: 29,\n  stapleDualRight: 30,\n  stapleDualBottom: 31,\n  unknownFutureValue: 32,\n  stapleTripleLeft: 33,\n  stapleTripleTop: 34,\n  stapleTripleRight: 35,\n  stapleTripleBottom: 36,\n  bindLeft: 37,\n  bindTop: 38,\n  bindRight: 39,\n  bindBottom: 40,\n  foldAccordion: 41,\n  foldDoubleGate: 42,\n  foldGate: 43,\n  foldHalf: 44,\n  foldHalfZ: 45,\n  foldLeftGate: 46,\n  foldLetter: 47,\n  foldParallel: 48,\n  foldPoster: 49,\n  foldRightGate: 50,\n  foldZ: 51,\n  foldEngineeringZ: 52,\n  punchTopLeft: 53,\n  punchBottomLeft: 54,\n  punchTopRight: 55,\n  punchBottomRight: 56,\n  punchDualLeft: 57,\n  punchDualTop: 58,\n  punchDualRight: 59,\n  punchDualBottom: 60,\n  punchTripleLeft: 61,\n  punchTripleTop: 62,\n  punchTripleRight: 63,\n  punchTripleBottom: 64,\n  punchQuadLeft: 65,\n  punchQuadTop: 66,\n  punchQuadRight: 67,\n  punchQuadBottom: 68,\n  fold: 69,\n  trim: 70,\n  bale: 71,\n  bookletMaker: 72,\n  coat: 73,\n  laminate: 74,\n  trimAfterPages: 75,\n  trimAfterDocuments: 76,\n  trimAfterCopies: 77,\n  trimAfterJob: 78\n};\n/** printJobProcessingState types */\nexports.printJobProcessingState = {\n  unknown: 0,\n  pending: 1,\n  processing: 2,\n  paused: 3,\n  stopped: 4,\n  completed: 5,\n  canceled: 6,\n  aborted: 7,\n  unknownFutureValue: 8\n};\n/** printJobStateDetail types */\nexports.printJobStateDetail = {\n  uploadPending: 0,\n  transforming: 1,\n  completedSuccessfully: 2,\n  completedWithWarnings: 3,\n  completedWithErrors: 4,\n  releaseWait: 5,\n  interpreting: 6,\n  unknownFutureValue: 7\n};\n/** printMultipageLayout types */\nexports.printMultipageLayout = {\n  clockwiseFromTopLeft: 0,\n  counterclockwiseFromTopLeft: 1,\n  counterclockwiseFromTopRight: 2,\n  clockwiseFromTopRight: 3,\n  counterclockwiseFromBottomLeft: 4,\n  clockwiseFromBottomLeft: 5,\n  counterclockwiseFromBottomRight: 6,\n  clockwiseFromBottomRight: 7,\n  unknownFutureValue: 8\n};\n/** printOperationProcessingState types */\nexports.printOperationProcessingState = {\n  notStarted: 0,\n  running: 1,\n  succeeded: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** printOrientation types */\nexports.printOrientation = {\n  portrait: 3,\n  landscape: 4,\n  reverseLandscape: 5,\n  reversePortrait: 6,\n  unknownFutureValue: 7\n};\n/** printQuality types */\nexports.printQuality = {\n  low: 0,\n  medium: 1,\n  high: 2,\n  unknownFutureValue: 3\n};\n/** printScaling types */\nexports.printScaling = {\n  auto: 0,\n  shrinkToFit: 1,\n  fill: 2,\n  fit: 3,\n  none: 4,\n  unknownFutureValue: 5\n};\n/** printTaskProcessingState types */\nexports.printTaskProcessingState = {\n  pending: 0,\n  processing: 1,\n  completed: 2,\n  aborted: 3,\n  unknownFutureValue: 4\n};\n/** status types */\nexports.status = {\n  active: 0,\n  updated: 1,\n  deleted: 2,\n  ignored: 3,\n  unknownFutureValue: 4\n};\n/** dataPolicyOperationStatus types */\nexports.dataPolicyOperationStatus = {\n  notStarted: 0,\n  running: 1,\n  complete: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** devicePlatformType types */\nexports.devicePlatformType = {\n  android: 0,\n  androidForWork: 1,\n  iOS: 2,\n  macOS: 3,\n  windowsPhone81: 4,\n  windows81AndLater: 5,\n  windows10AndLater: 6,\n  androidWorkProfile: 7,\n  unknown: 8,\n  androidAOSP: 9,\n  androidMobileApplicationManagement: 10,\n  iOSMobileApplicationManagement: 11,\n  unknownFutureValue: 12\n};\n/** accountTargetContentType types */\nexports.accountTargetContentType = {\n  unknown: 0,\n  includeAll: 1,\n  addressBook: 2,\n  unknownFutureValue: 3\n};\n/** attackSimulationOperationType types */\nexports.attackSimulationOperationType = {\n  createSimualation: 0,\n  updateSimulation: 1,\n  unknownFutureValue: 2\n};\n/** clickSource types */\nexports.clickSource = {\n  unknown: 0,\n  qrCode: 1,\n  phishingUrl: 2,\n  unknownFutureValue: 3\n};\n/** coachmarkLocationType types */\nexports.coachmarkLocationType = {\n  unknown: 0,\n  fromEmail: 1,\n  subject: 2,\n  externalTag: 3,\n  displayName: 4,\n  messageBody: 5,\n  unknownFutureValue: 6\n};\n/** endUserNotificationPreference types */\nexports.endUserNotificationPreference = {\n  unknown: 0,\n  microsoft: 1,\n  custom: 2,\n  unknownFutureValue: 3\n};\n/** endUserNotificationSettingType types */\nexports.endUserNotificationSettingType = {\n  unknown: 0,\n  noTraining: 1,\n  trainingSelected: 2,\n  noNotification: 3,\n  unknownFutureValue: 4\n};\n/** endUserNotificationType types */\nexports.endUserNotificationType = {\n  unknown: 0,\n  positiveReinforcement: 1,\n  noTraining: 2,\n  trainingAssignment: 3,\n  trainingReminder: 4,\n  unknownFutureValue: 5\n};\n/** notificationDeliveryFrequency types */\nexports.notificationDeliveryFrequency = {\n  unknown: 0,\n  weekly: 1,\n  biWeekly: 2,\n  unknownFutureValue: 3\n};\n/** notificationDeliveryPreference types */\nexports.notificationDeliveryPreference = {\n  unknown: 0,\n  deliverImmedietly: 1,\n  deliverAfterCampaignEnd: 2,\n  unknownFutureValue: 3\n};\n/** oAuthAppScope types */\nexports.oAuthAppScope = {\n  unknown: 0,\n  readCalendar: 1,\n  readContact: 2,\n  readMail: 3,\n  readAllChat: 4,\n  readAllFile: 5,\n  readAndWriteMail: 6,\n  sendMail: 7,\n  unknownFutureValue: 8\n};\n/** payloadBrand types */\nexports.payloadBrand = {\n  unknown: 0,\n  other: 1,\n  americanExpress: 2,\n  capitalOne: 3,\n  dhl: 4,\n  docuSign: 5,\n  dropbox: 6,\n  facebook: 7,\n  firstAmerican: 8,\n  microsoft: 9,\n  netflix: 10,\n  scotiabank: 11,\n  sendGrid: 12,\n  stewartTitle: 13,\n  tesco: 14,\n  wellsFargo: 15,\n  syrinxCloud: 16,\n  adobe: 17,\n  teams: 18,\n  zoom: 19,\n  unknownFutureValue: 20\n};\n/** payloadComplexity types */\nexports.payloadComplexity = {\n  unknown: 0,\n  low: 1,\n  medium: 2,\n  high: 3,\n  unknownFutureValue: 4\n};\n/** payloadDeliveryPlatform types */\nexports.payloadDeliveryPlatform = {\n  unknown: 0,\n  sms: 1,\n  email: 2,\n  teams: 3,\n  unknownFutureValue: 4\n};\n/** payloadIndustry types */\nexports.payloadIndustry = {\n  unknown: 0,\n  other: 1,\n  banking: 2,\n  businessServices: 3,\n  consumerServices: 4,\n  education: 5,\n  energy: 6,\n  construction: 7,\n  consulting: 8,\n  financialServices: 9,\n  government: 10,\n  hospitality: 11,\n  insurance: 12,\n  legal: 13,\n  courierServices: 14,\n  IT: 15,\n  healthcare: 16,\n  manufacturing: 17,\n  retail: 18,\n  telecom: 19,\n  realEstate: 20,\n  unknownFutureValue: 21\n};\n/** payloadTheme types */\nexports.payloadTheme = {\n  unknown: 0,\n  other: 1,\n  accountActivation: 2,\n  accountVerification: 3,\n  billing: 4,\n  cleanUpMail: 5,\n  controversial: 6,\n  documentReceived: 7,\n  expense: 8,\n  fax: 9,\n  financeReport: 10,\n  incomingMessages: 11,\n  invoice: 12,\n  itemReceived: 13,\n  loginAlert: 14,\n  mailReceived: 15,\n  password: 16,\n  payment: 17,\n  payroll: 18,\n  personalizedOffer: 19,\n  quarantine: 20,\n  remoteWork: 21,\n  reviewMessage: 22,\n  securityUpdate: 23,\n  serviceSuspended: 24,\n  signatureRequired: 25,\n  upgradeMailboxStorage: 26,\n  verifyMailbox: 27,\n  voicemail: 28,\n  advertisement: 29,\n  employeeEngagement: 30,\n  unknownFutureValue: 31\n};\n/** simulationAttackTechnique types */\nexports.simulationAttackTechnique = {\n  unknown: 0,\n  credentialHarvesting: 1,\n  attachmentMalware: 2,\n  driveByUrl: 3,\n  linkInAttachment: 4,\n  linkToMalwareFile: 5,\n  unknownFutureValue: 6\n};\n/** simulationAttackType types */\nexports.simulationAttackType = {\n  unknown: 0,\n  social: 1,\n  cloud: 2,\n  endpoint: 3,\n  unknownFutureValue: 4\n};\n/** simulationAutomationRunStatus types */\nexports.simulationAutomationRunStatus = {\n  unknown: 0,\n  running: 1,\n  succeeded: 2,\n  failed: 3,\n  skipped: 4,\n  unknownFutureValue: 5\n};\n/** simulationAutomationStatus types */\nexports.simulationAutomationStatus = {\n  unknown: 0,\n  draft: 1,\n  notRunning: 2,\n  running: 3,\n  completed: 4,\n  unknownFutureValue: 5\n};\n/** simulationContentSource types */\nexports.simulationContentSource = {\n  unknown: 0,\n  global: 1,\n  tenant: 2,\n  unknownFutureValue: 3\n};\n/** simulationContentStatus types */\nexports.simulationContentStatus = {\n  unknown: 0,\n  draft: 1,\n  ready: 2,\n  archive: 3,\n  "delete": 4,\n  unknownFutureValue: 5\n};\n/** simulationStatus types */\nexports.simulationStatus = {\n  unknown: 0,\n  draft: 1,\n  running: 2,\n  scheduled: 3,\n  succeeded: 4,\n  failed: 5,\n  cancelled: 6,\n  excluded: 7,\n  unknownFutureValue: 8\n};\n/** targettedUserType types */\nexports.targettedUserType = {\n  unknown: 0,\n  clicked: 1,\n  compromised: 2,\n  allUsers: 3,\n  unknownFutureValue: 4\n};\n/** trainingAssignedTo types */\nexports.trainingAssignedTo = {\n  none: 0,\n  allUsers: 1,\n  clickedPayload: 2,\n  compromised: 3,\n  reportedPhish: 4,\n  readButNotClicked: 5,\n  didNothing: 6,\n  unknownFutureValue: 7\n};\n/** trainingAvailabilityStatus types */\nexports.trainingAvailabilityStatus = {\n  unknown: 0,\n  notAvailable: 1,\n  available: 2,\n  archive: 3,\n  "delete": 4,\n  unknownFutureValue: 5\n};\n/** trainingCompletionDuration types */\nexports.trainingCompletionDuration = {\n  week: 7,\n  fortnite: 14,\n  month: 30,\n  unknownFutureValue: 100\n};\n/** trainingSettingType types */\nexports.trainingSettingType = {\n  microsoftCustom: 0,\n  microsoftManaged: 1,\n  noTraining: 2,\n  custom: 3,\n  unknownFutureValue: 4\n};\n/** trainingStatus types */\nexports.trainingStatus = {\n  unknown: 0,\n  assigned: 1,\n  inProgress: 2,\n  completed: 3,\n  overdue: 4,\n  unknownFutureValue: 5\n};\n/** trainingType types */\nexports.trainingType = {\n  unknown: 0,\n  phishing: 1,\n  unknownFutureValue: 2\n};\n/** alertFeedback types */\nexports.alertFeedback = {\n  unknown: 0,\n  truePositive: 1,\n  falsePositive: 2,\n  benignPositive: 3,\n  unknownFutureValue: 127\n};\n/** alertSeverity types */\nexports.alertSeverity = {\n  unknown: 0,\n  informational: 32,\n  low: 64,\n  medium: 128,\n  high: 256,\n  unknownFutureValue: 511\n};\n/** alertStatus types */\nexports.alertStatus = {\n  unknown: 0,\n  "new": 2,\n  inProgress: 4,\n  resolved: 8,\n  unknownFutureValue: 31\n};\n/** connectionDirection types */\nexports.connectionDirection = {\n  unknown: 0,\n  inbound: 1,\n  outbound: 2,\n  unknownFutureValue: 127\n};\n/** connectionStatus types */\nexports.connectionStatus = {\n  unknown: 0,\n  attempted: 1,\n  succeeded: 2,\n  blocked: 3,\n  failed: 4,\n  unknownFutureValue: 127\n};\n/** emailRole types */\nexports.emailRole = {\n  unknown: 0,\n  sender: 1,\n  recipient: 2,\n  unknownFutureValue: 127\n};\n/** fileHashType types */\nexports.fileHashType = {\n  unknown: 0,\n  sha1: 1,\n  sha256: 2,\n  md5: 3,\n  authenticodeHash256: 4,\n  lsHash: 5,\n  ctph: 6,\n  unknownFutureValue: 127\n};\n/** logonType types */\nexports.logonType = {\n  unknown: 0,\n  interactive: 1,\n  remoteInteractive: 2,\n  network: 3,\n  batch: 4,\n  service: 5,\n  unknownFutureValue: 127\n};\n/** processIntegrityLevel types */\nexports.processIntegrityLevel = {\n  unknown: 0,\n  untrusted: 1,\n  low: 2,\n  medium: 3,\n  high: 4,\n  system: 5,\n  unknownFutureValue: 127\n};\n/** registryHive types */\nexports.registryHive = {\n  unknown: 0,\n  currentConfig: 1,\n  currentUser: 2,\n  localMachineSam: 3,\n  localMachineSecurity: 4,\n  localMachineSoftware: 5,\n  localMachineSystem: 6,\n  usersDefault: 7,\n  unknownFutureValue: 127\n};\n/** registryOperation types */\nexports.registryOperation = {\n  unknown: 0,\n  create: 1,\n  modify: 2,\n  "delete": 3,\n  unknownFutureValue: 127\n};\n/** registryValueType types */\nexports.registryValueType = {\n  unknown: 0,\n  binary: 1,\n  dword: 2,\n  dwordLittleEndian: 3,\n  dwordBigEndian: 4,\n  expandSz: 5,\n  link: 6,\n  multiSz: 7,\n  none: 8,\n  qword: 9,\n  qwordlittleEndian: 10,\n  sz: 11,\n  unknownFutureValue: 127\n};\n/** securityNetworkProtocol types */\nexports.securityNetworkProtocol = {\n  unknown: -1,\n  ip: 0,\n  icmp: 1,\n  igmp: 2,\n  ggp: 3,\n  ipv4: 4,\n  tcp: 6,\n  pup: 12,\n  udp: 17,\n  idp: 22,\n  ipv6: 41,\n  ipv6RoutingHeader: 43,\n  ipv6FragmentHeader: 44,\n  ipSecEncapsulatingSecurityPayload: 50,\n  ipSecAuthenticationHeader: 51,\n  icmpV6: 58,\n  ipv6NoNextHeader: 59,\n  ipv6DestinationOptions: 60,\n  nd: 77,\n  raw: 255,\n  ipx: 1000,\n  spx: 1256,\n  spxII: 1257,\n  unknownFutureValue: 32767\n};\n/** securityResourceType types */\nexports.securityResourceType = {\n  unknown: 0,\n  attacked: 1,\n  related: 2,\n  unknownFutureValue: 3\n};\n/** userAccountSecurityType types */\nexports.userAccountSecurityType = {\n  unknown: 0,\n  standard: 1,\n  power: 2,\n  administrator: 3,\n  unknownFutureValue: 127\n};\n/** broadcastMeetingAudience types */\nexports.broadcastMeetingAudience = {\n  roleIsAttendee: 0,\n  organization: 1,\n  everyone: 2,\n  unknownFutureValue: 3\n};\n/** callDirection types */\nexports.callDirection = {\n  incoming: 0,\n  outgoing: 1\n};\n/** callState types */\nexports.callState = {\n  incoming: 0,\n  establishing: 1,\n  established: 3,\n  hold: 4,\n  transferring: 5,\n  transferAccepted: 6,\n  redirecting: 7,\n  terminating: 8,\n  terminated: 9,\n  unknownFutureValue: 10\n};\n/** callTranscriptionState types */\nexports.callTranscriptionState = {\n  notStarted: 0,\n  active: 1,\n  inactive: 2,\n  unknownFutureValue: 3\n};\n/** changeType types */\nexports.changeType = {\n  created: 0,\n  updated: 1,\n  deleted: 2\n};\n/** mediaDirection types */\nexports.mediaDirection = {\n  inactive: 0,\n  sendOnly: 1,\n  receiveOnly: 2,\n  sendReceive: 3\n};\n/** mediaState types */\nexports.mediaState = {\n  active: 0,\n  inactive: 1,\n  unknownFutureValue: 2\n};\n/** meetingAudience types */\nexports.meetingAudience = {\n  everyone: 0,\n  organization: 1,\n  unknownFutureValue: 2\n};\n/** meetingChatHistoryDefaultMode types */\nexports.meetingChatHistoryDefaultMode = {\n  none: 0,\n  all: 1,\n  unknownFutureValue: 2\n};\n/** modality types */\nexports.modality = {\n  audio: 0,\n  video: 1,\n  videoBasedScreenSharing: 2,\n  data: 3,\n  screenSharing: 4,\n  unknownFutureValue: 5\n};\n/** onlineMeetingContentSharingDisabledReason types */\nexports.onlineMeetingContentSharingDisabledReason = {\n  watermarkProtection: 1,\n  unknownFutureValue: 2\n};\n/** onlineMeetingRole types */\nexports.onlineMeetingRole = {\n  attendee: 0,\n  presenter: 1,\n  unknownFutureValue: 2,\n  producer: 3,\n  coorganizer: 4\n};\n/** onlineMeetingVideoDisabledReason types */\nexports.onlineMeetingVideoDisabledReason = {\n  watermarkProtection: 1,\n  unknownFutureValue: 2\n};\n/** recordingStatus types */\nexports.recordingStatus = {\n  unknown: 0,\n  notRecording: 1,\n  recording: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** rejectReason types */\nexports.rejectReason = {\n  none: 0,\n  busy: 1,\n  forbidden: 2,\n  unknownFutureValue: 3\n};\n/** routingMode types */\nexports.routingMode = {\n  oneToOne: 0,\n  multicast: 1,\n  unknownFutureValue: 2\n};\n/** routingType types */\nexports.routingType = {\n  forwarded: 0,\n  lookup: 1,\n  selfFork: 2,\n  unknownFutureValue: 3\n};\n/** screenSharingRole types */\nexports.screenSharingRole = {\n  viewer: 0,\n  sharer: 1\n};\n/** sendDtmfCompletionReason types */\nexports.sendDtmfCompletionReason = {\n  unknown: 0,\n  completedSuccessfully: 1,\n  mediaOperationCanceled: 2,\n  unknownFutureValue: 3\n};\n/** tone types */\nexports.tone = {\n  tone0: 0,\n  tone1: 1,\n  tone2: 2,\n  tone3: 3,\n  tone4: 4,\n  tone5: 5,\n  tone6: 6,\n  tone7: 7,\n  tone8: 8,\n  tone9: 9,\n  star: 10,\n  pound: 11,\n  a: 12,\n  b: 13,\n  c: 14,\n  d: 15,\n  flash: 16\n};\n/** virtualEventAttendeeRegistrationStatus types */\nexports.virtualEventAttendeeRegistrationStatus = {\n  registered: 0,\n  canceled: 1,\n  waitlisted: 2,\n  pendingApproval: 3,\n  rejectedByOrganizer: 4,\n  unknownFutureValue: 11\n};\n/** virtualEventRegistrationPredefinedQuestionLabel types */\nexports.virtualEventRegistrationPredefinedQuestionLabel = {\n  street: 0,\n  city: 1,\n  state: 2,\n  postalCode: 3,\n  countryOrRegion: 4,\n  industry: 5,\n  jobTitle: 6,\n  organization: 7,\n  unknownFutureValue: 8\n};\n/** virtualEventRegistrationQuestionAnswerInputType types */\nexports.virtualEventRegistrationQuestionAnswerInputType = {\n  text: 0,\n  multilineText: 1,\n  singleChoice: 2,\n  multiChoice: 3,\n  "boolean": 4,\n  unknownFutureValue: 5\n};\n/** virtualEventStatus types */\nexports.virtualEventStatus = {\n  draft: 0,\n  published: 1,\n  canceled: 2,\n  unknownFutureValue: 3\n};\n/** attestationLevel types */\nexports.attestationLevel = {\n  attested: 0,\n  notAttested: 1,\n  unknownFutureValue: 2\n};\n/** authenticationMethodKeyStrength types */\nexports.authenticationMethodKeyStrength = {\n  normal: 0,\n  weak: 1,\n  unknown: 2\n};\n/** authenticationMethodSignInState types */\nexports.authenticationMethodSignInState = {\n  notSupported: 0,\n  notAllowedByPolicy: 1,\n  notEnabled: 2,\n  phoneNumberNotUnique: 3,\n  ready: 4,\n  notConfigured: 5,\n  unknownFutureValue: 6\n};\n/** authenticationPhoneType types */\nexports.authenticationPhoneType = {\n  mobile: 0,\n  alternateMobile: 1,\n  office: 2,\n  unknownFutureValue: 3\n};\n/** lifecycleEventType types */\nexports.lifecycleEventType = {\n  missed: 0,\n  subscriptionRemoved: 1,\n  reauthorizationRequired: 2\n};\n/** binaryOperator types */\nexports.binaryOperator = {\n  or: 0,\n  and: 1\n};\n/** callRecordingStatus types */\nexports.callRecordingStatus = {\n  success: 0,\n  failure: 1,\n  initial: 2,\n  chunkFinished: 3,\n  unknownFutureValue: 4\n};\n/** channelMembershipType types */\nexports.channelMembershipType = {\n  standard: 0,\n  "private": 1,\n  unknownFutureValue: 2,\n  shared: 3\n};\n/** chatMessageActions types */\nexports.chatMessageActions = {\n  reactionAdded: 1,\n  reactionRemoved: 2,\n  actionUndefined: 4,\n  unknownFutureValue: 8\n};\n/** chatMessageImportance types */\nexports.chatMessageImportance = {\n  normal: 0,\n  high: 1,\n  urgent: 2,\n  unknownFutureValue: 3\n};\n/** chatMessagePolicyViolationDlpActionTypes types */\nexports.chatMessagePolicyViolationDlpActionTypes = {\n  none: 0,\n  notifySender: 1,\n  blockAccess: 2,\n  blockAccessExternal: 4\n};\n/** chatMessagePolicyViolationUserActionTypes types */\nexports.chatMessagePolicyViolationUserActionTypes = {\n  none: 0,\n  override: 1,\n  reportFalsePositive: 2\n};\n/** chatMessagePolicyViolationVerdictDetailsTypes types */\nexports.chatMessagePolicyViolationVerdictDetailsTypes = {\n  none: 0,\n  allowFalsePositiveOverride: 1,\n  allowOverrideWithoutJustification: 2,\n  allowOverrideWithJustification: 4\n};\n/** chatMessageType types */\nexports.chatMessageType = {\n  message: 0,\n  chatEvent: 1,\n  typing: 2,\n  unknownFutureValue: 3,\n  systemEventMessage: 4\n};\n/** chatType types */\nexports.chatType = {\n  oneOnOne: 0,\n  group: 1,\n  meeting: 2,\n  unknownFutureValue: 3\n};\n/** clonableTeamParts types */\nexports.clonableTeamParts = {\n  apps: 1,\n  tabs: 2,\n  settings: 4,\n  channels: 8,\n  members: 16\n};\n/** giphyRatingType types */\nexports.giphyRatingType = {\n  strict: 0,\n  moderate: 1,\n  unknownFutureValue: 2\n};\n/** teamsAppDistributionMethod types */\nexports.teamsAppDistributionMethod = {\n  store: 0,\n  organization: 1,\n  sideloaded: 2,\n  unknownFutureValue: 3\n};\n/** teamsAppPublishingState types */\nexports.teamsAppPublishingState = {\n  submitted: 0,\n  rejected: 1,\n  published: 2,\n  unknownFutureValue: 3\n};\n/** teamsAppResourceSpecificPermissionType types */\nexports.teamsAppResourceSpecificPermissionType = {\n  delegated: 0,\n  application: 1,\n  unknownFutureValue: 2\n};\n/** teamsAsyncOperationStatus types */\nexports.teamsAsyncOperationStatus = {\n  invalid: 0,\n  notStarted: 1,\n  inProgress: 2,\n  succeeded: 3,\n  failed: 4,\n  unknownFutureValue: 5\n};\n/** teamsAsyncOperationType types */\nexports.teamsAsyncOperationType = {\n  invalid: 0,\n  cloneTeam: 1,\n  archiveTeam: 2,\n  unarchiveTeam: 3,\n  createTeam: 4,\n  unknownFutureValue: 5,\n  teamifyGroup: 6,\n  createChannel: 7,\n  archiveChannel: 8,\n  unarchiveChannel: 9\n};\n/** teamSpecialization types */\nexports.teamSpecialization = {\n  none: 0,\n  educationStandard: 1,\n  educationClass: 2,\n  educationProfessionalLearningCommunity: 3,\n  educationStaff: 4,\n  healthcareStandard: 5,\n  healthcareCareCoordination: 6,\n  unknownFutureValue: 7\n};\n/** teamVisibilityType types */\nexports.teamVisibilityType = {\n  "private": 0,\n  "public": 1,\n  hiddenMembership: 2,\n  unknownFutureValue: 3\n};\n/** teamworkActivityTopicSource types */\nexports.teamworkActivityTopicSource = {\n  entityUrl: 0,\n  text: 1\n};\n/** teamworkApplicationIdentityType types */\nexports.teamworkApplicationIdentityType = {\n  aadApplication: 0,\n  bot: 1,\n  tenantBot: 2,\n  office365Connector: 3,\n  outgoingWebhook: 4,\n  unknownFutureValue: 5\n};\n/** teamworkCallEventType types */\nexports.teamworkCallEventType = {\n  call: 0,\n  meeting: 1,\n  screenShare: 2,\n  unknownFutureValue: 3\n};\n/** teamworkConversationIdentityType types */\nexports.teamworkConversationIdentityType = {\n  team: 0,\n  channel: 1,\n  chat: 2,\n  unknownFutureValue: 3\n};\n/** teamworkTagType types */\nexports.teamworkTagType = {\n  standard: 0,\n  unknownFutureValue: 1\n};\n/** teamworkUserIdentityType types */\nexports.teamworkUserIdentityType = {\n  aadUser: 0,\n  onPremiseAadUser: 1,\n  anonymousGuest: 2,\n  federatedUser: 3,\n  personalMicrosoftAccountUser: 4,\n  skypeUser: 5,\n  phoneUser: 6,\n  unknownFutureValue: 7,\n  emailUser: 8\n};\n/** scheduleChangeRequestActor types */\nexports.scheduleChangeRequestActor = {\n  sender: 0,\n  recipient: 1,\n  manager: 2,\n  system: 3,\n  unknownFutureValue: 4\n};\n/** scheduleChangeState types */\nexports.scheduleChangeState = {\n  pending: 0,\n  approved: 1,\n  declined: 2,\n  unknownFutureValue: 3\n};\n/** scheduleEntityTheme types */\nexports.scheduleEntityTheme = {\n  white: 0,\n  blue: 1,\n  green: 2,\n  purple: 3,\n  pink: 4,\n  yellow: 5,\n  gray: 6,\n  darkBlue: 7,\n  darkGreen: 8,\n  darkPurple: 9,\n  darkPink: 10,\n  darkYellow: 11,\n  unknownFutureValue: 12\n};\n/** timeOffReasonIconType types */\nexports.timeOffReasonIconType = {\n  none: 0,\n  car: 1,\n  calendar: 2,\n  running: 3,\n  plane: 4,\n  firstAid: 5,\n  doctor: 6,\n  notWorking: 7,\n  clock: 8,\n  juryDuty: 9,\n  globe: 10,\n  cup: 11,\n  phone: 12,\n  weather: 13,\n  umbrella: 14,\n  piggyBank: 15,\n  dog: 16,\n  cake: 17,\n  trafficCone: 18,\n  pin: 19,\n  sunny: 20,\n  unknownFutureValue: 21\n};\n/** workforceIntegrationEncryptionProtocol types */\nexports.workforceIntegrationEncryptionProtocol = {\n  sharedSecret: 0,\n  unknownFutureValue: 1\n};\n/** workforceIntegrationSupportedEntities types */\nexports.workforceIntegrationSupportedEntities = {\n  none: 0,\n  shift: 1,\n  swapRequest: 2,\n  userShiftPreferences: 8,\n  openShift: 16,\n  openShiftRequest: 32,\n  offerShiftRequest: 64,\n  unknownFutureValue: 1024\n};\n/** mailDestinationRoutingReason types */\nexports.mailDestinationRoutingReason = {\n  none: 0,\n  mailFlowRule: 1,\n  safeSender: 2,\n  blockedSender: 3,\n  advancedSpamFiltering: 4,\n  domainAllowList: 5,\n  domainBlockList: 6,\n  notInAddressBook: 7,\n  firstTimeSender: 8,\n  autoPurgeToInbox: 9,\n  autoPurgeToJunk: 10,\n  autoPurgeToDeleted: 11,\n  outbound: 12,\n  notJunk: 13,\n  junk: 14,\n  unknownFutureValue: 15\n};\n/** threatAssessmentContentType types */\nexports.threatAssessmentContentType = {\n  mail: 1,\n  url: 2,\n  file: 3\n};\n/** threatAssessmentRequestSource types */\nexports.threatAssessmentRequestSource = {\n  undefined: 0,\n  user: 1,\n  administrator: 2\n};\n/** threatAssessmentResultType types */\nexports.threatAssessmentResultType = {\n  checkPolicy: 1,\n  rescan: 2,\n  unknownFutureValue: 3\n};\n/** threatAssessmentStatus types */\nexports.threatAssessmentStatus = {\n  pending: 1,\n  completed: 2\n};\n/** threatCategory types */\nexports.threatCategory = {\n  undefined: 0,\n  spam: 1,\n  phishing: 2,\n  malware: 3,\n  unknownFutureValue: 4\n};\n/** threatExpectedAssessment types */\nexports.threatExpectedAssessment = {\n  block: 1,\n  unblock: 2\n};\n/** taskStatus types */\nexports.taskStatus = {\n  notStarted: 0,\n  inProgress: 1,\n  completed: 2,\n  waitingOnOthers: 3,\n  deferred: 4\n};\n/** wellknownListName types */\nexports.wellknownListName = {\n  none: 0,\n  defaultList: 1,\n  flaggedEmails: 2,\n  unknownFutureValue: 3\n};\n/** communityPrivacy types */\nexports.communityPrivacy = {\n  "public": 0,\n  "private": 1,\n  unknownFutureValue: 2\n};\n/** engagementAsyncOperationType types */\nexports.engagementAsyncOperationType = {\n  createCommunity: 0,\n  unknownFutureValue: 1\n};\n/** assignmentType types */\nexports.assignmentType = {\n  required: 0,\n  recommended: 1,\n  unknownFutureValue: 2,\n  peerRecommended: 3\n};\n/** courseStatus types */\nexports.courseStatus = {\n  notStarted: 0,\n  inProgress: 1,\n  completed: 2,\n  unknownFutureValue: 3\n};\n/** level types */\nexports.level = {\n  beginner: 0,\n  intermediate: 1,\n  advanced: 2,\n  unknownFutureValue: 3\n};\n/** additionalDataOptions types */\nexports.additionalDataOptions = {\n  allVersions: 1,\n  linkedFiles: 2,\n  unknownFutureValue: 4\n};\n/** additionalOptions types */\nexports.additionalOptions = {\n  none: 0,\n  teamsAndYammerConversations: 1,\n  cloudAttachments: 2,\n  allDocumentVersions: 4,\n  subfolderContents: 8,\n  listAttachments: 16,\n  unknownFutureValue: 32\n};\n/** caseAction types */\nexports.caseAction = {\n  contentExport: 0,\n  applyTags: 1,\n  convertToPdf: 2,\n  index: 3,\n  estimateStatistics: 4,\n  addToReviewSet: 5,\n  holdUpdate: 6,\n  unknownFutureValue: 7,\n  purgeData: 8,\n  exportReport: 9,\n  exportResult: 10\n};\n/** caseOperationStatus types */\nexports.caseOperationStatus = {\n  notStarted: 0,\n  submissionFailed: 1,\n  running: 2,\n  succeeded: 3,\n  partiallySucceeded: 4,\n  failed: 5,\n  unknownFutureValue: 6\n};\n/** caseStatus types */\nexports.caseStatus = {\n  unknown: 0,\n  active: 1,\n  pendingDelete: 2,\n  closing: 3,\n  closed: 4,\n  closedWithError: 5,\n  unknownFutureValue: 6\n};\n/** childSelectability types */\nexports.childSelectability = {\n  One: 0,\n  Many: 1,\n  unknownFutureValue: 2\n};\n/** dataSourceContainerStatus types */\nexports.dataSourceContainerStatus = {\n  active: 1,\n  released: 2,\n  unknownFutureValue: 3\n};\n/** dataSourceHoldStatus types */\nexports.dataSourceHoldStatus = {\n  notApplied: 1,\n  applied: 2,\n  applying: 3,\n  removing: 4,\n  partial: 5,\n  unknownFutureValue: 6\n};\n/** dataSourceScopes types */\nexports.dataSourceScopes = {\n  none: 0,\n  allTenantMailboxes: 1,\n  allTenantSites: 2,\n  allCaseCustodians: 4,\n  allCaseNoncustodialDataSources: 8,\n  unknownFutureValue: 16\n};\n/** exportCriteria types */\nexports.exportCriteria = {\n  searchHits: 1,\n  partiallyIndexed: 2,\n  unknownFutureValue: 4\n};\n/** exportFileStructure types */\nexports.exportFileStructure = {\n  none: 0,\n  directory: 1,\n  pst: 2,\n  unknownFutureValue: 3\n};\n/** exportFormat types */\nexports.exportFormat = {\n  pst: 0,\n  msg: 1,\n  eml: 2,\n  unknownFutureValue: 3\n};\n/** exportLocation types */\nexports.exportLocation = {\n  responsiveLocations: 1,\n  nonresponsiveLocations: 2,\n  unknownFutureValue: 4\n};\n/** exportOptions types */\nexports.exportOptions = {\n  originalFiles: 1,\n  text: 2,\n  pdfReplacement: 4,\n  tags: 16,\n  unknownFutureValue: 32\n};\n/** purgeAreas types */\nexports.purgeAreas = {\n  mailboxes: 1,\n  teamsMessages: 2,\n  unknownFutureValue: 4\n};\n/** purgeType types */\nexports.purgeType = {\n  recoverable: 0,\n  unknownFutureValue: 1,\n  permanentlyDelete: 2\n};\n/** sourceType types */\nexports.sourceType = {\n  mailbox: 1,\n  site: 2,\n  unknownFutureValue: 4\n};\n/** deploymentStatus types */\nexports.deploymentStatus = {\n  upToDate: 1,\n  outdated: 2,\n  updating: 3,\n  updateFailed: 4,\n  notConfigured: 5,\n  unreachable: 6,\n  disconnected: 7,\n  startFailure: 8,\n  syncing: 9,\n  unknownFutureValue: 10\n};\n/** healthIssueSeverity types */\nexports.healthIssueSeverity = {\n  low: 1,\n  medium: 2,\n  high: 3,\n  unknownFutureValue: 4\n};\n/** healthIssueStatus types */\nexports.healthIssueStatus = {\n  open: 1,\n  closed: 2,\n  suppressed: 3,\n  unknownFutureValue: 4\n};\n/** healthIssueType types */\nexports.healthIssueType = {\n  sensor: 1,\n  global: 2,\n  unknownFutureValue: 3\n};\n/** sensorHealthStatus types */\nexports.sensorHealthStatus = {\n  healthy: 1,\n  notHealthyLow: 2,\n  notHealthyMedium: 3,\n  notHealthyHigh: 4,\n  unknownFutureValue: 5\n};\n/** sensorType types */\nexports.sensorType = {\n  adConnectIntegrated: 1,\n  adcsIntegrated: 2,\n  adfsIntegrated: 3,\n  domainControllerIntegrated: 4,\n  domainControllerStandalone: 5,\n  unknownFutureValue: 6\n};\n/** behaviorDuringRetentionPeriod types */\nexports.behaviorDuringRetentionPeriod = {\n  doNotRetain: 0,\n  retain: 1,\n  retainAsRecord: 2,\n  retainAsRegulatoryRecord: 3,\n  unknownFutureValue: 4\n};\n/** alertClassification types */\nexports.alertClassification = {\n  unknown: 0,\n  falsePositive: 10,\n  truePositive: 20,\n  informationalExpectedActivity: 30,\n  unknownFutureValue: 39\n};\n/** alertDetermination types */\nexports.alertDetermination = {\n  unknown: 0,\n  apt: 10,\n  malware: 20,\n  securityPersonnel: 30,\n  securityTesting: 40,\n  unwantedSoftware: 50,\n  other: 60,\n  multiStagedAttack: 70,\n  compromisedAccount: 80,\n  phishing: 90,\n  maliciousUserActivity: 100,\n  notMalicious: 110,\n  notEnoughDataToValidate: 120,\n  confirmedActivity: 130,\n  lineOfBusinessApplication: 140,\n  unknownFutureValue: 149\n};\n/** containerPortProtocol types */\nexports.containerPortProtocol = {\n  udp: 0,\n  tcp: 1,\n  sctp: 2,\n  unknownFutureValue: 3\n};\n/** defenderAvStatus types */\nexports.defenderAvStatus = {\n  notReporting: 0,\n  disabled: 1,\n  notUpdated: 2,\n  updated: 3,\n  unknown: 4,\n  notSupported: 1000,\n  unknownFutureValue: 1023\n};\n/** detectionSource types */\nexports.detectionSource = {\n  unknown: 0,\n  microsoftDefenderForEndpoint: 1,\n  antivirus: 2,\n  smartScreen: 4,\n  customTi: 8,\n  microsoftDefenderForOffice365: 512,\n  automatedInvestigation: 1024,\n  microsoftThreatExperts: 2048,\n  customDetection: 4096,\n  microsoftDefenderForIdentity: 8192,\n  cloudAppSecurity: 16384,\n  microsoft365Defender: 32768,\n  azureAdIdentityProtection: 65536,\n  manual: 262144,\n  microsoftDataLossPrevention: 524288,\n  appGovernancePolicy: 1048576,\n  appGovernanceDetection: 2097152,\n  unknownFutureValue: 4194303,\n  microsoftDefenderForCloud: 4194304,\n  microsoftDefenderForIoT: 1073741833,\n  microsoftDefenderForServers: 1073741834,\n  microsoftDefenderForStorage: 1073741835,\n  microsoftDefenderForDNS: 1073741836,\n  microsoftDefenderForDatabases: 1073741837,\n  microsoftDefenderForContainers: 1073741838,\n  microsoftDefenderForNetwork: 1073741839,\n  microsoftDefenderForAppService: 1073741840,\n  microsoftDefenderForKeyVault: 1073741841,\n  microsoftDefenderForResourceManager: 1073741842,\n  microsoftDefenderForApiManagement: 1073741843,\n  nrtAlerts: 1073741844,\n  scheduledAlerts: 1073741845,\n  microsoftDefenderThreatIntelligenceAnalytics: 1073741846,\n  builtInMl: 1073741847,\n  microsoftInsiderRiskManagement: 1073741848,\n  microsoftSentinel: 268435456\n};\n/** detectionStatus types */\nexports.detectionStatus = {\n  detected: 0,\n  blocked: 1,\n  prevented: 2,\n  unknownFutureValue: 31\n};\n/** deviceHealthStatus types */\nexports.deviceHealthStatus = {\n  active: 0,\n  inactive: 1,\n  impairedCommunication: 2,\n  noSensorData: 3,\n  noSensorDataImpairedCommunication: 4,\n  unknown: 5,\n  unknownFutureValue: 31\n};\n/** deviceRiskScore types */\nexports.deviceRiskScore = {\n  none: 0,\n  informational: 5,\n  low: 10,\n  medium: 20,\n  high: 30,\n  unknownFutureValue: 31\n};\n/** evidenceRemediationStatus types */\nexports.evidenceRemediationStatus = {\n  none: 0,\n  remediated: 1,\n  prevented: 2,\n  blocked: 3,\n  notFound: 4,\n  unknownFutureValue: 5,\n  active: 6,\n  pendingApproval: 7,\n  declined: 8,\n  unremediated: 9,\n  running: 10,\n  partiallyRemediated: 11\n};\n/** evidenceRole types */\nexports.evidenceRole = {\n  unknown: 0,\n  contextual: 1,\n  scanned: 2,\n  source: 3,\n  destination: 4,\n  created: 5,\n  added: 6,\n  compromised: 7,\n  edited: 8,\n  attacked: 9,\n  attacker: 10,\n  commandAndControl: 11,\n  loaded: 12,\n  suspicious: 13,\n  policyViolator: 14,\n  unknownFutureValue: 31\n};\n/** evidenceVerdict types */\nexports.evidenceVerdict = {\n  unknown: 0,\n  suspicious: 1,\n  malicious: 2,\n  noThreatsFound: 3,\n  unknownFutureValue: 4\n};\n/** fileHashAlgorithm types */\nexports.fileHashAlgorithm = {\n  unknown: 0,\n  md5: 1,\n  sha1: 2,\n  sha256: 3,\n  sha256ac: 4,\n  unknownFutureValue: 5\n};\n/** googleCloudLocationType types */\nexports.googleCloudLocationType = {\n  unknown: 0,\n  regional: 1,\n  zonal: 2,\n  global: 3,\n  unknownFutureValue: 31\n};\n/** incidentStatus types */\nexports.incidentStatus = {\n  active: 1,\n  resolved: 2,\n  inProgress: 4,\n  redirected: 64,\n  unknownFutureValue: 127,\n  awaitingAction: 128\n};\n/** ioTDeviceImportanceType types */\nexports.ioTDeviceImportanceType = {\n  unknown: 0,\n  low: 1,\n  normal: 2,\n  high: 3,\n  unknownFutureValue: 4\n};\n/** kubernetesPlatform types */\nexports.kubernetesPlatform = {\n  unknown: 0,\n  aks: 1,\n  eks: 2,\n  gke: 3,\n  arc: 4,\n  unknownFutureValue: 5\n};\n/** kubernetesServiceType types */\nexports.kubernetesServiceType = {\n  unknown: 0,\n  clusterIP: 1,\n  externalName: 2,\n  nodePort: 3,\n  loadBalancer: 4,\n  unknownFutureValue: 31\n};\n/** mailboxConfigurationType types */\nexports.mailboxConfigurationType = {\n  mailForwardingRule: 0,\n  owaSettings: 1,\n  ewsSettings: 2,\n  mailDelegation: 3,\n  userInboxRule: 4,\n  unknownFutureValue: 31\n};\n/** onboardingStatus types */\nexports.onboardingStatus = {\n  insufficientInfo: 0,\n  onboarded: 1,\n  canBeOnboarded: 2,\n  unsupported: 3,\n  unknownFutureValue: 31\n};\n/** protocolType types */\nexports.protocolType = {\n  tcp: 0,\n  udp: 1,\n  unknownFutureValue: 2\n};\n/** servicePrincipalType types */\nexports.servicePrincipalType = {\n  unknown: 0,\n  application: 1,\n  managedIdentity: 2,\n  legacy: 3,\n  unknownFutureValue: 4\n};\n/** serviceSource types */\nexports.serviceSource = {\n  unknown: 0,\n  microsoftDefenderForEndpoint: 1,\n  microsoftDefenderForIdentity: 2,\n  microsoftDefenderForCloudApps: 4,\n  microsoftDefenderForOffice365: 8,\n  microsoft365Defender: 16,\n  azureAdIdentityProtection: 32,\n  microsoftAppGovernance: 64,\n  dataLossPrevention: 128,\n  unknownFutureValue: 255,\n  microsoftDefenderForCloud: 256,\n  microsoftSentinel: 512,\n  microsoftInsiderRiskManagement: 1024\n};\n/** vmCloudProvider types */\nexports.vmCloudProvider = {\n  unknown: 0,\n  azure: 1,\n  unknownFutureValue: 15\n};\n/** actionAfterRetentionPeriod types */\nexports.actionAfterRetentionPeriod = {\n  none: 0,\n  "delete": 1,\n  startDispositionReview: 2,\n  relabel: 3,\n  unknownFutureValue: 4\n};\n/** defaultRecordBehavior types */\nexports.defaultRecordBehavior = {\n  startLocked: 0,\n  startUnlocked: 1,\n  unknownFutureValue: 2\n};\n/** eventPropagationStatus types */\nexports.eventPropagationStatus = {\n  none: 0,\n  inProcessing: 1,\n  failed: 2,\n  success: 3,\n  unknownFutureValue: 4\n};\n/** eventStatusType types */\nexports.eventStatusType = {\n  pending: 0,\n  error: 1,\n  success: 2,\n  notAvaliable: 3,\n  unknownFutureValue: 4\n};\n/** queryType types */\nexports.queryType = {\n  files: 0,\n  messages: 1,\n  unknownFutureValue: 2\n};\n/** retentionTrigger types */\nexports.retentionTrigger = {\n  dateLabeled: 0,\n  dateCreated: 1,\n  dateModified: 2,\n  dateOfEvent: 3,\n  unknownFutureValue: 4\n};\n/** contentFormat types */\nexports.contentFormat = {\n  text: 0,\n  html: 1,\n  markdown: 2,\n  unknownFutureValue: 3\n};\n/** hostPortProtocol types */\nexports.hostPortProtocol = {\n  tcp: 0,\n  udp: 1,\n  unknownFutureValue: 2\n};\n/** hostPortStatus types */\nexports.hostPortStatus = {\n  open: 0,\n  filtered: 1,\n  closed: 2,\n  unknownFutureValue: 3\n};\n/** hostReputationClassification types */\nexports.hostReputationClassification = {\n  unknown: 0,\n  neutral: 1,\n  suspicious: 2,\n  malicious: 3,\n  unknownFutureValue: 4\n};\n/** hostReputationRuleSeverity types */\nexports.hostReputationRuleSeverity = {\n  unknown: 0,\n  low: 1,\n  medium: 2,\n  high: 3,\n  unknownFutureValue: 4\n};\n/** indicatorSource types */\nexports.indicatorSource = {\n  microsoft: 0,\n  osint: 1,\n  "public": 2,\n  unknownFutureValue: 3\n};\n/** intelligenceProfileKind types */\nexports.intelligenceProfileKind = {\n  actor: 0,\n  tool: 1,\n  unknownFutureValue: 2\n};\n/** vulnerabilitySeverity types */\nexports.vulnerabilitySeverity = {\n  none: 0,\n  low: 1,\n  medium: 2,\n  high: 3,\n  critical: 4,\n  unknownFutureValue: 5\n};\n/** whoisDomainStatus types */\nexports.whoisDomainStatus = {\n  clientDeleteProhibited: 0,\n  clientHold: 1,\n  clientRenewProhibited: 2,\n  clientTransferProhibited: 3,\n  clientUpdateProhibited: 4,\n  unknownFutureValue: 5\n};\n/** relationType types */\nexports.relationType = {\n  pin: 0,\n  reuse: 1,\n  unknownFutureValue: 2\n};\n/** termGroupScope types */\nexports.termGroupScope = {\n  global: 0,\n  system: 1,\n  siteCollection: 2,\n  unknownFutureValue: 3\n};\n/** audioCodec types */\nexports.audioCodec = {\n  unknown: 0,\n  invalid: 1,\n  cn: 2,\n  pcma: 3,\n  pcmu: 4,\n  amrWide: 5,\n  g722: 6,\n  g7221: 7,\n  g7221c: 8,\n  g729: 9,\n  multiChannelAudio: 10,\n  muchv2: 11,\n  opus: 12,\n  satin: 13,\n  satinFullband: 14,\n  rtAudio8: 15,\n  rtAudio16: 16,\n  silk: 17,\n  silkNarrow: 18,\n  silkWide: 19,\n  siren: 20,\n  xmsRta: 21,\n  unknownFutureValue: 22\n};\n/** callType types */\nexports.callType = {\n  unknown: 0,\n  groupCall: 1,\n  peerToPeer: 2,\n  unknownFutureValue: 3\n};\n/** clientPlatform types */\nexports.clientPlatform = {\n  unknown: 0,\n  windows: 1,\n  macOS: 2,\n  iOS: 3,\n  android: 4,\n  web: 5,\n  ipPhone: 6,\n  roomSystem: 7,\n  surfaceHub: 8,\n  holoLens: 9,\n  unknownFutureValue: 10\n};\n/** failureStage types */\nexports.failureStage = {\n  unknown: 0,\n  callSetup: 1,\n  midcall: 2,\n  unknownFutureValue: 3\n};\n/** mediaStreamDirection types */\nexports.mediaStreamDirection = {\n  callerToCallee: 0,\n  calleeToCaller: 1\n};\n/** networkConnectionType types */\nexports.networkConnectionType = {\n  unknown: 0,\n  wired: 1,\n  wifi: 2,\n  mobile: 3,\n  tunnel: 4,\n  unknownFutureValue: 5\n};\n/** networkTransportProtocol types */\nexports.networkTransportProtocol = {\n  unknown: 0,\n  udp: 1,\n  tcp: 2,\n  unknownFutureValue: 3\n};\n/** productFamily types */\nexports.productFamily = {\n  unknown: 0,\n  teams: 1,\n  skypeForBusiness: 2,\n  lync: 3,\n  unknownFutureValue: 4,\n  azureCommunicationServices: 5\n};\n/** pstnCallDurationSource types */\nexports.pstnCallDurationSource = {\n  microsoft: 0,\n  operator: 1\n};\n/** serviceRole types */\nexports.serviceRole = {\n  unknown: 0,\n  customBot: 1,\n  skypeForBusinessMicrosoftTeamsGateway: 2,\n  skypeForBusinessAudioVideoMcu: 3,\n  skypeForBusinessApplicationSharingMcu: 4,\n  skypeForBusinessCallQueues: 5,\n  skypeForBusinessAutoAttendant: 6,\n  mediationServer: 7,\n  mediationServerCloudConnectorEdition: 8,\n  exchangeUnifiedMessagingService: 9,\n  mediaController: 10,\n  conferencingAnnouncementService: 11,\n  conferencingAttendant: 12,\n  audioTeleconferencerController: 13,\n  skypeForBusinessUnifiedCommunicationApplicationPlatform: 14,\n  responseGroupServiceAnnouncementService: 15,\n  gateway: 16,\n  skypeTranslator: 17,\n  skypeForBusinessAttendant: 18,\n  responseGroupService: 19,\n  voicemail: 20,\n  unknownFutureValue: 21\n};\n/** userFeedbackRating types */\nexports.userFeedbackRating = {\n  notRated: 0,\n  bad: 1,\n  poor: 2,\n  fair: 3,\n  good: 4,\n  excellent: 5,\n  unknownFutureValue: 6\n};\n/** videoCodec types */\nexports.videoCodec = {\n  unknown: 0,\n  invalid: 1,\n  av1: 2,\n  h263: 3,\n  h264: 4,\n  h264s: 5,\n  h264uc: 6,\n  h265: 7,\n  rtvc1: 8,\n  rtVideo: 9,\n  xrtvc1: 10,\n  unknownFutureValue: 11\n};\n/** wifiBand types */\nexports.wifiBand = {\n  unknown: 0,\n  frequency24GHz: 1,\n  frequency50GHz: 2,\n  frequency60GHz: 3,\n  unknownFutureValue: 4\n};\n/** wifiRadioType types */\nexports.wifiRadioType = {\n  unknown: 0,\n  wifi80211a: 1,\n  wifi80211b: 2,\n  wifi80211g: 3,\n  wifi80211n: 4,\n  wifi80211ac: 5,\n  wifi80211ax: 6,\n  unknownFutureValue: 7\n};\n/** attributeSet types */\nexports.attributeSet = {\n  full: 1,\n  basic: 2,\n  unknownFutureValue: 3\n};\n/** billingPeriod types */\nexports.billingPeriod = {\n  current: 1,\n  last: 2,\n  unknownFutureValue: 3\n};\n/** answerState types */\nexports.answerState = {\n  published: 0,\n  draft: 1,\n  excluded: 2,\n  unknownFutureValue: 3\n};\n/** accessType types */\nexports.accessType = {\n  grant: 1,\n  deny: 2,\n  unknownFutureValue: 3\n};\n/** aclType types */\nexports.aclType = {\n  user: 1,\n  group: 2,\n  everyone: 3,\n  everyoneExceptGuests: 4,\n  externalGroup: 5,\n  unknownFutureValue: 6\n};\n/** connectionOperationStatus types */\nexports.connectionOperationStatus = {\n  unspecified: 0,\n  inprogress: 1,\n  completed: 2,\n  failed: 3,\n  unknownFutureValue: 4\n};\n/** connectionState types */\nexports.connectionState = {\n  draft: 1,\n  ready: 2,\n  obsolete: 3,\n  limitExceeded: 4,\n  unknownFutureValue: 5\n};\n/** externalActivityType types */\nexports.externalActivityType = {\n  viewed: 1,\n  modified: 2,\n  created: 3,\n  commented: 4,\n  unknownFutureValue: 5\n};\n/** externalItemContentType types */\nexports.externalItemContentType = {\n  text: 1,\n  html: 2,\n  unknownFutureValue: 3\n};\n/** identityType types */\nexports.identityType = {\n  user: 1,\n  group: 2,\n  externalGroup: 3,\n  unknownFutureValue: 4\n};\n/** label types */\nexports.label = {\n  title: 0,\n  url: 1,\n  createdBy: 2,\n  lastModifiedBy: 3,\n  authors: 4,\n  createdDateTime: 5,\n  lastModifiedDateTime: 6,\n  fileName: 7,\n  fileExtension: 8,\n  unknownFutureValue: 12,\n  iconUrl: 15\n};\n/** propertyType types */\nexports.propertyType = {\n  string: 0,\n  int64: 1,\n  "double": 2,\n  dateTime: 3,\n  "boolean": 4,\n  stringCollection: 5,\n  int64Collection: 6,\n  doubleCollection: 7,\n  dateTimeCollection: 8,\n  unknownFutureValue: 9\n};\n/** ruleOperation types */\nexports.ruleOperation = {\n  "null": 0,\n  equals: 1,\n  notEquals: 2,\n  contains: 3,\n  notContains: 4,\n  lessThan: 5,\n  greaterThan: 6,\n  startsWith: 7,\n  unknownFutureValue: 8\n};\n\n//# sourceURL=webpack://gd-sprest/./build/sptypes/graphtypes.js?')},"./build/sptypes/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.SPTypes = exports.GraphTypes = void 0;\nvar GraphTypes = __webpack_require__(/*! ./graphtypes */ "./build/sptypes/graphtypes.js");\nexports.GraphTypes = GraphTypes;\nvar SPTypes = __webpack_require__(/*! ./sptypes */ "./build/sptypes/sptypes.js");\nexports.SPTypes = SPTypes;\n\n//# sourceURL=webpack://gd-sprest/./build/sptypes/index.js?')},"./build/sptypes/sptypes.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.WebTemplateType = exports.ViewType = exports.UserCustomActionRegistrationType = exports.URLZones = exports.UrlFormatType = exports.StatusPriColor = exports.SearchScope = exports.RoleType = exports.ReorderingRuleMatchType = exports.RenderListDataOptions = exports.RelationshipDeleteBehaviorType = exports.PropertyPaneType = exports.PrincipalTypes = exports.PrincipalSources = exports.PersonalSiteCapabilities = exports.PersonalizationScope = exports.PageType = exports.ModalDialogResult = exports.LocaleLCIDType = exports.ListTemplateType = exports.ListExperienceOptions = exports.FriendlyDateFormat = exports.FormDisplayMode = exports.FileTemplateType = exports.FileLevelType = exports.FieldUserSelectionType = exports.FieldType = exports.FieldResultType = exports.FieldNumberType = exports.FieldNoteType = exports.FieldIndexStatus = exports.EnvironmentType = exports.EventReceiverType = exports.EventReceiverSynchronizationType = exports.DraftVisibilityType = exports.DisplayMode = exports.DateFormat = exports.ControlMode = exports.CloudEnvironment = exports.ClientTemplatesUtility = exports.ClientSidePageLayout = exports.ChoiceFormatType = exports.CheckOutType = exports.CheckInType = exports.CalendarTypes = exports.BasePermissionTypes = void 0;\n/**\n * Base Permission Types\n */\nexports.BasePermissionTypes = {\n  EmptyMask: 0,\n  ViewListItems: 1,\n  AddListItems: 2,\n  EditListItems: 3,\n  DeleteListItems: 4,\n  ApproveItems: 5,\n  OpenItems: 6,\n  ViewVersions: 7,\n  DeleteVersions: 8,\n  CancelCheckout: 9,\n  ManagePersonalViews: 10,\n  ManageLists: 12,\n  ViewFormPages: 13,\n  AnonymousSearchAccessList: 14,\n  Open: 17,\n  ViewPages: 18,\n  AddAndCustomizePages: 19,\n  ApplyThemeAndBorder: 20,\n  ApplyStyleSheets: 21,\n  ViewUsageData: 22,\n  CreateSSCSite: 23,\n  ManageSubwebs: 24,\n  CreateGroups: 25,\n  ManagePermissions: 26,\n  BrowseDirectories: 27,\n  BrowseUserInfo: 28,\n  AddDelPrivateWebParts: 29,\n  UpdatePersonalWebParts: 30,\n  ManageWeb: 31,\n  AnonymousSearchAccessWebLists: 32,\n  UseClientIntegration: 37,\n  UseRemoteAPIs: 38,\n  ManageAlerts: 39,\n  CreateAlerts: 40,\n  EditMyUserInfo: 41,\n  EnumeratePermissions: 63,\n  FullMask: 65\n};\n/**\n * Calendar Types\n */\nexports.CalendarTypes = {\n  Gregorian: 1,\n  JapaneseEmperorEra: 3,\n  TaiwanCalendar: 4,\n  KoreanTangunEra: 5,\n  Hijri: 6,\n  Thai: 7,\n  HebrewLunar: 8,\n  GregorianMiddleEastFrench: 9,\n  GregorianArabic: 10,\n  GregorianTransliteratedEnglish: 11,\n  GregorianTransliteratedFrench: 12,\n  KoreanandJapaneseLunar: 14,\n  ChineseLunar: 15,\n  SakaEra: 16\n};\n/**\n * Check In Types\n */\nexports.CheckInType = {\n  MinorCheckIn: 0,\n  MajorCheckIn: 1,\n  OverwriteCheckIn: 2\n};\n/**\n * Check Out Types\n */\nexports.CheckOutType = {\n  Online: 0,\n  Offline: 1,\n  None: 2\n};\n/**\n * Choice Format Types\n */\nexports.ChoiceFormatType = {\n  Dropdown: 0,\n  RadioButtons: 1\n};\n/**\n * Client Side Templates\n */\nexports.ClientSidePageLayout = {\n  Article: "Article",\n  HeaderlessSearchResults: "HeaderlessSearchResults",\n  Home: "Home",\n  RepostPage: "RepostPage",\n  SingleWebPartAppPage: "SingleWebPartAppPage",\n  Spaces: "Spaces",\n  Topic: "Topic"\n};\n/**\n * Client Template Utility\n */\nexports.ClientTemplatesUtility = {\n  UserLookupDelimitString: ";#",\n  UserMultiValueDelimitString: ",#"\n};\n/**\n * Cloud Environments\n */\nexports.CloudEnvironment = {\n  China: "https://microsoftgraph.chinacloudapi.cn",\n  Default: "https://graph.microsoft.com",\n  Flow: "https://service.flow.microsoft.com/",\n  FlowAPI: "https://api.flow.microsoft.com/",\n  FlowChina: "https://service.powerautomate.cn/",\n  FlowChinaAPI: "https://api.powerautomate.cn/",\n  FlowDoD: "https://service.flow.appsplatform.us/",\n  FlowDoDAPI: "https://api.flow.appsplatform.us/",\n  FlowGov: "https://gov.service.flow.microsoft.us/",\n  FlowGovAPI: "https://gov.api.flow.microsoft.us/",\n  FlowHigh: "https://high.service.flow.microsoft.us/",\n  FlowHighAPI: "https://high.api.flow.microsoft.us/",\n  FlowUSNat: "https://service.flow.eaglex.ic.gov/",\n  FlowUSNatAPI: "https://api.flow.eaglex.ic.gov/",\n  FlowUSSec: "https://service.flow.microsoft.scloud/",\n  FlowUSSecAPI: "https://api.flow.microsoft.scloud/",\n  Office: "https://substrate.office.com",\n  USL4: "https://graph.microsoft.us",\n  USL5: "https://dod-graph.microsoft.us"\n};\n/**\n * Control Modes\n */\nexports.ControlMode = {\n  Invalid: 0,\n  Display: 1,\n  Edit: 2,\n  New: 3,\n  View: 4\n};\n/**\n * Date Format\n */\nexports.DateFormat = {\n  DateOnly: 0,\n  DateTime: 1\n};\n/**\n * Display Mode\n */\nexports.DisplayMode = {\n  Edit: 2,\n  Read: 1\n};\n/**\n * Draft Visibility Types\n */\nexports.DraftVisibilityType = {\n  Reader: 0,\n  Author: 1,\n  Approver: 2\n};\n/**\n * Event Receiver Synchronization Types\n */\nexports.EventReceiverSynchronizationType = {\n  Synchronization: 1,\n  Asynchronous: 2\n};\n/**\n * Event Receiver Types\n */\nexports.EventReceiverType = {\n  ItemAdding: 1,\n  ItemUpdating: 2,\n  ItemDeleting: 3,\n  ItemCheckingIn: 4,\n  ItemCheckingOut: 5,\n  ItemUncheckingOut: 6,\n  ItemAttachmentAdding: 7,\n  ItemAttachmentDeleting: 8,\n  ItemFileMoving: 9,\n  ItemVersionDeleting: 11,\n  FieldAdding: 101,\n  FieldUpdating: 102,\n  FieldDeleting: 103,\n  ListAdding: 104,\n  ListDeleting: 105,\n  SiteDeleting: 201,\n  WebDeleting: 202,\n  WebMoving: 203,\n  WebAdding: 204,\n  GroupAdding: 301,\n  GroupUpdating: 302,\n  GroupDeleting: 303,\n  GroupUserAdding: 304,\n  GroupUserDeleting: 305,\n  RoleDefinitionAdding: 306,\n  RoleDefinitionUpdating: 307,\n  RoleDefinitionDeleting: 308,\n  RoleAssignmentAdding: 309,\n  RoleAssignmentDeleting: 310,\n  InheritanceBreaking: 311,\n  InheritanceResetting: 312,\n  WorkflowStarting: 501,\n  ItemAdded: 10001,\n  ItemUpdated: 10002,\n  ItemDeleted: 10003,\n  ItemCheckedIn: 10004,\n  ItemCheckedOut: 10005,\n  ItemUncheckedOut: 10006,\n  ItemAttachmentAdded: 10007,\n  ItemAttachmentDeleted: 10008,\n  ItemFileMoved: 10009,\n  ItemFileConverted: 10010,\n  ItemVersionDeleted: 10011,\n  FieldAdded: 10101,\n  FieldUpdated: 10102,\n  FieldDeleted: 10103,\n  ListAdded: 10104,\n  ListDeleted: 10105,\n  SiteDeleted: 10201,\n  WebDeleted: 10202,\n  WebMoved: 10203,\n  WebProvisioned: 10204,\n  GroupAdded: 10301,\n  GroupUpdated: 10302,\n  GroupDeleted: 10303,\n  GroupUserAdded: 10304,\n  GroupUserDeleted: 10305,\n  RoleDefinitionAdded: 10306,\n  RoleDefinitionUpdated: 10307,\n  RoleDefinitionDeleted: 10308,\n  RoleAssignmentAdded: 10309,\n  RoleAssignmentDeleted: 10310,\n  InheritanceBroken: 10311,\n  InheritanceReset: 10312,\n  WorkflowStarted: 10501,\n  WorkflowPostponed: 10502,\n  WorkflowCompleted: 10503,\n  EntityInstanceAdded: 10601,\n  EntityInstanceUpdated: 10602,\n  EntityInstanceDeleted: 10603,\n  AppInstalled: 10701,\n  AppUpgraded: 10702,\n  AppUninstalling: 10703,\n  EmailReceived: 20000,\n  ContextEvent: 32766\n};\n/**\n * Environment Type\n */\nexports.EnvironmentType = {\n  ClassicSharePoint: 3,\n  Local: 1,\n  SharePoint: 2,\n  Test: 0\n};\n/**\n * Field Index Status\n */\nexports.FieldIndexStatus = {\n  None: 0,\n  Indexed: 1,\n  Enabling: 2,\n  Disabling: 3\n};\n/**\n * Field Note Types\n */\nexports.FieldNoteType = {\n  /** Enhance Rich Text */\n  EnhancedRichText: 0,\n  /** Rich Text */\n  RichText: 1,\n  /** Text Only */\n  TextOnly: 2\n};\n/**\n * Field Number Type\n */\nexports.FieldNumberType = {\n  /** Decimal */\n  Decimal: 0,\n  /** Integer */\n  Integer: 1,\n  /** Percentage */\n  Percentage: 2\n};\n/**\n * Field Result Types\n */\nexports.FieldResultType = {\n  /** Boolean */\n  Boolean: "Boolean",\n  /** Currency */\n  Currency: "Currency",\n  /** Date Only */\n  DateOnly: "DateOnly",\n  /** Date & Time */\n  DateTime: "DateTime",\n  /** Number */\n  Number: "Number",\n  /** Text */\n  Text: "Text"\n};\n/**\n * Field Types\n */\nexports.FieldType = {\n  AllDayEvent: 29,\n  Attachments: 19,\n  Boolean: 8,\n  Calculated: 17,\n  Choice: 6,\n  Computed: 12,\n  ContentTypeId: 25,\n  Counter: 5,\n  CrossProjectLink: 22,\n  Currency: 10,\n  DateTime: 4,\n  Error: 24,\n  File: 18,\n  Geolocation: 31,\n  GridChoice: 16,\n  Guid: 14,\n  Image: 34,\n  Integer: 1,\n  Invalid: 0,\n  Lookup: 7,\n  MaxItems: 31,\n  ModStat: 23,\n  MultiChoice: 15,\n  Note: 3,\n  Number: 9,\n  PageSeparator: 26,\n  Recurrence: 21,\n  Text: 2,\n  ThreadIndex: 27,\n  Threading: 13,\n  URL: 11,\n  User: 20,\n  WorkflowEventType: 30,\n  WorkflowStatus: 28\n};\n/**\n * Field User Selection Types\n */\nexports.FieldUserSelectionType = {\n  PeopleOnly: 0,\n  PeopleAndGroups: 1\n};\n/**\n * File Level\n */\nexports.FileLevelType = {\n  Published: 1,\n  Draft: 2,\n  Checkout: 3\n};\n/**\n * File Template Types\n*/\nexports.FileTemplateType = {\n  StandardPage: 0,\n  WikiPage: 1,\n  FormPage: 2\n};\n/**\n * Form Display Mode\n */\nexports.FormDisplayMode = {\n  Display: 4,\n  Edit: 6,\n  New: 8\n};\n/**\n * Friendly Date Format\n */\nexports.FriendlyDateFormat = {\n  Unspecified: 0,\n  Disabled: 1,\n  Relative: 2\n};\n/**\n * List Experience Types\n */\nexports.ListExperienceOptions = {\n  Auto: 0,\n  NewExperience: 1,\n  ClassicExperience: 2\n};\n/**\n * List Template Types\n*/\nexports.ListTemplateType = {\n  AccessApp: 3100,\n  AccessRequest: 160,\n  AdminTasks: 1200,\n  Agenda: 201,\n  AlchemyApprovalWorkflow: 3102,\n  AlchemyMobileForm: 3101,\n  Announcements: 104,\n  AppCatalog: 336,\n  AppDataCatalog: 125,\n  AssetLibrary: 851,\n  CallTrack: 404,\n  Categories: 303,\n  Circulation: 405,\n  ClientSideAssets: 334,\n  ClientSideComponentManifests: 331,\n  Comments: 302,\n  Contacts: 105,\n  CustomGrid: 120,\n  DataConnectionLibrary: 130,\n  DataSources: 110,\n  Decision: 204,\n  DesignCatalog: 124,\n  DeveloperSiteDraftApps: 1230,\n  DiscussionBoard: 108,\n  DocumentLibrary: 101,\n  Events: 106,\n  ExternalList: 600,\n  Facility: 402,\n  GanttTasks: 150,\n  GenericList: 100,\n  HealthReports: 1221,\n  HealthRules: 1220,\n  HelpLibrary: 151,\n  Holidays: 421,\n  HomePageLibrary: 212,\n  IMEDic: 499,\n  IssueTracking: 1100,\n  KPIStatusList: 432,\n  LanguagesAndTranslatorsList: 1301,\n  Links: 103,\n  ListTemplateCatalog: 114,\n  MaintenanceLogs: 175,\n  MasterPageCatalog: 116,\n  MeetingObjective: 207,\n  Meetings: 200,\n  MeetingUser: 202,\n  MicroFeed: 544,\n  MySiteDocumentLibrary: 700,\n  NoCodePublic: 122,\n  NoCodeWorkflows: 117,\n  PageLibrary: 850,\n  PerformancePointContentList: 450,\n  PerformancePointDataSourceLibrary: 460,\n  PerformancePointDataConnectionsLibrary: 470,\n  PerformancePointDashboardsLibrary: 480,\n  PersonalDocumentLibrary: 2002,\n  PictureLibrary: 109,\n  Posts: 301,\n  PrivateDocumentLibrary: 2003,\n  RecordLibrary: 1302,\n  ReportLibrary: 433,\n  SharingLinks: 3300,\n  SolutionCatalog: 121,\n  Survey: 102,\n  Tasks: 107,\n  TasksWithTimelineAndHierarchy: 171,\n  TenantAppCatalog: 330,\n  TenantWideExtensions: 337,\n  TextBox: 210,\n  ThemeCatalog: 123,\n  ThingsToBring: 211,\n  Timecard: 420,\n  TranslationManagementLibrary: 1300,\n  UserInformation: 112,\n  VisioProcessDiagramMetricLibrary: 505,\n  VisioProcessDiagramUSUnitsLibrary: 506,\n  WebPageLibrary: 119,\n  WebPartCatalog: 113,\n  WebTemplateCatalog: 111,\n  Whereabouts: 403,\n  WorkflowHistory: 140,\n  WorkflowProcess: 118,\n  XMLForm: 115\n};\n/**\n * Locale LCID Types\n */\nexports.LocaleLCIDType = {\n  Afrikaans: 1078,\n  Albanian: 1052,\n  ArabicAlgeria: 5121,\n  ArabicBahrain: 15361,\n  ArabicEgypt: 3073,\n  ArabicIraq: 2049,\n  ArabicJordan: 11265,\n  ArabicLebanon: 12289,\n  ArabicLibya: 4097,\n  ArabicMorocco: 6145,\n  ArabicOman: 8193,\n  ArabicQatar: 16385,\n  ArabicSaudiArabia: 1025,\n  ArabicSyria: 10241,\n  ArabicTunisia: 7169,\n  ArabicUAE: 14337,\n  ArabicYemen: 9217,\n  Armenian: 1067,\n  AzeriCyrillic: 2092,\n  AzeriLatin: 1068,\n  Basque: 1069,\n  Belarusian: 1059,\n  Bulgarian: 1026,\n  Catalan: 1027,\n  ChineseHongKongSAR: 3076,\n  ChineseMacaoSAR: 5124,\n  ChinesePRC: 2052,\n  ChineseSingapore: 4100,\n  ChineseTaiwan: 1028,\n  CroatianCroatia: 1050,\n  Czech: 1029,\n  Danish: 1030,\n  Divehi: 1125,\n  DutchBelgium: 2067,\n  DutchNetherlands: 1043,\n  EnglishAustralia: 3081,\n  EnglishBelize: 10249,\n  EnglishCanada: 4105,\n  EnglishCaribbean: 9225,\n  EnglishIreland: 6153,\n  EnglishJamaica: 8201,\n  EnglishNewZealand: 5129,\n  EnglishPhilippines: 13321,\n  EnglishSouthAfrica: 7177,\n  EnglishTrinidad: 11273,\n  EnglishUnitedKingdom: 2057,\n  EnglishUnitedStates: 1033,\n  EnglishZimbabwe: 12297,\n  Estonian: 1061,\n  Faeroese: 1080,\n  Finnish: 1035,\n  FrenchBelgium: 2060,\n  FrenchCanada: 3084,\n  FrenchFrance: 1036,\n  FrenchLuxembourg: 5132,\n  FrenchMonaco: 6156,\n  FrenchSwitzerland: 4108,\n  Galician: 1110,\n  Georgian: 1079,\n  GermanAustria: 3079,\n  GermanGermany: 1031,\n  GermanLiechtenstein: 5127,\n  GermanLuxembourg: 4103,\n  GermanSwitzerland: 2055,\n  Greek: 1032,\n  Gujarati: 1095,\n  HebrewIsrael: 1037,\n  HindiIndia: 1081,\n  Hungarian: 1038,\n  Icelandic: 1039,\n  Indonesian: 1057,\n  ItalianItaly: 1040,\n  ItalianSwitzerland: 2064,\n  Japanese: 1041,\n  Kannada: 1099,\n  Kazakh: 1087,\n  Konkani: 1111,\n  Korean: 1042,\n  KyrgyzCyrillic: 1088,\n  Latvian: 1062,\n  Lithuanian: 1063,\n  MacedonianFYROM: 1071,\n  Malay: 1086,\n  MalayBruneiDarussalam: 2110,\n  Marathi: 1102,\n  MongolianCyrillic: 1104,\n  NorwegianBokmal: 1044,\n  NorwegianNynorsk: 2068,\n  PersianIran: 1065,\n  Polish: 1045,\n  PortugueseBrazil: 1046,\n  PortuguesePortugal: 2070,\n  Punjabi: 1094,\n  Romanian: 1048,\n  Russian: 1049,\n  Sanskrit: 1103,\n  SerbianCyrillic: 3098,\n  SerbianLatin: 2074,\n  Slovak: 1051,\n  Slovenian: 1060,\n  SpanishArgentina: 11274,\n  SpanishBolivia: 16394,\n  SpanishChile: 13322,\n  SpanishColombia: 9226,\n  SpanishCostaRica: 5130,\n  SpanishDominicanRepublic: 7178,\n  SpanishEcuador: 12298,\n  SpanishElSalvador: 17418,\n  SpanishGuatemala: 4106,\n  SpanishHonduras: 18442,\n  SpanishMexico: 2058,\n  SpanishNicaragua: 19466,\n  SpanishPanama: 6154,\n  SpanishParaguay: 15370,\n  SpanishPeru: 10250,\n  SpanishPuertoRico: 20490,\n  SpanishSpain: 3082,\n  SpanishUruguay: 14346,\n  SpanishVenezuela: 8202,\n  Swahili: 1089,\n  Swedish: 1053,\n  SwedishFinland: 2077,\n  Syriac: 1114,\n  Tamil: 1097,\n  Tatar: 1092,\n  Telugu: 1098,\n  ThaiThailand: 1054,\n  Turkish: 1055,\n  Ukrainian: 1058,\n  UrduPakistan: 1056,\n  UzbekCyrillic: 2115,\n  UzbekLatin: 1091,\n  Vietnamese: 1066\n};\n/**\n * Modal Dialog Results\n */\nexports.ModalDialogResult = {\n  Invalid: -1,\n  Cancel: 0,\n  OK: 1\n};\n/**\n * Page Types\n */\nexports.PageType = {\n  DefaultView: 0,\n  DialogView: 2,\n  DisplayForm: 4,\n  DisplayFormDialog: 5,\n  EditForm: 6,\n  EditFormDialog: 7,\n  Invalid: -1,\n  NewForm: 8,\n  NewFormDialog: 9,\n  NormalView: 1,\n  Page_MAXITEMS: 11,\n  SolutionForm: 10,\n  View: 3\n};\n/**\n * Personalization Scope\n */\nexports.PersonalizationScope = {\n  Shared: 1,\n  User: 0\n};\n/**\n * Personal Site Capabilities\n */\nexports.PersonalSiteCapabilities = {\n  Education: 16,\n  Guest: 32,\n  MyTasksDashboard: 8,\n  None: 0,\n  Profile: 1,\n  Social: 2,\n  Storage: 4\n};\n/**\n * Principal Sources\n */\nexports.PrincipalSources = {\n  All: 15,\n  MembershipProvider: 4,\n  None: 0,\n  RoleProvider: 8,\n  UserInfoList: 1,\n  Windows: 2\n};\n/**\n * Principal Types\n */\nexports.PrincipalTypes = {\n  All: 15,\n  DistributionList: 2,\n  None: 0,\n  SecurityGroup: 4,\n  SharePointGroup: 8,\n  User: 1\n};\n/**\n * Property Pane Types\n */\nexports.PropertyPaneType = {\n  Button: 11,\n  CheckBox: 2,\n  ChoiceGroup: 10,\n  Custom: 1,\n  Dropdown: 6,\n  DynamicField: 14,\n  DynamicFieldSet: 16,\n  DynamicTextField: 15,\n  Heading: 9,\n  HorizontalRule: 12,\n  IconPicker: 19,\n  Label: 7,\n  Link: 13,\n  Slider: 8,\n  SpinButton: 17,\n  TextField: 3,\n  ThumbnailPicker: 18,\n  Toggle: 5\n};\n/**\n * Relationship Delete Behavior Types\n */\nexports.RelationshipDeleteBehaviorType = {\n  None: 0,\n  Cascade: 1,\n  Restrict: 2\n};\n/**\n * Render List Data Options\n */\nexports.RenderListDataOptions = {\n  None: 0,\n  ContextInfo: 1,\n  ListData: 2,\n  ListSchema: 4,\n  MenuView: 8,\n  ListContentType: 16,\n  FileSystemItemId: 32,\n  ClientFormSchema: 64,\n  QuickLaunch: 128,\n  Spotlight: 256,\n  Visualization: 512,\n  ViewMetadata: 1024,\n  DisableAutoHyperlink: 2048,\n  EnableMediaTAUrls: 4096,\n  ParentInfo: 8192,\n  PageContextInfo: 16384,\n  ClientSideComponentManifest: 32768\n};\n/**\n * Reordering Rule Match Types\n */\nexports.ReorderingRuleMatchType = {\n  ContentTypeIs: 5,\n  FileExtensionMatches: 6,\n  ManualCondition: 8,\n  ResultContainsKeyword: 0,\n  ResultHasTag: 7,\n  TitleContainsKeyword: 1,\n  TitleMatchesKeyword: 2,\n  UrlExactlyMatches: 4,\n  UrlStartsWith: 3\n};\n/**\n * Role Types\n */\nexports.RoleType = {\n  Administrator: 5,\n  Contributor: 3,\n  Editor: 6,\n  Guest: 1,\n  None: 0,\n  Reader: 2,\n  WebDesigner: 4\n};\n/**\n * Search Scope\n */\nexports.SearchScope = {\n  Default: 0,\n  Tenant: 1,\n  Hub: 2,\n  Site: 3\n};\n/**\n * Status Pri Color\n */\nexports.StatusPriColor = {\n  Blue: "blue",\n  Green: "green",\n  Red: "red",\n  Yellow: "yellow"\n};\n/**\n * URL Format Types\n */\nexports.UrlFormatType = {\n  Hyperlink: 0,\n  Image: 1\n};\n/**\n * URL Zones\n */\nexports.URLZones = {\n  Default: 0,\n  Intranet: 1,\n  Internet: 2,\n  Custom: 3,\n  Extranet: 4\n};\n/**\n * User Custom Action Registration Types\n */\nexports.UserCustomActionRegistrationType = {\n  None: 0,\n  List: 1,\n  ContentType: 2,\n  ProgId: 3,\n  FileType: 4\n};\n/**\n * View Types\n */\nexports.ViewType = {\n  Calendar: 524288,\n  Chart: 131072,\n  Gantt: 67108864,\n  Grid: 2048,\n  Html: 1,\n  Recurrence: 8193\n};\n/**\n * Web Template Types\n */\nexports.WebTemplateType = {\n  AcademicLibrary: "DOCMARKETPLACESITE",\n  App: "APP",\n  AppCatalog: "APPCATALOG",\n  BasicSearch: "SRCHCENTERLITE",\n  Blog: "BLOG",\n  BusinessIntelligenceCenter: "BICenterSite",\n  CentralAdmin: "CENTRALADMIN",\n  Community: "COMMUNITY",\n  CommunityPortal: "COMMUNITYPORTAL",\n  Dev: "DEV",\n  DocumentCenter: "BDR",\n  eDiscoveryCenter: "EDISC",\n  EnterpriseSearch: "SRCHCEN",\n  EnterpriseWiki: "ENTERWIKI",\n  Global: "GLOBAL",\n  GroupWorkSite: "SGS",\n  Meetings: "MEETINGS",\n  MeetingWorkspace: "MPS",\n  PerformancePoint: "PPMASite",\n  ProductCatalog: "PRODUCTCATALOG",\n  Profiles: "PROFILES",\n  ProjectSite: "PROJECTSITE",\n  Publishing: "BLANKINTERNET",\n  PublishingSite: "CMSPUBLISHING",\n  RecordsCenter: "OFFILE",\n  SharedServicesAdminSite: "OSRV",\n  Site: "STS",\n  TeamCollaborationSite: "TEAM",\n  TenantAdmin: "TENANTADMIN",\n  Wiki: "WIKI"\n};\n\n//# sourceURL=webpack://gd-sprest/./build/sptypes/sptypes.js?')},"./build/utils/base.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Base = void 0;\nvar _1 = __webpack_require__(/*! . */ "./build/utils/index.js");\n/*********************************************************************************************************************************/\n// Base\n// This is the base class for all objects.\n/*********************************************************************************************************************************/\nvar Base = /** @class */function () {\n  /**\n   * Constructor\n   * @param targetInfo - The target information.\n   */\n  function Base(targetInfo) {\n    // Default the properties\n    this.targetInfo = Object.create(targetInfo || {});\n    this.responses = [];\n    this.requestType = 0;\n    this.waitFlags = [];\n  }\n  // Method to update the object functions, based on the type\n  Base.prototype.addMethods = function (data, context) {\n    return _1.Request.addMethods(this, data, context);\n  };\n  // Method to execute this request as a batch request\n  Base.prototype.batch = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return _1.Batch.execute(this, args);\n  };\n  // Method to wait for the requests to complete\n  Base.prototype.done = function (resolve) {\n    return _1.Helper.done(this, resolve);\n  };\n  // Method to execute the request\n  Base.prototype.execute = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return _1.Request.execute(this, args);\n  };\n  // Method to execute a method\n  Base.prototype.executeMethod = function (methodName, methodConfig, args) {\n    return _1.Helper.executeMethod(this, methodName, methodConfig, args);\n  };\n  // Method to execute the request synchronously\n  Base.prototype.executeAndWait = function () {\n    return _1.Request.executeRequest(this, false);\n  };\n  // Method to return a collection\n  Base.prototype.getCollection = function (method, args) {\n    return _1.Helper.getCollection(this, method, args);\n  };\n  // Method to get the request information\n  Base.prototype.getInfo = function () {\n    return _1.Helper.getRequestInfo(this);\n  };\n  // Method to get the next set of results\n  Base.prototype.getNextSetOfResults = function () {\n    return _1.Helper.getNextSetOfResults(this);\n  };\n  // Method to return a property of the base object\n  Base.prototype.getProperty = function (propertyName, requestType) {\n    return _1.Helper.getProperty(this, propertyName, requestType);\n  };\n  // Method to get the request digest value\n  Base.prototype.getRequestDigest = function () {\n    return this.targetInfo.requestDigest;\n  };\n  // Method to stringify the object\n  Base.prototype.stringify = function () {\n    return _1.Helper.stringify(this);\n  };\n  // Method to update the metadata uri\n  Base.prototype.updateMetadataUri = function (metadata, targetInfo) {\n    return _1.Helper.updateMetadataUri(this, metadata, targetInfo);\n  };\n  // Method to update the request digest value\n  Base.prototype.updateRequestDigest = function (value) {\n    this.targetInfo.requestDigest = value;\n  };\n  // Method to wait for the parent requests to complete\n  Base.prototype.waitForRequestsToComplete = function (callback, requestIdx) {\n    _1.Request.waitForRequestsToComplete(this, callback, requestIdx);\n  };\n  return Base;\n}();\nexports.Base = Base;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/base.js?')},"./build/utils/batch.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Batch = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar _1 = __webpack_require__(/*! . */ "./build/utils/index.js");\n/**\n * Batch Requests\n */\nvar Batch = /** @class */function () {\n  function Batch() {}\n  // Method to execute a batch request\n  Batch.execute = function (base, args) {\n    var createFl = false;\n    var callback = null;\n    // Parse the arguments\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i];\n      // Check the type\n      switch (_typeof(arg)) {\n        case "boolean":\n          // Set the create flag\n          createFl = arg;\n          break;\n        case "function":\n          // Set the callback method\n          callback = arg;\n          break;\n      }\n    }\n    // Set the base\n    base.base = base.base ? base.base : base;\n    // See if we are creating a new request\n    if (createFl || base.base.batchRequests == null) {\n      // Ensure the batch requests exist\n      base.base.batchRequests = base.base.batchRequests || [];\n      // Create the request\n      base.base.batchRequests.push([{\n        callback: callback,\n        changesetId: lib_1.ContextInfo.generateGUID(),\n        targetInfo: new _1.TargetInfo(base.targetInfo)\n      }]);\n    } else {\n      // Batch requests are limited to 100 per execution, so we need to add a check for this\n      if (base.base.batchRequests[base.base.batchRequests.length - 1].length == 100) {\n        // Create a new request\n        base.base.batchRequests.push([{\n          callback: callback,\n          changesetId: lib_1.ContextInfo.generateGUID(),\n          targetInfo: new _1.TargetInfo(base.targetInfo)\n        }]);\n      } else {\n        // Append the request\n        base.base.batchRequests[base.base.batchRequests.length - 1].push({\n          callback: callback,\n          changesetId: lib_1.ContextInfo.generateGUID(),\n          targetInfo: new _1.TargetInfo(base.targetInfo)\n        });\n      }\n    }\n    // Return this object\n    return base;\n  };\n  // Method to generate a batch request\n  Batch.getTargetInfo = function (url, requests, requestDigest, isV2) {\n    if (isV2 === void 0) {\n      isV2 = false;\n    }\n    var batchId = "batch_" + lib_1.ContextInfo.generateGUID();\n    var batchRequests = [];\n    // See if this is v2\n    if (isV2) {\n      // Create the batch requests\n      batchRequests = Batch.createBatchV2(requests);\n    } else {\n      // Create the batch requests\n      batchRequests.push(Batch.createBatch(batchId, requests));\n      // End the batch request\n      batchRequests.push("--" + batchId + "--");\n    }\n    // Return the target information\n    return new _1.TargetInfo({\n      url: url,\n      endpoint: (isV2 ? "_api/v2.0/" : "") + "$batch",\n      method: "POST",\n      data: isV2 ? {\n        requests: batchRequests\n      } : batchRequests.join("\\r\\n"),\n      requestDigest: requestDigest,\n      requestHeader: {\n        "Content-Type": isV2 ? "application/json" : \'multipart/mixed; boundary="\' + batchId + \'"\'\n      }\n    });\n  };\n  // Method to generate a batch request\n  Batch.createBatch = function (batchId, requests) {\n    var batch = [];\n    // Parse the requests\n    for (var i = 0; i < requests.length; i++) {\n      var request_1 = requests[i];\n      // Create the batch request\n      batch.push("--" + batchId);\n      // Determine if the batch requires a change set\n      var requiresChangeset = request_1 && request_1.targetInfo.requestMethod != "GET";\n      if (requiresChangeset) {\n        // Create a change set\n        batch.push("Content-Type: multipart/mixed; boundary=" + request_1.changesetId);\n        batch.push("");\n        batch.push("--" + request_1.changesetId);\n        batch.push("Content-Type: application/http");\n        batch.push("Content-Transfer-Encoding: binary");\n        batch.push("");\n        batch.push(request_1.targetInfo.requestMethod + " " + request_1.targetInfo.requestUrl + " HTTP/1.1");\n        batch.push("Content-Type: application/json;odata=verbose");\n        // See if we are making a delete/update\n        if (request_1.targetInfo.requestMethod == "DELETE" || request_1.targetInfo.requestMethod == "MERGE") {\n          // Append the header for deleting/updating\n          batch.push("IF-MATCH: *");\n        }\n        batch.push("");\n        request_1.targetInfo.requestData ? batch.push(request_1.targetInfo.requestData) : null;\n        batch.push("");\n        batch.push("--" + request_1.changesetId + "--");\n      } else {\n        // Create a change set\n        batch.push("Content-Type: application/http");\n        batch.push("Content-Transfer-Encoding: binary");\n        batch.push("");\n        batch.push("GET " + request_1.targetInfo.requestUrl + " HTTP/1.1");\n        batch.push("Accept: application/json;odata=verbose");\n        batch.push("");\n        request_1.targetInfo.requestData ? batch.push(request_1.targetInfo.requestData) : null;\n        batch.push("");\n      }\n    }\n    // Add the change set information to the batch\n    var batchRequest = batch.join("\\r\\n");\n    var request = [];\n    request.push("Content-Type: multipart/mixed; boundary=" + batchId);\n    request.push("Content-Length: " + batchRequest.length);\n    request.push("");\n    request.push(batchRequest);\n    request.push("");\n    // Return the batch request\n    return request.join("\\r\\n");\n  };\n  // Method to generate a batch request\n  Batch.createBatchV2 = function (requests) {\n    var batch = [];\n    // Parse the requests\n    for (var i = 0; i < requests.length; i++) {\n      var request = requests[i];\n      // Create the batch request\n      var batchRequest = {\n        id: (i + 1).toString(),\n        method: request.targetInfo.requestMethod,\n        url: request.targetInfo.requestUrl\n      };\n      // See if a body is set\n      if (request.targetInfo.requestData) {\n        batchRequest.body = request.targetInfo.requestData;\n        batchRequest.headers = {\n          "Content-Type": "application/json"\n        };\n      }\n      // Add the batch request\n      batch.push(batchRequest);\n    }\n    // Return the batch requests\n    return batch;\n  };\n  // Process the batch request callbacks\n  Batch.processCallbacks = function (batchRequests) {\n    if (batchRequests === void 0) {\n      batchRequests = [];\n    }\n    // Parse the requests\n    for (var i = 0; i < batchRequests.length; i++) {\n      var batchRequest = batchRequests[i];\n      // See if a callback exists\n      if (batchRequest.callback) {\n        // Execute the callback\n        batchRequest.callback(batchRequest.response, batchRequest.targetInfo);\n      }\n    }\n  };\n  return Batch;\n}();\nexports.Batch = Batch;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/batch.js?')},"./build/utils/helper.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Helper = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar _1 = __webpack_require__(/*! . */ "./build/utils/index.js");\nvar xhrRequest_1 = __webpack_require__(/*! ./xhrRequest */ "./build/utils/xhrRequest.js");\n/**\n * Request Helper\n */\nexports.Helper = {\n  // Method to add the base references\n  addBaseMethods: function addBaseMethods(base, obj) {\n    // Add the base references\n    obj["addMethods"] = base.addMethods;\n    obj["base"] = base.base;\n    obj["done"] = base.done;\n    obj["execute"] = base.execute;\n    obj["executeAndWait"] = base.executeAndWait;\n    obj["executeMethod"] = base.executeMethod;\n    obj["existsFl"] = true;\n    obj["getCollection"] = base.getCollection;\n    obj["getProperty"] = base.getProperty;\n    obj["parent"] = base;\n    obj["targetInfo"] = base.targetInfo;\n    obj["updateMetadataUri"] = base.updateMetadataUri;\n    obj["waitForRequestsToComplete"] = base.waitForRequestsToComplete;\n  },\n  // Method to wait for all requests to complete, before resolving the request\n  done: function done(base, resolve) {\n    // Ensure the base is set\n    base.base = base.base ? base.base : base;\n    // Ensure the response index is set\n    base.responseIndex = base.responseIndex >= 0 ? base.responseIndex : 0;\n    // Wait for the responses to execute\n    _1.Request.waitForRequestsToComplete(base, function () {\n      var responses = base.base.responses;\n      // Clear the responses\n      base.base.responses = [];\n      // Clear the wait flags\n      base.base.waitFlags = [];\n      // Resolve the request\n      resolve ? resolve.apply(base, responses) : null;\n    });\n  },\n  // Method to execute a method\n  executeMethod: function executeMethod(base, methodName, methodConfig, args) {\n    var _a, _b;\n    var targetInfo = null;\n    // See if the metadata is defined for the base object\n    var metadata = base["d"] ? base["d"].__metadata : base["__metadata"];\n    if (metadata && metadata.uri) {\n      // Create the target information and use the url defined for the base object\n      targetInfo = {\n        requestDigest: (_a = base.targetInfo) === null || _a === void 0 ? void 0 : _a.requestDigest,\n        url: metadata.uri\n      };\n      // See if we are inheriting the metadata type\n      if (methodConfig.inheritMetadataType && metadata.type) {\n        // Copy the metadata type\n        methodConfig.metadataType = metadata.type;\n      }\n      // Update the metadata uri\n      exports.Helper.updateMetadataUri(base, metadata, targetInfo);\n    } else {\n      // Copy the target information\n      targetInfo = Object.create(base.targetInfo);\n      // See if this is a graph request and an id exists for the parent\n      if (base["@odata.etag"] && base["id"]) {\n        // Append the id\n        targetInfo.endpoint += "/" + base["id"];\n      }\n    }\n    // See if the method config name has a base reference\n    var startIdx = (_b = methodConfig === null || methodConfig === void 0 ? void 0 : methodConfig.name) === null || _b === void 0 ? void 0 : _b.indexOf("[base.");\n    if (startIdx >= 0) {\n      // Get the property name\n      var endIdx = methodConfig.name.indexOf("]", startIdx);\n      var propName = methodConfig.name.substring(startIdx, endIdx).split(".")[1];\n      // Get the property value\n      var propValue = (base[propName] || "").replace(/"/g, \'\').split(\',\')[0];\n      // Update the method name\n      methodConfig.name = methodConfig.name.replace("[base." + propName + "]", propValue);\n    }\n    // Get the method information\n    var methodInfo = new _1.MethodInfo(methodName, methodConfig, args);\n    // Update the target information\n    targetInfo.bufferFl = methodConfig.requestType == _1.RequestType.GetBuffer;\n    targetInfo.data = methodInfo.body;\n    targetInfo.defaultToWebFl = typeof targetInfo.defaultToWebFl === "undefined" && base.base ? base.base.targetInfo.defaultToWebFl : targetInfo.defaultToWebFl;\n    targetInfo.method = methodInfo.requestMethod;\n    targetInfo.requestDigest = typeof targetInfo.requestDigest === "undefined" && base.base && base.base.targetInfo.requestDigest ? base.base.targetInfo.requestDigest : targetInfo.requestDigest;\n    targetInfo.requestType = methodConfig.requestType;\n    // See if we are appending the endpoint\n    if (methodInfo.appendEndpointFl) {\n      // Append to the endpoint\n      targetInfo.endpoint += "." + methodInfo.url;\n    }\n    // Else, see if we are replacing the endpoint\n    else if (methodInfo.replaceEndpointFl) {\n      // Replace the endpoint\n      targetInfo.endpoint = methodInfo.url;\n    }\n    // Else, ensure the method url exists\n    else if (methodInfo.url && methodInfo.url.length > 0) {\n      // Ensure the end point exists\n      targetInfo.endpoint = targetInfo.endpoint ? targetInfo.endpoint : "";\n      // See if the endpoint exists, and the method is not a query string\n      if (targetInfo.endpoint && methodInfo.url && methodInfo.url.indexOf("?") != 0) {\n        // Add a "/" separator to the url\n        targetInfo.endpoint += methodInfo.appendRequest ? "" : "/";\n      }\n      // See if we already have a qs defined and appending another qs\n      if (methodInfo.url.indexOf("?") == 0 && targetInfo.endpoint.indexOf(\'?\') > 0) {\n        // Append the url\n        targetInfo.endpoint += \'&\' + methodInfo.url.substring(1);\n      } else {\n        // Append the url\n        targetInfo.endpoint += methodInfo.url;\n      }\n    }\n    // Create a new object\n    var obj = new _1.Base(targetInfo);\n    // Set the properties\n    obj.base = base.base ? base.base : base;\n    obj.getAllItemsFl = methodInfo.getAllItemsFl;\n    obj.parent = base;\n    obj.requestType = methodConfig.requestType;\n    // Ensure the return type exists\n    if (methodConfig.returnType) {\n      // Add the methods\n      _1.Request.addMethods(obj, {\n        __metadata: {\n          type: methodConfig.returnType\n        }\n      });\n    }\n    // Return the object\n    return obj;\n  },\n  // Method to return a collection\n  getCollection: function getCollection(base, method, args) {\n    // Copy the target information\n    var targetInfo = Object.create(base.targetInfo);\n    // Clear the target information properties from any previous requests\n    targetInfo.data = null;\n    targetInfo.method = null;\n    // See if the metadata is defined for the base object\n    var metadata = base["d"] ? base["d"].__metadata : base["__metadata"];\n    if (metadata && metadata.uri) {\n      // Update the url of the target information\n      targetInfo.url = metadata.uri;\n      // Update the metadata uri\n      exports.Helper.updateMetadataUri(base, metadata, targetInfo);\n      // Set the endpoint\n      targetInfo.endpoint = method;\n    } else {\n      // Append the method to the endpoint\n      targetInfo.endpoint += "/" + method;\n    }\n    // Update the callback\n    targetInfo.callback = args && typeof args[0] === "function" ? args[0] : null;\n    // Create a new object\n    var obj = new _1.Base(targetInfo);\n    // Set the properties\n    obj.base = base.base ? base.base : base;\n    obj.parent = base;\n    // Return the object\n    return obj;\n  },\n  // Method to get the next set of results\n  getNextSetOfResults: function getNextSetOfResults(base) {\n    // Create the target information to query the next set of results\n    var targetInfo = Object.create(base.targetInfo);\n    targetInfo.accessToken = base.targetInfo.accessToken || (base.xhr.isGraph ? lib_1.Graph.Token : null);\n    targetInfo.endpoint = "";\n    targetInfo.url = base["@odata.nextLink"] || base["d"].__next;\n    // Create a new object\n    var obj = new _1.Base(targetInfo);\n    // Set the properties\n    obj.base = base.base ? base.base : base;\n    obj.parent = base;\n    // Return the object\n    return obj;\n  },\n  // Method to return a property of the base object\n  getProperty: function getProperty(base, propertyName, requestType) {\n    // Copy the target information\n    var targetInfo = Object.create(base.targetInfo);\n    // See if this is a graph request\n    if (requestType.indexOf("graph") == 0) {\n      // Default the request type\n      targetInfo.requestType = _1.RequestType.GraphGet;\n    }\n    // Clear the target information properties from any previous requests\n    targetInfo.data = null;\n    targetInfo.method = null;\n    // See if the metadata is defined for the base object\n    var metadata = base["d"] ? base["d"].__metadata : base["__metadata"];\n    if (metadata && metadata.uri) {\n      // Update the url of the target information\n      targetInfo.url = metadata.uri;\n      // Update the metadata uri\n      exports.Helper.updateMetadataUri(base, metadata, targetInfo);\n      // Set the endpoint\n      targetInfo.endpoint = propertyName;\n    } else {\n      // Append the property name to the endpoint\n      targetInfo.endpoint += "/" + propertyName;\n    }\n    // Create a new object\n    var obj = new _1.Base(targetInfo);\n    // Set the properties\n    obj.base = base.base ? base.base : base;\n    obj.parent = base;\n    // Add the methods\n    requestType ? _1.Request.addMethods(obj, {\n      __metadata: {\n        type: requestType\n      }\n    }) : null;\n    // Return the object\n    return obj;\n  },\n  // Method to get the request information\n  getRequestInfo: function getRequestInfo(base) {\n    // Create the request, but don\'t execute it\n    var xhr = new xhrRequest_1.XHRRequest(true, new _1.TargetInfo(base.targetInfo), null, false);\n    // Return the request information\n    return xhr.requestInfo;\n  },\n  // Method to stringify the object\n  stringify: function stringify(base) {\n    // Stringify the object\n    return JSON.stringify({\n      response: base.response,\n      status: base.status,\n      targetInfo: {\n        accessToken: base.targetInfo.accessToken,\n        bufferFl: base.targetInfo.bufferFl,\n        defaultToWebFl: base.targetInfo.defaultToWebFl,\n        endpoint: base.targetInfo.endpoint,\n        method: base.targetInfo.method,\n        overrideDefaultRequestToHostFl: base.targetInfo.overrideDefaultRequestToHostFl,\n        requestDigest: base.targetInfo.requestDigest,\n        requestHeader: base.targetInfo.requestHeader,\n        requestInfo: base.targetInfo.requestInfo,\n        requestType: base.targetInfo.requestType,\n        url: base.targetInfo.url\n      }\n    });\n  },\n  // Method to update a collection object\n  updateDataCollection: function updateDataCollection(obj, results) {\n    // Ensure the base is a collection\n    if (results) {\n      // Save the results\n      obj["results"] = obj["results"] ? obj["results"].concat(results) : results;\n      // See if only one object exists\n      if (obj["results"].length > 0) {\n        var results_2 = obj["results"];\n        // See if this is a v2 request, and set the default object type\n        var objType = null;\n        if (obj["@odata.context"]) {\n          // Get the object type\n          var metadataType = obj["@odata.context"] || objType;\n          var values = metadataType.split("_api/v2.0/$metadata#");\n          if (values.length > 1) {\n            objType = values[1];\n          } else {\n            values = metadataType.split("/");\n            objType = values[values.length - 1].split("?")[0];\n          }\n          // Ensure its not the collection type\n          objType = objType.replace(/s$/, \'\');\n        }\n        // Parse the results\n        for (var _i = 0, results_1 = results_2; _i < results_1.length; _i++) {\n          var result = results_1[_i];\n          // Add the base methods\n          exports.Helper.addBaseMethods(obj, result);\n          // Update the metadata\n          exports.Helper.updateMetadata(obj, result);\n          // Add the methods\n          _1.Request.addMethods(result, result, objType);\n        }\n      }\n    }\n  },\n  // Method to update the expanded collection property\n  updateExpandedCollection: function updateExpandedCollection(base, results) {\n    // Parse the results\n    for (var i = 0; i < results.length; i++) {\n      var result = results[i];\n      // See if this property was expanded\n      if (result["__metadata"]) {\n        // Add the base methods\n        exports.Helper.addBaseMethods(base, result);\n        // Update the metadata\n        exports.Helper.updateMetadata(result, result);\n        // Add the methods\n        _1.Request.addMethods(result, result);\n      }\n    }\n  },\n  // Method to update the expanded properties\n  updateExpandedProperties: function updateExpandedProperties(base) {\n    // Ensure this is an OData request\n    if (base["results"] == null || base.requestType != _1.RequestType.OData) {\n      return;\n    }\n    // Parse the results\n    for (var i = 0; i < base["results"].length; i++) {\n      var result = base["results"][i];\n      // Parse the properties\n      for (var key in result) {\n        // Skip the parent property\n        if (key == "parent") {\n          continue;\n        }\n        // Ensure the property exists\n        var prop = result[key];\n        if (prop) {\n          // See if this is a collection\n          if (prop["results"] && prop["results"].length > 0) {\n            // Update the expanded collection\n            exports.Helper.updateExpandedCollection(base, prop.results);\n          }\n          // Else, see if this property was expanded\n          else if (prop["__metadata"]) {\n            // Add the base methods\n            exports.Helper.addBaseMethods(result, prop);\n            // Update the metadata\n            exports.Helper.updateMetadata(result, prop);\n            // Add the methods\n            _1.Request.addMethods(prop, prop);\n          }\n        }\n      }\n    }\n  },\n  // Method to update the metadata\n  updateMetadata: function updateMetadata(base, data) {\n    // See if this is the app web\n    if (lib_1.ContextInfo.isAppWeb) {\n      // Get the url information\n      var hostUrl = lib_1.ContextInfo.webAbsoluteUrl.toLowerCase();\n      var requestUrl = data && data.__metadata && data.__metadata.uri ? data.__metadata.uri.toLowerCase() : null;\n      var targetUrl = base.targetInfo && base.targetInfo.url ? base.targetInfo.url.toLowerCase() : null;\n      // Ensure the urls exist\n      if (hostUrl == null || requestUrl == null || targetUrl == null) {\n        return;\n      }\n      // See if we need to make an update\n      if (targetUrl.indexOf(hostUrl) == 0) {\n        return;\n      }\n      // Update the metadata uri\n      data.__metadata.uri = requestUrl.replace(hostUrl, targetUrl);\n    }\n    // See if this is a webpart definition\n    if (data.__metadata && /SP.WebParts.WebPartDefinition/.test(data.__metadata.type)) {\n      // Update the metadata uri\n      data.__metadata.uri = data.__metadata.uri.replace(/SP.WebParts.WebPartDefinition/, base.targetInfo.endpoint + "/getById(\'") + "\')";\n    }\n  },\n  // Method to update the metadata uri\n  updateMetadataUri: function updateMetadataUri(base, metadata, targetInfo) {\n    // See if this is a field\n    if (/^SP.Field/.test(metadata.type) || /^SP\\..*Field$/.test(metadata.type)) {\n      // Fix the url reference\n      targetInfo.url = targetInfo.url.replace(/AvailableFields/, "fields");\n    }\n    // Else, see if this is an event receiver\n    else if (/SP.EventReceiverDefinition/.test(metadata.type)) {\n      // Fix the url reference\n      targetInfo.url = targetInfo.url.replace(/\\/EventReceiver\\//, "/EventReceivers/");\n    }\n    // Else, see if this is a tenant app\n    else if (/Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata/.test(targetInfo.url)) {\n      // Fix the url reference\n      targetInfo.url = targetInfo.url.split("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.CorporateCatalogAppMetadata")[0] + "web/tenantappcatalog/availableapps/getbyid(\'" + base["ID"] + "\')";\n    }\n  },\n  // Method to update the search results\n  updateSearchResults: function updateSearchResults(base) {\n    // See if this contains search results\n    var results = base["postquery"];\n    if (results == null || results.PrimaryQueryResult == null) {\n      return;\n    }\n    // Clear the results\n    base["postquery"].results = base["postquery"].results || [];\n    // Parse the results\n    for (var i = 0; i < results.PrimaryQueryResult.RelevantResults.RowCount; i++) {\n      var data = {};\n      var result = results.PrimaryQueryResult.RelevantResults.Table.Rows.results[i];\n      // Parse the cells\n      for (var j = 0; j < result.Cells.results.length; j++) {\n        var cell = result.Cells.results[j];\n        // Add the key/value\n        data[cell.Key] = cell.Value;\n      }\n      // Append the result\n      base["postquery"].results.push(data);\n    }\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/utils/helper.js?')},"./build/utils/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./requestType */ "./build/utils/requestType.js"), exports);\n__exportStar(__webpack_require__(/*! ./helper */ "./build/utils/helper.js"), exports);\n__exportStar(__webpack_require__(/*! ./base */ "./build/utils/base.js"), exports);\n__exportStar(__webpack_require__(/*! ./batch */ "./build/utils/batch.js"), exports);\n__exportStar(__webpack_require__(/*! ./methodInfo */ "./build/utils/methodInfo.js"), exports);\n__exportStar(__webpack_require__(/*! ./oData */ "./build/utils/oData.js"), exports);\n__exportStar(__webpack_require__(/*! ./request */ "./build/utils/request.js"), exports);\n__exportStar(__webpack_require__(/*! ./targetInfo */ "./build/utils/targetInfo.js"), exports);\n__exportStar(__webpack_require__(/*! ./xhrRequest */ "./build/utils/xhrRequest.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/utils/index.js?')},"./build/utils/methodInfo.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.MethodInfo = void 0;\nvar _1 = __webpack_require__(/*! . */ "./build/utils/index.js");\n/*********************************************************************************************************************************/\n// Method Information\n// This class will create the method information for the request.\n/*********************************************************************************************************************************/\nvar MethodInfo = /** @class */function () {\n  /*********************************************************************************************************************************/\n  // Constructor\n  /*********************************************************************************************************************************/\n  function MethodInfo(methodName, methodInfo, args) {\n    // Default the properties\n    this.methodInfo = methodInfo;\n    this.methodInfo.argValues = args;\n    this.methodInfo.name = typeof this.methodInfo.name === "string" ? this.methodInfo.name : methodName;\n    // Generate the parameters\n    this.generateParams();\n    // Generate the url\n    this.methodUrl = this.generateUrl();\n  }\n  Object.defineProperty(MethodInfo.prototype, "appendEndpointFl", {\n    /*********************************************************************************************************************************/\n    // Public Properties\n    /*********************************************************************************************************************************/\n    // Flag to determine if this method replaces the endpoint\n    get: function get() {\n      return this.methodInfo.appendEndpointFl ? true : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "appendRequest", {\n    // Flag to determine if we are appending the name or adding a "/" to the request url\n    get: function get() {\n      return this.methodInfo.appendRequest;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "body", {\n    // The data passed through the body of the request\n    get: function get() {\n      return this.methodData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "getAllItemsFl", {\n    // Flag to determine if we are getting all items\n    get: function get() {\n      return this.methodInfo.getAllItemsFl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "replaceEndpointFl", {\n    // Flag to determine if this method replaces the endpoint\n    get: function get() {\n      return this.methodInfo.replaceEndpointFl ? true : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "requestMethod", {\n    // The request method\n    get: function get() {\n      // Return the request method if it exists\n      if (typeof this.methodInfo.requestMethod === "string") {\n        return this.methodInfo.requestMethod;\n      }\n      // Determine the request method, based on the request type\n      switch (this.methodInfo.requestType) {\n        case _1.RequestType.Delete:\n        case _1.RequestType.Post:\n        case _1.RequestType.PostBodyNoArgs:\n        case _1.RequestType.PostReplace:\n        case _1.RequestType.PostReplaceWithData:\n        case _1.RequestType.PostWithArgs:\n        case _1.RequestType.PostWithArgsAndData:\n        case _1.RequestType.PostWithArgsInBody:\n        case _1.RequestType.PostWithArgsInQS:\n        case _1.RequestType.PostWithArgsInQSAsVar:\n        case _1.RequestType.PostWithArgsValueOnly:\n          return "POST";\n        default:\n          return "GET";\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "url", {\n    // The url of the method and parameters\n    get: function get() {\n      return this.methodUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "passDataInBody", {\n    /*********************************************************************************************************************************/\n    // Private Variables\n    /*********************************************************************************************************************************/\n    get: function get() {\n      return this.methodInfo.requestType == _1.RequestType.GetWithArgsInBody || this.methodInfo.requestType == _1.RequestType.PostBodyNoArgs || this.methodInfo.requestType == _1.RequestType.PostWithArgsInBody;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "passDataInQS", {\n    get: function get() {\n      return this.methodInfo.requestType == _1.RequestType.GetWithArgsInQS || this.methodInfo.requestType == _1.RequestType.PostWithArgsInQS;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "passDataInQSAsVar", {\n    get: function get() {\n      return this.methodInfo.requestType == _1.RequestType.GetWithArgsInQSAsVar || this.methodInfo.requestType == _1.RequestType.PostWithArgsInQSAsVar;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "isTemplate", {\n    get: function get() {\n      return this.methodInfo.data ? true : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MethodInfo.prototype, "replace", {\n    get: function get() {\n      return this.methodInfo.requestType == _1.RequestType.GetReplace || this.methodInfo.requestType == _1.RequestType.GraphGetReplace || this.methodInfo.requestType == _1.RequestType.PostReplace || this.methodInfo.requestType == _1.RequestType.GraphPostReplace;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /*********************************************************************************************************************************/\n  // Private Methods\n  /*********************************************************************************************************************************/\n  // Method to generate the method input parameters\n  MethodInfo.prototype.generateParams = function () {\n    var maxArgNames = 0;\n    var params = {};\n    // Ensure values exist\n    if (this.methodInfo.argValues == null) {\n      return;\n    }\n    // See if the argument names exist\n    if (this.methodInfo.argNames) {\n      // Set the max arguments\n      maxArgNames = this.methodInfo.argNames.length - (this.methodInfo.requestType == _1.RequestType.PostWithArgsAndData || this.methodInfo.requestType == _1.RequestType.PostReplaceWithData ? 1 : 0);\n      // Parse the argument names\n      for (var i = 0; i < maxArgNames && i < this.methodInfo.argValues.length; i++) {\n        var name_1 = this.methodInfo.argNames[i];\n        var value = this.methodInfo.argValues[i];\n        // Copy the parameter value\n        switch (_typeof(this.methodInfo.argValues[i])) {\n          case "boolean":\n            params[name_1] = this.methodInfo.argValues[i] ? "true" : "false";\n            break;\n          case "number":\n            params[name_1] = this.methodInfo.argValues[i];\n            break;\n          //case "string":\n          //params[name] = this.isTemplate || this.replace ? value : "\'" + value + "\'";\n          //break;\n          default:\n            params[name_1] = value;\n            break;\n        }\n      }\n    }\n    // See if the method has parameters\n    var isEmpty = true;\n    for (var k in params) {\n      isEmpty = false;\n      break;\n    }\n    this.methodParams = isEmpty ? null : params;\n    // See if method parameters exist\n    if (this.methodParams) {\n      // See if a template is defined for the method data\n      if (this.isTemplate) {\n        // Ensure the object is a string\n        if (typeof this.methodInfo.data !== "string") {\n          // Stringify the object\n          this.methodInfo.data = JSON.stringify(this.methodInfo.data);\n        }\n        // Parse the arguments\n        for (var key in this.methodParams) {\n          // Replace the argument in the template\n          this.methodInfo.data = this.methodInfo.data.replace("[[" + key + "]]", this.methodParams[key].replace(/"/g, \'\\\\"\').replace(/\\n/g, ""));\n        }\n        // For custom format properties of fields, we need to escape \\\\quot;\n        // Replace \\\\&quot; with \\\\\\\\&quot;\n        var methodData = this.methodInfo.data.replace(/\\\\&quot;/g, \'\\\\\\\\&quot;\');\n        // Set the method data\n        this.methodData = typeof methodData === "string" ? methodData : JSON.parse(methodData);\n      }\n    }\n    // See if argument values exist\n    if (this.methodInfo.argValues && this.methodInfo.argValues.length > 0) {\n      // See if argument names exist\n      if (this.methodInfo.argNames == null || this.methodInfo.requestType == _1.RequestType.PostBodyNoArgs) {\n        // Set the method data to first argument value\n        this.methodData = this.methodInfo.argValues[0];\n      }\n      // Else, see if we are passing arguments outside of the parameters\n      else if (this.methodInfo.argValues.length > maxArgNames) {\n        // Set the method data to the next available argument value\n        this.methodData = this.methodInfo.argValues[maxArgNames];\n      }\n    }\n    // See if the metadata type exists\n    if (this.methodInfo.metadataType) {\n      // See if parameters exist\n      if (this.methodInfo.argNames && this.methodInfo.requestType != _1.RequestType.PostBodyNoArgs && typeof (this.methodData || this.methodParams)[this.methodInfo.argNames[0]] !== "string") {\n        // Append the metadata to the first parameter, if it doesn\'t exist\n        (this.methodData || this.methodParams)[this.methodInfo.argNames[0]]["__metadata"] = (this.methodData || this.methodParams)[this.methodInfo.argNames[0]]["__metadata"] || {\n          "type": this.methodInfo.metadataType\n        };\n      } else {\n        // Append the metadata to the parameters, if it doesn\'t exist\n        (this.methodData || this.methodParams)["__metadata"] = (this.methodData || this.methodParams)["__metadata"] || {\n          "type": this.methodInfo.metadataType\n        };\n      }\n    }\n  };\n  // Method to generate the method and parameters as a url\n  MethodInfo.prototype.generateUrl = function () {\n    var url = this.methodInfo.name;\n    // See if we are deleting the object\n    if (this.methodInfo.requestType == _1.RequestType.Delete) {\n      // Default the value\n      url = "deleteObject";\n    }\n    // See if we are passing the data in the body\n    if (this.passDataInBody) {\n      var data = this.methodData || this.methodParams;\n      // Stringify the data to be passed in the body\n      this.methodData = data ? typeof data === "string" ? data : JSON.stringify(data) : null;\n    }\n    // See if we are passing the data in the query string as a variable\n    if (this.passDataInQSAsVar) {\n      var data = this.methodParams || this.methodData;\n      // Append the parameters in the query string\n      url += "(@v)?@v=" + (typeof data === "string" ? "\'" + encodeURIComponent(data) + "\'" : JSON.stringify(data));\n    }\n    // See if we are replacing the arguments\n    if (this.replace) {\n      // Parse the arguments\n      for (var key in this.methodParams) {\n        // Replace the argument in the url\n        url = url.replace("[[" + key + "]]", encodeURIComponent(this.methodParams[key]));\n      }\n    }\n    // Else, see if this is an odata request\n    else if (this.methodInfo.requestType == _1.RequestType.OData) {\n      var oData = new _1.OData(this.methodParams["oData"]);\n      // Update the url\n      url = "?" + oData.QueryString;\n      // Set the get all items Flag\n      this.methodInfo.getAllItemsFl = oData.GetAllItems;\n    }\n    // Else, see if we are not passing the data in the body or query string as a variable\n    else if (!this.passDataInBody && !this.passDataInQSAsVar) {\n      var params = "";\n      // Ensure data exists\n      var data = this.methodParams || this.methodData;\n      if (data) {\n        // Ensure the data is an object\n        data = data && _typeof(data) === "object" ? data : {\n          value: data\n        };\n        // Parse the parameters\n        for (var name_2 in data) {\n          var value = data[name_2];\n          value = typeof value === "string" ? "\'" + value.replace(/\'/g, "\'\'") + "\'" : value;\n          switch (this.methodInfo.requestType) {\n            // Append the value only\n            case _1.RequestType.GetWithArgsValueOnly:\n            case _1.RequestType.PostWithArgsValueOnly:\n              params += value + ", ";\n              break;\n            // Append the parameter and value\n            default:\n              params += name_2 + "=" + value + ", ";\n              break;\n          }\n        }\n      }\n      // See if we are passing data in the query string\n      if (this.passDataInQS) {\n        // Set the url\n        url += params.length > 0 ? "?" + params.replace(/, $/, "&") : "";\n      } else {\n        // Set the url\n        url += params.length > 0 ? "(" + params.replace(/, $/, "") + ")" : "";\n      }\n    }\n    // Return the url\n    return url;\n  };\n  return MethodInfo;\n}();\nexports.MethodInfo = MethodInfo;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/methodInfo.js?')},"./build/utils/oData.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.OData = void 0;\n/**\n * OData\n */\nvar OData = /** @class */function () {\n  /*********************************************************************************************************************************/\n  // Constructor\n  /*********************************************************************************************************************************/\n  // The class constructor\n  function OData(oData) {\n    // Default the Variables\n    this._custom = oData && oData.Custom ? oData.Custom : null;\n    this._expand = oData && oData.Expand ? oData.Expand : [];\n    this._filter = oData && oData.Filter ? oData.Filter : null;\n    this._getAllItems = oData && oData.GetAllItems ? oData.GetAllItems : false;\n    this._orderBy = oData && oData.OrderBy ? oData.OrderBy : [];\n    this._search = oData && oData.Search ? oData.Search : null;\n    this._select = oData && oData.Select ? oData.Select : [];\n    this._skip = oData && oData.Skip ? oData.Skip : null;\n    this._top = oData && oData.Top ? oData.Top : null;\n  }\n  Object.defineProperty(OData.prototype, "Custom", {\n    /*********************************************************************************************************************************/\n    // Properties\n    /*********************************************************************************************************************************/\n    // Custom\n    get: function get() {\n      return this._custom;\n    },\n    set: function set(value) {\n      this._custom = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Expand", {\n    // Expand\n    get: function get() {\n      return this._expand;\n    },\n    set: function set(value) {\n      this._expand = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Filter", {\n    // Filter\n    get: function get() {\n      return this._filter;\n    },\n    set: function set(value) {\n      this._filter = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "GetAllItems", {\n    // Flag to get all items\n    get: function get() {\n      return this._getAllItems;\n    },\n    set: function set(value) {\n      this._getAllItems = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "OrderBy", {\n    // Order By\n    get: function get() {\n      return this._orderBy;\n    },\n    set: function set(value) {\n      this._orderBy = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "QueryString", {\n    // Query String\n    get: function get() {\n      var qs = "";\n      var values = [];\n      // Get the query string values for the properties\n      values.push(this.getQSValue("$select", this._select));\n      values.push(this.getQSValue("$orderby", this._orderBy));\n      this._top ? values.push("$top=" + this._top) : null;\n      this._skip ? values.push("$skip=" + this._skip) : null;\n      this._filter ? values.push("$filter=" + this._filter) : null;\n      this._search ? values.push("$search=" + this._search) : null;\n      values.push(this.getQSValue("$expand", this._expand));\n      this._custom ? values.push(this._custom) : null;\n      // Parse the values\n      for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        // Ensure a value exists\n        if (value && value != "") {\n          // Append the query string value\n          qs += (qs == "" ? "" : "&") + value;\n        }\n      }\n      // Return the query string\n      return qs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Search", {\n    // Search\n    get: function get() {\n      return this._search;\n    },\n    set: function set(value) {\n      this._search = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Select", {\n    // Select\n    get: function get() {\n      return this._select;\n    },\n    set: function set(value) {\n      this._select = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Skip", {\n    // Skip\n    get: function get() {\n      return this._skip;\n    },\n    set: function set(value) {\n      this._skip = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OData.prototype, "Top", {\n    // Top\n    get: function get() {\n      return this._top;\n    },\n    set: function set(value) {\n      this._top = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /*********************************************************************************************************************************/\n  // Methods\n  /*********************************************************************************************************************************/\n  // Method to convert the array of strings to a query string value.\n  OData.prototype.getQSValue = function (qsKey, keys) {\n    // Return the query string\n    return keys.length > 0 ? qsKey + "=" + keys.join(",") : "";\n  };\n  return OData;\n}();\nexports.OData = OData;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/oData.js?')},"./build/utils/request.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Request = void 0;\nvar base_1 = __webpack_require__(/*! ./base */ "./build/utils/base.js");\nvar batch_1 = __webpack_require__(/*! ./batch */ "./build/utils/batch.js");\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar executor_1 = __webpack_require__(/*! ../helper/executor */ "./build/helper/executor.js");\nvar helper_1 = __webpack_require__(/*! ./helper */ "./build/utils/helper.js");\nvar mapper_1 = __webpack_require__(/*! ../mapper */ "./build/mapper/index.js");\nvar requestType_1 = __webpack_require__(/*! ./requestType */ "./build/utils/requestType.js");\nvar targetInfo_1 = __webpack_require__(/*! ./targetInfo */ "./build/utils/targetInfo.js");\nvar xhrRequest_1 = __webpack_require__(/*! ./xhrRequest */ "./build/utils/xhrRequest.js");\n/**\n * Request\n */\nexports.Request = {\n  // Method to add the methods to base object\n  addMethods: function addMethods(base, data, resultsObjType) {\n    var _a, _b;\n    var obj = base;\n    var isCollection = data.results && data.results.length > 0;\n    var methods = null;\n    // Determine the metadata\n    var metadata = isCollection ? data.results[0].__metadata : data.__metadata;\n    // Get the object type\n    var objType = metadata && metadata.type ? metadata.type : obj.targetInfo.endpoint;\n    var isV2 = ((_b = (_a = obj === null || obj === void 0 ? void 0 : obj.parent) === null || _a === void 0 ? void 0 : _a.targetInfo) === null || _b === void 0 ? void 0 : _b.endpoint.startsWith("_api/v2.0/")) || obj["@odata.context"] || objType.startsWith("@odata.context") ? true : false;\n    if (isV2) {\n      // See if we are overriding the object type\n      if (resultsObjType) {\n        // Update the object type\n        objType = resultsObjType;\n      } else {\n        // Get the object type from the context\n        var metadataType = obj["@odata.context"] || objType;\n        var values = metadataType.split("_api/v2.0/$metadata#");\n        if (values.length > 1) {\n          objType = values[1];\n        } else {\n          values = metadataType.split("/");\n          objType = values[values.length - 1].split("?")[0];\n        }\n        // Update the object type if it\'s a single instance\n        objType = objType.replace("s/$entity", "");\n      }\n      // Get the methods for this object type\n      methods = mapper_1.MapperV2[objType];\n      console.log("[gd-sprest] v2 response detected. Type is: " + objType, methods);\n    }\n    // Else, get the methods from the default mapper, otherwise get it from the custom mapper\n    else if ((methods = mapper_1.Mapper[objType + (isCollection ? ".Collection" : "")]) == null) {\n      // Determine the object type\n      var values = objType.split(\'/\');\n      objType = values[values.length - 1];\n      values = objType.split(\'.\');\n      objType = values[values.length - 1].toLowerCase();\n      objType += isCollection ? "s" : "";\n      // See if this is a graph request\n      if (/^graph/.test(objType)) {\n        // Do nothing\n      }\n      // Else, see if the base is a field\n      else if ((/^field/.test(objType) || /fields?$/.test(objType)) && objType != "fieldlinks" && objType != "fields") {\n        // Update the type\n        objType = "field" + (isCollection ? "s" : "");\n      }\n      // Else, see if the base is an item\n      else if (/item$/.test(objType)) {\n        // Update the type\n        objType = "listitem";\n      }\n      // Else, see if the base is an item collection\n      else if (/items$/.test(objType)) {\n        // Update the type\n        objType = "items";\n      }\n      // Else, see if this is a tenant app\n      else if (/corporatecatalogappmetadata/.test(objType)) {\n        // Update the type\n        objType = "tenantapp";\n      }\n      // Else, see if this is a tenant app collection\n      else if (/corporatecatalogappmetadatas/.test(objType)) {\n        // Update the type\n        objType = "tenantapps";\n      }\n      // Get the methods for the base object\n      methods = mapper_1.Mapper_Custom[objType];\n    }\n    // Ensure methods exist\n    if (methods) {\n      // Parse the methods\n      for (var methodName in methods) {\n        // Get the method information\n        var methodInfo = methods[methodName] ? methods[methodName] : {};\n        // See if the base is the "Properties" definition for the object\n        if (methodName == "properties") {\n          // Parse the properties\n          for (var _i = 0, methodInfo_1 = methodInfo; _i < methodInfo_1.length; _i++) {\n            var property = methodInfo_1[_i];\n            var propInfo = property.split("|");\n            // Get the metadata type\n            var propName = propInfo[0];\n            var propType = propInfo.length > 1 ? propInfo[1] : null;\n            var subPropName = propInfo.length > 2 ? propInfo[2] : null;\n            var subPropType = propInfo.length > 3 ? propInfo[3] : null;\n            // See if the property is null or is a collection\n            if (obj[propName] == null || obj[propName].__deferred && obj[propName].__deferred.uri) {\n              // See if the base property has a sub-property defined for it\n              if (propInfo.length == 4) {\n                // Update the \' char in the property name\n                subPropName = subPropName.replace(/\'/g, "\\\\\'");\n                // Add the property\n                obj[propName] = new Function("name", "name = name ? \'" + propName + subPropName + "\'.replace(/\\\\[Name\\\\]/g, name.toString().replace(/\\\'/g, \\"\'\'\\")) : null;" + "return this.getProperty(name ? name : \'" + propName + "\', name ? \'" + subPropType + "\' : \'" + propType + "\');");\n              } else {\n                // Add the property\n                obj[propName] = new Function("return this.getProperty(\'" + propName + "\', \'" + propType + "\');");\n              }\n            }\n          }\n          // Continue the loop\n          continue;\n        }\n        // See if the base object has a dynamic metadata type\n        if (typeof methodInfo.metadataType === "function") {\n          // Clone the object properties\n          methodInfo = JSON.parse(JSON.stringify(methodInfo));\n          // Set the metadata type\n          methodInfo.metadataType = methods[methodName].metadataType(obj);\n        }\n        // Add the method to the object\n        obj[methodName] = obj[methodName] || new Function("return this.executeMethod(\'" + methodName + "\', " + JSON.stringify(methodInfo) + ", arguments);");\n      }\n    }\n  },\n  // Method to add properties to the base object\n  addProperties: function addProperties(base, data) {\n    // Parse the data properties\n    for (var key in data) {\n      var value = data[key];\n      // Skip the results\n      if (key == "results") {\n        continue;\n      }\n      // See if this is the metadata\n      if (key == "__metadata") {\n        // Set the etag value and continue\n        base["etag"] = value["etag"];\n        continue;\n      }\n      // See if this is the etag\n      if (key == "@odata.etag") {\n        // Set the etag value and continue\n        base["etag"] = value[key];\n        continue;\n      }\n      // See if the base is a collection property\n      if (value && value.__deferred && value.__deferred.uri) {\n        // Generate a method for the base property\n        base["get_" + key] = base["get_" + key] ? base["get_" + key] : new Function("return this.getCollection(\'" + key + "\', arguments);");\n      } else {\n        // Set the property, based on the property name\n        switch (key) {\n          case "ClientPeoplePickerResolveUser":\n          case "ClientPeoplePickerSearchUser":\n            base[key] = JSON.parse(value);\n            break;\n          default:\n            // Append the property to the base object\n            base[key] = value;\n            break;\n        }\n        // See if the base is a collection\n        if (base[key] && base[key].results) {\n          // Ensure the collection is an object\n          if (base[key].results.length == 0 || _typeof(base[key].results[0]) === "object") {\n            // Create the base property as a new request\n            var objCollection = new base_1.Base(base.targetInfo);\n            objCollection["results"] = base[key].results;\n            // See no results exist\n            if (objCollection["results"].length == 0) {\n              // Set the metadata type to the key\n              objCollection["__metadata"] = {\n                type: key\n              };\n            }\n            // Update the endpoint for the base request to point to the base property\n            objCollection.targetInfo.endpoint = (objCollection.targetInfo.endpoint.split("?")[0] + "/" + key).replace(/\\//g, "/");\n            // Add the methods\n            exports.Request.addMethods(objCollection, objCollection);\n            // Update the data collection\n            helper_1.Helper.updateDataCollection(base, objCollection["results"]);\n            // Update the expanded properties\n            helper_1.Helper.updateExpandedProperties(base);\n            // Update the property\n            base[key] = objCollection;\n          }\n        }\n      }\n    }\n  },\n  // Method to execute the request\n  execute: function execute(base, args) {\n    var reject = null;\n    var resolve = null;\n    var waitFl = false;\n    // Parse the arguments\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i];\n      // Check the type\n      switch (_typeof(arg)) {\n        case "boolean":\n          // Set the wait flag\n          waitFl = arg;\n          break;\n        case "function":\n          // See if the resolve method exists\n          if (resolve) {\n            // Set the reject method\n            reject = arg;\n          } else {\n            // Set the resolve method\n            resolve = arg;\n          }\n          break;\n      }\n    }\n    // Set the base\n    base.base = base.base || base;\n    // Set the base responses\n    base.base.responses = base.base.responses || [];\n    // Set the base wait flags\n    base.base.waitFlags = base.base.waitFlags || [];\n    // Set the response index\n    base.responseIndex = base.base.responses.length;\n    // Add this object to the responses\n    base.base.responses.push(base);\n    // See if we are waiting for the responses to complete\n    if (waitFl) {\n      // Wait for the responses to execute\n      exports.Request.waitForRequestsToComplete(base, function () {\n        // Execute this request\n        exports.Request.executeRequest(base, true, function (response, errorFl) {\n          // See if there was an error\n          if (errorFl) {\n            // Set the wait flag\n            base.base.waitFlags[base.responseIndex] = true;\n            // Reject the request\n            reject ? reject(response) : null;\n          }\n          // Else, see if there is a resolve method\n          else if (resolve) {\n            // Execute the callback and see if it returns a promise\n            var returnVal = resolve(response);\n            var waitFunc = returnVal ? returnVal.done || returnVal.then : null;\n            if (waitFunc && typeof waitFunc === "function") {\n              // Wait for the promise to complete\n              waitFunc(function () {\n                // Set the wait flag\n                base.base.waitFlags[base.responseIndex] = true;\n                // Set the base to this object, and clear requests\n                // This will ensure requests from this object do not conflict w/ this request\n                base.base = base;\n                base.base.responses = [];\n                base.base.waitFlags = [];\n                // Reset the base\n                base.base = (base.parent ? base.parent.base : null) || base.base;\n              });\n              // Do nothing\n              return;\n            }\n            // Set the wait flag\n            base.base.waitFlags[base.responseIndex] = true;\n            // Set the base to this object, and clear requests\n            // This will ensure requests from this object do not conflict w/ this request\n            base.base = base;\n            base.base.responses = [];\n            base.base.waitFlags = [];\n            // Reset the base\n            base.base = (base.parent ? base.parent.base : null) || base.base;\n          } else {\n            // Set the wait flag\n            base.base.waitFlags[base.responseIndex] = true;\n          }\n        });\n      }, base.responseIndex);\n    } else {\n      // Execute this request\n      exports.Request.executeRequest(base, true, function (response, errorFl) {\n        // See if there was an error\n        if (errorFl) {\n          // Set the wait flag\n          base.base.waitFlags[base.responseIndex] = true;\n          // Reject the request\n          reject ? reject(response) : null;\n        } else {\n          // Execute the resolve and see if it returns a promise\n          var returnVal = resolve ? resolve(response) : null;\n          if (returnVal && typeof returnVal.done === "function") {\n            // Wait for the promise to complete\n            returnVal.done(function () {\n              // Set the wait flag\n              base.base.waitFlags[base.responseIndex] = true;\n            });\n          } else {\n            // Set the wait flag\n            base.base.waitFlags[base.responseIndex] = true;\n          }\n        }\n      });\n    }\n    // See if this is a query request\n    if (base.targetInfo.requestType == requestType_1.RequestType.OData) {\n      // Return the parent for chaining purposes\n      return base.parent;\n    }\n    // Return this object\n    return base;\n  },\n  // Method to execute the request\n  executeRequest: function executeRequest(base, asyncFl, callback) {\n    // Execution method\n    var execute = function execute(targetInfo, batchIdx, onComplete) {\n      // See if this is an asynchronous request\n      if (asyncFl) {\n        // See if the not a batch request, and it already exists\n        if (base.xhr && !isBatchRequest) {\n          // Execute the callback\n          callback ? callback(base, false) : null;\n        } else {\n          // Create the request\n          base.xhr = new xhrRequest_1.XHRRequest(asyncFl, targetInfo, function () {\n            // Update the response and status\n            base.response = base.xhr.response;\n            base.status = base.xhr.status;\n            var errorFl = !(base.status >= 200 && base.status < 300);\n            // See if we are returning a file buffer\n            if (base.requestType == requestType_1.RequestType.GetBuffer) {\n              // Execute the callback\n              callback ? callback(base.response, errorFl) : null;\n            } else {\n              // Update the data object\n              exports.Request.updateDataObject(base, isBatchRequest, batchIdx);\n              // Ensure this isn\'t a batch request\n              if (!isBatchRequest) {\n                // See if this is an xml response\n                if (base.xml) {\n                  // Execute the callback\n                  callback ? callback(base, errorFl) : null;\n                } else {\n                  // Validate the data collection\n                  exports.Request.validateDataCollectionResults(base).then(\n                  // Success\n                  function () {\n                    // Execute the callback\n                    callback ? callback(base, errorFl) : null;\n                  },\n                  // Error\n                  function () {\n                    // Execute the callback and set the error flag\n                    callback ? callback(base, true) : null;\n                  });\n                }\n              }\n            }\n            // Call the event\n            onComplete ? onComplete() : null;\n          });\n        }\n      }\n      // Else, see if we already executed this request\n      else if (base.xhr) {\n        return base;\n      }\n      // Else, we haven\'t executed this request\n      else {\n        // Create the request\n        base.xhr = new xhrRequest_1.XHRRequest(asyncFl, targetInfo);\n        // Update the response and status\n        base.response = base.xhr.response;\n        base.status = base.xhr.status;\n        // See if we are returning a file buffer\n        if (base.requestType == requestType_1.RequestType.GetBuffer) {\n          // Return the response\n          return base.response;\n        }\n        // Update the base object\n        exports.Request.updateDataObject(base, isBatchRequest, batchIdx);\n        // See if the base is a collection and has more results\n        if (base["@odata.nextLink"] || base["d"] && base["d"].__next) {\n          // Add the "next" method to get the next set of results\n          base["next"] = new Function("return this.getNextSetOfResults();");\n        }\n        // Call the event\n        onComplete ? onComplete() : null;\n        // Return the base object\n        return base;\n      }\n    };\n    // See if this is a batch request\n    var isBatchRequest = base.base && base.base.batchRequests && base.base.batchRequests.length > 0;\n    if (isBatchRequest) {\n      var batchIdx_1 = 0;\n      // Parse the requests\n      (0, executor_1.Executor)(base.base.batchRequests, function (batchRequest) {\n        // Return a promise\n        return new Promise(function (resolve) {\n          // Execute the request\n          execute(batch_1.Batch.getTargetInfo(base.targetInfo.url, batchRequest, base.targetInfo.requestDigest, base.targetInfo.endpoint.indexOf("_api/v2") >= 0), batchIdx_1++, function () {\n            // Resolve the request\n            resolve(null);\n          });\n        });\n      }).then(function () {\n        // Execute the callback if it exists\n        callback ? callback(base.base.batchRequests, false) : null;\n        // Clear the batch requests\n        base.base.batchRequests = null;\n      });\n    } else {\n      // Execute the request\n      return execute(new targetInfo_1.TargetInfo(base.targetInfo));\n    }\n  },\n  // Method to parse the xml\n  parseXML: function parseXML(xml, objData) {\n    if (objData === void 0) {\n      objData = {};\n    }\n    var results = null;\n    // See if the element has children\n    if (xml.hasChildNodes()) {\n      // Parse the child nodes\n      for (var i = 0; i < xml.childNodes.length; i++) {\n        var childNode = xml.childNodes[i];\n        var childPropName = childNode.nodeName.replace("d:", "");\n        // See if this is a text element\n        if (childPropName == "#text") {\n          // Return the value\n          return childNode.nodeValue;\n        }\n        // Else, see if this is a collection\n        else if (childPropName == "element") {\n          // Ensure the results exist\n          results = results || [];\n          // Append the object\n          results.push(exports.Request.parseXML(childNode));\n        } else {\n          // Read the value properties\n          var childType = childNode.getAttribute("m:type");\n          // Get the value\n          var value = exports.Request.parseXML(childNode);\n          if (value) {\n            // Update the value based on the type\n            switch (childType) {\n              // Boolean\n              case "Edm.Boolean":\n                value = value ? true : false;\n                break;\n              // Float\n              case "Edm.Decimal":\n              case "Edm.Double":\n                value = parseFloat(value);\n                break;\n              // Integer\n              case "Edm.Int16":\n              case "Edm.Int32":\n              case "Edm.Int64":\n                value = parseInt(value);\n                break;\n            }\n          }\n          // Parse the node\n          objData[childPropName] = value;\n        }\n      }\n    } else {\n      // Return the property value\n      return xml.nodeValue;\n    }\n    // Return the collection if it exists, otherwise the object\n    return results ? {\n      results: results\n    } : objData;\n  },\n  // Method to convert the input arguments into an object\n  updateDataObject: function updateDataObject(base, isBatchRequest, batchIdx) {\n    if (isBatchRequest === void 0) {\n      isBatchRequest = false;\n    }\n    if (batchIdx === void 0) {\n      batchIdx = 0;\n    }\n    // Ensure the request was successful\n    if (base.status >= 200 && base.status < 300) {\n      // Return if we are expecting a buffer\n      if (base.requestType == requestType_1.RequestType.GetBuffer) {\n        return;\n      }\n      // Parse the responses\n      var batchRequestIdx = 0;\n      var responses = isBatchRequest ? base.response.split("\\n") : [base.response];\n      for (var i = 0; i < responses.length; i++) {\n        var data = null;\n        // Set the response\n        var response = responses[i];\n        response = response === "" && !isBatchRequest ? "{}" : response;\n        // Set the xml flag\n        var isXML = response.indexOf("<?xml") == 0;\n        if (isXML) {\n          // Append the response while data exists\n          while (responses[i + 1] && responses[i + 1].indexOf("--batchresponse") != 0) {\n            // Append the response\n            response += responses[++i];\n          }\n        }\n        // Try to convert the response\n        try {\n          data = isXML ? response.replace(/\\r/g, \'\') : JSON.parse(response);\n        } catch (ex) {\n          continue;\n        }\n        // Set the object based on the request type\n        var obj = isBatchRequest ? Object.create(base) : base;\n        // Set the exists flag\n        obj["existsFl"] = typeof obj["Exists"] === "boolean" ? obj["Exists"] : data.error == null;\n        // See if this is xml\n        if (isXML) {\n          var objData = {};\n          // Convert the xml to an object\n          var parser = new DOMParser();\n          var xmlDoc = parser.parseFromString(data, "application/xml").firstChild;\n          objData[xmlDoc.nodeName.replace("d:", "")] = exports.Request.parseXML(xmlDoc);\n          // See if this is a REST request\n          if (objData.entry && objData.entry.content && objData.entry.content["m:properties"]) {\n            // Set the object to the properties\n            objData = objData.entry.content["m:properties"];\n            // Update the metadata\n            helper_1.Helper.updateMetadata(obj, objData);\n            // Update the base object\'s properties\n            exports.Request.addProperties(obj, objData);\n            // Add the methods\n            exports.Request.addMethods(obj, objData, objData["@odata.context"]);\n            // Update the data collection\n            helper_1.Helper.updateDataCollection(obj, objData["results"]);\n            // Update the expanded properties\n            helper_1.Helper.updateExpandedProperties(obj);\n            // Update the search results\n            helper_1.Helper.updateSearchResults(obj);\n          } else {\n            // Update the object\n            obj = __assign(__assign({}, obj), objData);\n            // Update the search results\n            helper_1.Helper.updateSearchResults(obj);\n          }\n        }\n        // Else, see if the data properties exists\n        else if (data.d) {\n          // Save a reference to it\n          obj["d"] = data.d;\n          // Update the metadata\n          helper_1.Helper.updateMetadata(obj, data.d);\n          // Update the base object\'s properties\n          exports.Request.addProperties(obj, data.d);\n          // Add the methods\n          exports.Request.addMethods(obj, data.d, data["@odata.context"]);\n          // Update the data collection\n          helper_1.Helper.updateDataCollection(obj, data.d.results);\n          // Update the expanded properties\n          helper_1.Helper.updateExpandedProperties(obj);\n          // Update the search results\n          helper_1.Helper.updateSearchResults(obj);\n        }\n        // Else, see if this is a graph request\n        else if (data["@odata.context"]) {\n          // Save a reference to it\n          obj["d"] = data;\n          // Update the base object\'s properties\n          exports.Request.addProperties(obj, data);\n          // Add the methods\n          exports.Request.addMethods(obj, data, data["@odata.context"]);\n          // Update the data collection\n          helper_1.Helper.updateDataCollection(obj, data.value);\n        } else {\n          // Update the base object\'s properties\n          exports.Request.addProperties(obj, data);\n        }\n        // See if the batch request exists\n        if (isBatchRequest) {\n          // Get the batch request\n          var batchRequest = base.base.batchRequests[batchIdx][batchRequestIdx++];\n          if (batchRequest == null) {\n            // Update the batch indexes\n            batchIdx++;\n            batchRequestIdx = 0;\n            // Ensure the requests exist\n            if (base.base.batchRequests[batchIdx]) {\n              // Update the batch request\n              var batch = base.base.batchRequests[batchIdx];\n              batchRequest = batch ? batch[batchRequestIdx++] : null;\n            } else {\n              break;\n            }\n          }\n          // Ensure the batch request exists\n          if (batchRequest) {\n            // Set the response object\n            batchRequest.response = obj;\n          }\n        }\n      }\n      // See if this was a batch request\n      if (isBatchRequest) {\n        // Process the callbacks\n        batch_1.Batch.processCallbacks(base.base.batchRequests[batchIdx]);\n      }\n    }\n  },\n  // Method to validate the data collection results\n  validateDataCollectionResults: function validateDataCollectionResults(base) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      // Method to validate the request\n      var _request = function request(xhr, resolve) {\n        // Validate the response\n        if (xhr && xhr.status < 400 && typeof xhr.response === "string" && xhr.response.length > 0) {\n          // Try to convert the response and ensure the data property exists\n          var data = null;\n          try {\n            data = JSON.parse(xhr.response);\n          }\n          // Reject the request\n          catch (_a) {\n            reject();\n            return;\n          }\n          // Set the next item flag\n          base.nextFl = data["@odata.nextLink"] || data.d && data.d.__next;\n          // See if there are more items to get\n          if (base.nextFl) {\n            // See if we are getting all items in the base request\n            if (base.getAllItemsFl) {\n              // Create the target information to query the next set of results\n              var targetInfo = Object.create(base.targetInfo);\n              targetInfo.accessToken = base.targetInfo.accessToken || (base.xhr.isGraph ? lib_1.Graph.Token : null);\n              targetInfo.endpoint = "";\n              targetInfo.url = data["@odata.nextLink"] || data.d.__next;\n              // Create a new object\n              new xhrRequest_1.XHRRequest(true, new targetInfo_1.TargetInfo(targetInfo), function (xhr) {\n                var _a, _b, _c;\n                // Convert the response and see if values were returned\n                var data = JSON.parse(xhr.response);\n                if (data.d || data.value) {\n                  // Update the data collection\n                  helper_1.Helper.updateDataCollection(base, ((_a = data.d) === null || _a === void 0 ? void 0 : _a.results) || data.value);\n                  // Update the expanded properties\n                  helper_1.Helper.updateExpandedProperties(base);\n                  // Append the raw data results\n                  if ((_b = base["d"]) === null || _b === void 0 ? void 0 : _b.results) {\n                    base["d"].results = base["d"].results.concat((_c = data.d) === null || _c === void 0 ? void 0 : _c.results);\n                  } else {\n                    base["value"] = base["value"].concat(data.value);\n                  }\n                  // Validate the data collection\n                  _request(xhr, resolve);\n                } else {\n                  // Resolve the promise\n                  resolve();\n                }\n              });\n            } else {\n              // Add a method to get the next set of results\n              base["next"] = new Function("return this.getNextSetOfResults();");\n              // Resolve the promise\n              resolve();\n            }\n          } else {\n            // Resolve the promise\n            resolve();\n          }\n        } else {\n          // Resolve the promise\n          resolve();\n        }\n      };\n      // Execute the request\n      _request(base.xhr, resolve);\n    });\n  },\n  // Method to wait for the parent requests to complete\n  waitForRequestsToComplete: function waitForRequestsToComplete(base, callback, requestIdx) {\n    // Ensure a callback exists and is a function\n    if (typeof callback === "function") {\n      // Loop until the requests have completed\n      var intervalId_1 = lib_1.ContextInfo.window.setInterval(function () {\n        var counter = 0;\n        // Parse the responses to the requests\n        for (var i = 0; i < base.base.responses.length; i++) {\n          var response = base.base.responses[i];\n          // See if we are waiting until a specified index\n          if (requestIdx == counter++) {\n            break;\n          }\n          // Return if the request hasn\'t completed\n          if (response.xhr == null || !response.xhr.completedFl) {\n            return;\n          }\n          // Ensure the wait flag is set for the previous request\n          if (counter > 0 && base.base.waitFlags[counter - 1] != true) {\n            return;\n          }\n        }\n        // Clear the interval\n        lib_1.ContextInfo.window.clearInterval(intervalId_1);\n        // Execute the callback\n        callback();\n      }, 10);\n    }\n  }\n};\n\n//# sourceURL=webpack://gd-sprest/./build/utils/request.js?')},"./build/utils/requestType.js":function(__unused_webpack_module,exports){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.RequestType = void 0;\n/**\n * Request Type\n */\nexports.RequestType = {\n  // Requests\n  Custom: 0,\n  Delete: 1,\n  Merge: 2,\n  OData: 3,\n  // Get Requests\n  Get: 10,\n  GetBuffer: 11,\n  GetWithArgs: 12,\n  GetWithArgsInBody: 13,\n  GetWithArgsInQS: 14,\n  GetWithArgsInQSAsVar: 15,\n  GetWithArgsValueOnly: 16,\n  GetReplace: 17,\n  // Graph Requests\n  GraphGet: 20,\n  GraphGetReplace: 21,\n  GraphPost: 22,\n  GraphPostReplace: 23,\n  // Post Requests\n  Post: 30,\n  PostBodyNoArgs: 31,\n  PostWithArgs: 32,\n  PostWithArgsAndData: 33,\n  PostWithArgsInBody: 34,\n  PostWithArgsInQS: 35,\n  PostWithArgsInQSAsVar: 36,\n  PostWithArgsValueOnly: 37,\n  PostReplace: 38,\n  PostReplaceWithData: 39\n};\n\n//# sourceURL=webpack://gd-sprest/./build/utils/requestType.js?')},"./build/utils/targetInfo.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.TargetInfo = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\nvar _1 = __webpack_require__(/*! . */ "./build/utils/index.js");\n/**\n * Target Information\n */\nvar TargetInfo = /** @class */function () {\n  /*********************************************************************************************************************************/\n  // Constructor\n  /*********************************************************************************************************************************/\n  function TargetInfo(props) {\n    // Default the properties\n    this.props = props || {};\n    this.requestData = this.props.data;\n    this.requestHeaders = this.props.requestHeader;\n    this.requestMethod = this.props.method ? this.props.method : "GET";\n    // See if this is a graph request\n    if (this.isGraph) {\n      // Set the request method\n      this.requestMethod = this.props.requestType == _1.RequestType.Get || this.props.requestType == _1.RequestType.GetReplace || this.props.requestType == _1.RequestType.GetWithArgsValueOnly || this.props.requestType == _1.RequestType.GraphGet || this.props.requestType == _1.RequestType.GraphGetReplace || this.props.requestType == _1.RequestType.OData ? "GET" : "POST";\n      // Set the request url\n      this.requestUrl = [this.props.url || "", this.props.endpoint].join(\'/\').replace(/\\/\\//g, \'/\').replace(/\\/$/, \'\');\n    } else {\n      // Set the request url\n      this.setRESTRequestUrl();\n    }\n  }\n  Object.defineProperty(TargetInfo.prototype, "isBatchRequest", {\n    // Flag to determine if this is a batch request\n    get: function get() {\n      return this.props.endpoint == "$batch";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TargetInfo.prototype, "isGraph", {\n    // Flag to determine if this is a graph request\n    get: function get() {\n      var _a, _b;\n      return ((_a = this.props.endpoint) === null || _a === void 0 ? void 0 : _a.startsWith("_api/v2.0/")) || ((_b = this.props.url) === null || _b === void 0 ? void 0 : _b.indexOf("_api/v2.0/")) >= 0 || this.props.requestType == _1.RequestType.GraphGet || this.props.requestType == _1.RequestType.GraphPost || this.props.requestType == _1.RequestType.GraphGetReplace || this.props.requestType == _1.RequestType.GraphPostReplace;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /*********************************************************************************************************************************/\n  // Methods\n  /*********************************************************************************************************************************/\n  // Method to get the domain url\n  TargetInfo.prototype.getDomainUrl = function () {\n    var url = lib_1.ContextInfo.document ? lib_1.ContextInfo.document.location.href : "";\n    // See if this is an app web\n    if (lib_1.ContextInfo.isAppWeb) {\n      // Set the url to the host url\n      url = TargetInfo.getQueryStringValue("SPHostUrl") + "";\n    }\n    // Split the url and validate it\n    url = url.split(\'/\');\n    if (url && url.length >= 2) {\n      // Set the url\n      url = url[0] + "//" + url[2];\n    }\n    // Return the url\n    return url;\n  };\n  // Method to get a query string value\n  TargetInfo.getQueryStringValue = function (key) {\n    // Get the query string\n    var queryString = lib_1.ContextInfo.existsFl && lib_1.ContextInfo.document ? lib_1.ContextInfo.document.location.href.split(\'?\') : [""];\n    queryString = queryString.length > 1 ? queryString[1] : queryString[0];\n    // Parse the values\n    var values = queryString.split(\'&\');\n    for (var i = 0; i < values.length; i++) {\n      var keyValue = values[i].split(\'=\');\n      // Ensure a value exists\n      if (keyValue.length == 1) {\n        continue;\n      }\n      // See if this is the key we are looking for\n      if (decodeURIComponent(keyValue[0]) == key) {\n        return decodeURIComponent(keyValue[1]);\n      }\n    }\n    // Key was not found\n    return null;\n  };\n  // Method to set the request url for the REST API\n  TargetInfo.prototype.setRESTRequestUrl = function () {\n    var endpoint = this.props.endpoint ? "/" + this.props.endpoint : "";\n    var hostUrl = TargetInfo.getQueryStringValue("SPHostUrl");\n    var qs = (endpoint.indexOf("?") === -1 ? "?" : "&") + "@target=\'{{Target}}\'";\n    var template = "{{Url}}";\n    // See if the template is targeting the _vti_bin\n    if (endpoint.indexOf("_vti_bin") >= 0) {\n      template += "/{{EndPoint}}{{TargetUrl}}";\n    } else {\n      template += this.props.endpoint ? "/_api/{{EndPoint}}{{TargetUrl}}" : "";\n    }\n    // See if we are defaulting the url for the app web\n    if (lib_1.ContextInfo.existsFl && lib_1.ContextInfo.window.$REST && lib_1.ContextInfo.window.$REST.DefaultRequestToHostFl && lib_1.ContextInfo.isAppWeb && !this.props.overrideDefaultRequestToHostFl && this.props.url == null) {\n      // Default the url to the host web\n      this.props.url = hostUrl;\n    }\n    // Ensure the url exists\n    if (this.props.url == null) {\n      // Default the url to the current site/web url\n      this.props.url = this.props.defaultToWebFl == false ? lib_1.ContextInfo.siteAbsoluteUrl : lib_1.ContextInfo.webAbsoluteUrl;\n    }\n    // Else, see if the url already contains the full request\n    else if (/\\/_api\\//.test(this.props.url)) {\n      // Get the url\n      var url = this.props.url.toLowerCase().split("/_api/");\n      // See if this is the app web and we are executing against a different web\n      if (lib_1.ContextInfo.isAppWeb && url[0] != lib_1.ContextInfo.webAbsoluteUrl.toLowerCase()) {\n        // Set the request url\n        this.requestUrl = lib_1.ContextInfo.webAbsoluteUrl + "/_api/SP.AppContextSite(@target)/" + url[1] + endpoint + qs.replace(/{{Target}}/g, url[0]);\n      } else {\n        // Set the request url\n        this.requestUrl = this.props.url + (this.props.endpoint ? "/" + this.props.endpoint : "");\n      }\n      return;\n    }\n    // See if this is a relative url\n    if (this.props.url.indexOf("http") != 0) {\n      // Add the domain\n      this.props.url = this.getDomainUrl() + this.props.url;\n    }\n    // See if this is the app web, and we are executing against a different web\n    if (lib_1.ContextInfo.isAppWeb && this.props.url != lib_1.ContextInfo.webAbsoluteUrl) {\n      // Set the request url\n      this.requestUrl = template.replace(/{{Url}}/g, lib_1.ContextInfo.webAbsoluteUrl).replace(/{{EndPoint}}/g, "SP.AppContextSite(@target)" + endpoint).replace(/{{TargetUrl}}/g, qs.replace(/{{Target}}/g, this.props.url));\n    } else {\n      // Set the request url\n      this.requestUrl = template.replace(/{{Url}}/g, this.props.url).replace(/{{EndPoint}}/g, this.props.endpoint).replace(/{{TargetUrl}}/g, "");\n    }\n  };\n  return TargetInfo;\n}();\nexports.TargetInfo = TargetInfo;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/targetInfo.js?')},"./build/utils/xhrRequest.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.XHRRequest = void 0;\nvar lib_1 = __webpack_require__(/*! ../lib */ "./build/lib/index.js");\n/**\n * XML HTTP Request Class\n */\nvar XHRRequest = /** @class */function () {\n  /*********************************************************************************************************************************/\n  // Constructor\n  /*********************************************************************************************************************************/\n  function XHRRequest(asyncFl, targetInfo, callback, executeFl) {\n    if (executeFl === void 0) {\n      executeFl = true;\n    }\n    // Default the properties\n    this.asyncFl = asyncFl;\n    this.executeFl = executeFl;\n    this.headers = {};\n    this.onRequestCompleted = callback || targetInfo.props.callback;\n    this.targetInfo = targetInfo;\n    // Create the request\n    this.xhr = this.createXHR();\n    if (this.xhr) {\n      // Execute the request\n      this.execute();\n    } else {\n      // Default the headers\n      this.defaultHeaders();\n    }\n  }\n  Object.defineProperty(XHRRequest.prototype, "isBatch", {\n    /*********************************************************************************************************************************/\n    // Public Properties\n    /*********************************************************************************************************************************/\n    // Flag indicating if this is a batch request\n    get: function get() {\n      return this.targetInfo.isBatchRequest;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "isGraph", {\n    // Flag indicating if this is a graph request\n    get: function get() {\n      return this.targetInfo.isGraph;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "completedFl", {\n    // Flag indicating the request has completed\n    get: function get() {\n      return this.xhr ? this.xhr.readyState == 4 : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "response", {\n    // The response\n    get: function get() {\n      return this.xhr ? this.xhr.response : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "request", {\n    // The xml http request\n    get: function get() {\n      return this.xhr ? this.xhr : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "requestData", {\n    // The data send in the body of the request\n    get: function get() {\n      return this.targetInfo.requestData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "requestHeaders", {\n    // The request headers\n    get: function get() {\n      return this.headers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "requestInfo", {\n    // The request information\n    get: function get() {\n      // Return the request information\n      return {\n        data: this.targetInfo.requestData,\n        headers: this.headers,\n        method: this.targetInfo.requestMethod,\n        url: this.targetInfo.requestUrl\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "requestUrl", {\n    // The request url\n    get: function get() {\n      return this.xhr ? this.xhr.responseURL : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(XHRRequest.prototype, "status", {\n    // The request status\n    get: function get() {\n      return this.xhr ? this.xhr.status : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /*********************************************************************************************************************************/\n  // Private Methods\n  /*********************************************************************************************************************************/\n  // Method to create the xml http request\n  XHRRequest.prototype.createXHR = function () {\n    // See if the generic object doesn\'t exist\n    if (typeof XMLHttpRequest !== "undefined") {\n      // Create an instance of the xml http request object\n      return new XMLHttpRequest();\n    }\n    // Try to create the request\n    try {\n      return new ActiveXObject("Msxml2.XMLHTTP.6.0");\n    } catch (e) {}\n    // Try to create the request\n    try {\n      return new ActiveXObject("Msxml2.XMLHTTP.3.0");\n    } catch (e) {}\n    // Try to create the request\n    try {\n      return new ActiveXObject("Microsoft.XMLHTTP");\n    } catch (e) {}\n    // Log an error\n    console.error("This browser does not support xml http requests.");\n  };\n  // Method to default the request headers\n  XHRRequest.prototype.defaultHeaders = function (requestDigest) {\n    var ifMatchExists = false;\n    // See if the custom headers exist\n    if (this.targetInfo.requestHeaders) {\n      // Parse the custom headers\n      for (var header in this.targetInfo.requestHeaders) {\n        // Add the header\n        this.xhr ? this.xhr.setRequestHeader(header, this.targetInfo.requestHeaders[header]) : null;\n        this.headers[header] = this.targetInfo.requestHeaders[header];\n        // See if this is the "IF-MATCH" header\n        ifMatchExists = ifMatchExists || header.toUpperCase() == "IF-MATCH";\n      }\n    } else {\n      // See if this is a graph request\n      if (this.targetInfo.isGraph) {\n        // Set the default headers\n        this.xhr ? this.xhr.setRequestHeader("Accept", "application/json") : null;\n        this.xhr ? this.xhr.setRequestHeader("Content-Type", "application/json") : null;\n        this.headers["Accept"] = "application/json";\n        this.headers["Content-Type"] = "application/json";\n      } else {\n        // Set the default headers\n        this.xhr ? this.xhr.setRequestHeader("Accept", "application/json;odata=verbose") : null;\n        this.xhr ? this.xhr.setRequestHeader("Content-Type", "application/json;odata=verbose") : null;\n        this.headers["Accept"] = "application/json;odata=verbose";\n        this.headers["Content-Type"] = "application/json;odata=verbose";\n      }\n    }\n    // See if we are disabling cache\n    if (this.targetInfo.props.disableCache) {\n      // Add the header\n      this.xhr ? this.xhr.setRequestHeader("Cache-Control", "no-cache") : null;\n      this.headers["Cache-Control"] = "no-cache";\n    }\n    // See if this is a graph request\n    if (this.targetInfo.isGraph) {\n      // Ensure the access token exists\n      var accessToken = this.targetInfo.props.accessToken || lib_1.Graph.Token;\n      if (accessToken) {\n        // Set the authorization\n        this.xhr ? this.xhr.setRequestHeader("Authorization", "bearer " + accessToken) : null;\n        this.headers["Authorization"] = "bearer " + accessToken;\n      } else {\n        // Set the request digest\n        this.xhr ? this.xhr.setRequestHeader("X-RequestDigest", requestDigest) : null;\n        requestDigest ? this.headers["X-RequestDigest"] = requestDigest : null;\n      }\n    } else {\n      // See if custom headers were not defined\n      if (this.targetInfo.requestHeaders == null) {\n        // Set the method by default\n        this.xhr ? this.xhr.setRequestHeader("X-HTTP-Method", this.targetInfo.requestMethod) : null;\n        this.headers["X-HTTP-Method"] = this.targetInfo.requestMethod;\n      }\n      // Set the request digest\n      this.xhr ? this.xhr.setRequestHeader("X-RequestDigest", requestDigest) : null;\n      requestDigest ? this.headers["X-RequestDigest"] = requestDigest : null;\n      // See if we are deleting or updating the data\n      if (this.targetInfo.requestMethod == "DELETE" || this.targetInfo.requestMethod == "MERGE" && !ifMatchExists) {\n        // Append the header for deleting/updating\n        this.xhr ? this.xhr.setRequestHeader("IF-MATCH", "*") : null;\n        this.headers["IF-MATCH"] = "*";\n      }\n    }\n  };\n  // Method to execute the xml http request\n  XHRRequest.prototype.execute = function () {\n    var _this = this;\n    // Set the request digest\n    var requestDigest = this.targetInfo.props.requestDigest || "";\n    if (requestDigest == "") {\n      // Get the request digest\n      requestDigest = lib_1.ContextInfo.document ? lib_1.ContextInfo.document.querySelector("#__REQUESTDIGEST") : "";\n      requestDigest = requestDigest ? requestDigest.value : lib_1.ContextInfo.formDigestValue;\n    }\n    // See if we are targeting the context endpoint\n    if (this.targetInfo.props.endpoint == "contextinfo") {\n      // Execute the request\n      this.executeRequest(requestDigest);\n    }\n    // See if this is a post request and the request digest does not exist\n    else if (this.targetInfo.requestMethod != "GET" && requestDigest == "") {\n      // See if this is a synchronous request\n      if (!this.asyncFl) {\n        // Log\n        console.info("[gd-sprest] POST requests must include the request digest information for synchronous requests. This is due to the modern page not including this information on the page.");\n      } else {\n        // Get the context information\n        lib_1.ContextInfo.getWeb(this.targetInfo.props.url || document.location.pathname.substr(0, document.location.pathname.lastIndexOf(\'/\'))).execute(function (contextInfo) {\n          // Execute the request\n          _this.executeRequest(contextInfo.GetContextWebInformation.FormDigestValue);\n        });\n      }\n    } else {\n      // Execute the request\n      this.executeRequest(requestDigest);\n    }\n  };\n  // Method to execute the xml http request\n  XHRRequest.prototype.executeRequest = function (requestDigest) {\n    var _this = this;\n    // Ensure the xml http request exists\n    if (this.xhr == null) {\n      return null;\n    }\n    // Open the request\n    this.xhr.open(this.targetInfo.requestMethod == "GET" ? "GET" : "POST", this.targetInfo.requestUrl, this.asyncFl);\n    // See if we are making an asynchronous request\n    if (this.asyncFl) {\n      // Set the state change event\n      this.xhr.onreadystatechange = function () {\n        // See if the request has finished\n        if (_this.xhr.readyState == 4) {\n          // Execute the request completed event\n          _this.onRequestCompleted ? _this.onRequestCompleted(_this) : null;\n        }\n      };\n    }\n    // See if we the response type is an array buffer\n    // Note - Updating the response type is only allow for asynchronous requests. Any error will be thrown otherwise.\n    if (this.targetInfo.props.bufferFl && this.asyncFl) {\n      // Set the response type\n      this.xhr.responseType = "arraybuffer";\n    } else {\n      // Default the headers\n      this.defaultHeaders(requestDigest);\n      // Ensure the arguments passed is defaulted as a string, unless it\'s an array buffer\n      if (this.targetInfo.requestData && typeof this.targetInfo.requestData !== "string") {\n        // Stringify the data object, if it\'s not an array buffer\n        this.targetInfo.requestData = this.targetInfo.requestData.byteLength ? this.targetInfo.requestData : JSON.stringify(this.targetInfo.requestData);\n      }\n    }\n    // See if we are executing the request\n    if (this.executeFl) {\n      // Execute the request\n      this.targetInfo.props.bufferFl || this.targetInfo.requestData == null ? this.xhr.send() : this.xhr.send(this.targetInfo.requestData);\n    }\n  };\n  return XHRRequest;\n}();\nexports.XHRRequest = XHRRequest;\n\n//# sourceURL=webpack://gd-sprest/./build/utils/xhrRequest.js?')},"./build/v2/common.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.init = init;\nvar graph_1 = __webpack_require__(/*! ../lib/graph */ "./build/lib/graph.js");\n/**\n * Initialization for the v2 libs.\n */\nfunction init() {\n  // See if the token is already set\n  if (graph_1.Graph.Token) {\n    return;\n  }\n  // Default the cloud value\n  graph_1.Graph.Cloud = graph_1.Graph.Cloud || document.location.origin;\n  // Set the cloud access token\n  graph_1.Graph.getAccessToken(graph_1.Graph.Cloud, "SPO").execute(function (auth) {\n    // Set the access token\n    graph_1.Graph.Token = auth.access_token;\n  });\n}\n\n//# sourceURL=webpack://gd-sprest/./build/v2/common.js?')},"./build/v2/drive.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.drive = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ../lib/contextInfo */ "./build/lib/contextInfo.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nvar common_1 = __webpack_require__(/*! ./common */ "./build/v2/common.js");\n/**\n * Drive\n * Returns the default library for a site.\n */\nexports.drive = function (props) {\n  var _a;\n  if (props === void 0) {\n    props = {};\n  }\n  var drive = new utils_1.Base(props.targetInfo);\n  // Call the init event\n  (0, common_1.init)();\n  // Default the properties\n  drive.targetInfo.defaultToWebFl = true;\n  drive.targetInfo.requestType = utils_1.RequestType.GraphGet;\n  // Default the url\n  drive.targetInfo.url = props.siteUrl || ((_a = props === null || props === void 0 ? void 0 : props.targetInfo) === null || _a === void 0 ? void 0 : _a.url) || contextInfo_1.ContextInfo.webServerRelativeUrl;\n  // See if an endpoint is not defined\n  if (drive.targetInfo.endpoint == undefined) {\n    // Default the endpoint\n    drive.targetInfo.endpoint = "_api/v2.0/".concat(props.siteId ? "sites/" + props.siteId.replace(/[{}]/g, \'\') : "", "drive");\n    // Add the methods\n    utils_1.Request.addMethods(drive, {\n      __metadata: {\n        type: "@odata.context/_api/v2.0/$metadata#drive"\n      }\n    });\n  }\n  // Return the default library\n  return drive;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/v2/drive.js?')},"./build/v2/drives.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.drives = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ../lib/contextInfo */ "./build/lib/contextInfo.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nvar common_1 = __webpack_require__(/*! ./common */ "./build/v2/common.js");\n/**\n * Drives\n * Returns the libraries for a site.\n */\nexports.drives = function (props) {\n  var _a;\n  if (props === void 0) {\n    props = {};\n  }\n  var drives = new utils_1.Base(props.targetInfo);\n  // Call the init event\n  (0, common_1.init)();\n  // Default the properties\n  drives.targetInfo.defaultToWebFl = true;\n  drives.targetInfo.requestType = utils_1.RequestType.GraphGet;\n  // Default the url\n  drives.targetInfo.url = props.siteUrl || ((_a = props === null || props === void 0 ? void 0 : props.targetInfo) === null || _a === void 0 ? void 0 : _a.url) || contextInfo_1.ContextInfo.webServerRelativeUrl;\n  // See if an endpoint is not defined\n  if (drives.targetInfo.endpoint == undefined) {\n    // Default the endpoint\n    drives.targetInfo.endpoint = "_api/v2.0/".concat(props.siteId ? "sites/" + props.siteId.replace(/[{}]/g, \'\') : "", "drives");\n    // See if the drive id was provided\n    if (props.driveId) {\n      // Append the id\n      drives.targetInfo.endpoint += "/" + props.driveId;\n      // Add the methods\n      utils_1.Request.addMethods(drives, {\n        __metadata: {\n          type: "@odata.context/_api/v2.0/$metadata#drive"\n        }\n      });\n    } else {\n      // Add the methods\n      utils_1.Request.addMethods(drives, {\n        __metadata: {\n          type: "@odata.context/_api/v2.0/$metadata#drives"\n        }\n      });\n    }\n  }\n  // Return the libraries\n  return drives;\n};\n\n//# sourceURL=webpack://gd-sprest/./build/v2/drives.js?')},"./build/v2/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./drive */ "./build/v2/drive.js"), exports);\n__exportStar(__webpack_require__(/*! ./drives */ "./build/v2/drives.js"), exports);\n__exportStar(__webpack_require__(/*! ./sites */ "./build/v2/sites.js"), exports);\n\n//# sourceURL=webpack://gd-sprest/./build/v2/index.js?')},"./build/v2/sites.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.sites = void 0;\nvar contextInfo_1 = __webpack_require__(/*! ../lib/contextInfo */ "./build/lib/contextInfo.js");\nvar site_1 = __webpack_require__(/*! ../lib/site */ "./build/lib/site.js");\nvar web_1 = __webpack_require__(/*! ../lib/web */ "./build/lib/web.js");\nvar utils_1 = __webpack_require__(/*! ../utils */ "./build/utils/index.js");\nvar common_1 = __webpack_require__(/*! ./common */ "./build/v2/common.js");\n/**\n * Sites\n * The sites graph endpoint.\n */\nexports.sites = function (props) {\n  var _a;\n  if (props === void 0) {\n    props = {};\n  }\n  var sites = new utils_1.Base(props.targetInfo);\n  // Call the init event\n  (0, common_1.init)();\n  // Default the properties\n  sites.targetInfo.defaultToWebFl = true;\n  sites.targetInfo.endpoint = "_api/v2.0/sites";\n  sites.targetInfo.requestType = utils_1.RequestType.GraphGet;\n  // Default the url\n  sites.targetInfo.url = ((_a = props === null || props === void 0 ? void 0 : props.targetInfo) === null || _a === void 0 ? void 0 : _a.url) || contextInfo_1.ContextInfo.webServerRelativeUrl;\n  // See if the site id was provided\n  if (props.siteId) {\n    // Append the site id\n    sites.targetInfo.endpoint += "/" + props.siteId.replace(/^\\{|\\}$/g, \'\');\n    // See if the web id is provided\n    if (props.webId) {\n      // Append the web id\n      sites.targetInfo.endpoint += "," + props.webId.replace(/^\\{|\\}$/g, \'\');\n    }\n  }\n  // Add the methods\n  if (props.siteId || props.webId) {\n    utils_1.Request.addMethods(sites, {\n      __metadata: {\n        type: "@odata.context/_api/v2.0/$metadata#site"\n      }\n    });\n  } else {\n    utils_1.Request.addMethods(sites, {\n      __metadata: {\n        type: "@odata.context/_api/v2.0/$metadata#sites"\n      }\n    });\n  }\n  // Return the sites\n  return sites;\n};\n/** Returns the current site. */\nexports.sites.getCurrent = function () {\n  return (0, exports.sites)({\n    siteId: contextInfo_1.ContextInfo.siteId,\n    webId: contextInfo_1.ContextInfo.webId\n  });\n};\n/** Returns a drive */\nexports.sites.getDrive = function (props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Method to get the drive id\n    var getDriveId = function getDriveId(siteId, webId, libName) {\n      // Return a promise\n      return new Promise(function (resolve, reject) {\n        // Get the drives\n        (0, exports.sites)({\n          siteId: siteId,\n          webId: webId\n        }).drives().query({\n          Select: ["id", "name"]\n        }).execute(function (drives) {\n          // Parse the drives\n          for (var i = 0; i < drives.results.length; i++) {\n            var drive = drives.results[i];\n            // See if this is the target library\n            if (drive["name"].toLowerCase() == libName.toLowerCase()) {\n              // Resolve the request\n              resolve(drive.id);\n              return;\n            }\n          }\n          // Not found\n          reject();\n        }, reject);\n      });\n    };\n    // See if the site id exists\n    if (props.siteId) {\n      // Get the drive id\n      getDriveId(props.siteId, props.webId, props.listName).then(function (driveId) {\n        // Resolve the request\n        resolve((0, exports.sites)({\n          siteId: props.siteId\n        }).drives(driveId));\n      }, reject);\n    } else {\n      // Get the site/web ids\n      exports.sites.getIdByUrl(props.siteUrl).then(function (info) {\n        // Get the drive id\n        getDriveId(info.siteId, info.webId, props.listName).then(function (driveId) {\n          // Resolve the request\n          resolve((0, exports.sites)({\n            siteId: info.siteId,\n            webId: info.webId\n          }).drives(driveId));\n        }, reject);\n      }, reject);\n    }\n  });\n};\n/** Returns a file */\nexports.sites.getFile = function (props) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the site/web info\n    exports.sites.getIdByUrl(props.fileUrl).then(function (info) {\n      // Get the file\n      (0, web_1.Web)(info.webUrl, {\n        requestDigest: info.digestValue\n      }).getFileByUrl(props.fileUrl).execute(function (file) {\n        // See if the library was provided\n        if (props.listName) {\n          // Get the drive\n          exports.sites.getDrive({\n            listName: props.listName,\n            siteId: info.siteId,\n            siteUrl: info.siteUrl,\n            webId: info.webId\n          }).then(function (drive) {\n            // Resolve the request\n            resolve(drive.items(file.UniqueId));\n          }, reject);\n        } else {\n          // Get the list information\n          file.ListItemAllFields().query({\n            Expand: ["ParentList"],\n            Select: ["ParentList/Title"]\n          }).execute(function (item) {\n            // Get the drive\n            exports.sites.getDrive({\n              listName: item.ParentList.Title,\n              siteId: info.siteId,\n              siteUrl: info.siteUrl,\n              webId: info.webId\n            }).then(function (drive) {\n              // Resolve the request\n              resolve(drive.items(file.UniqueId));\n            }, reject);\n          });\n        }\n      }, reject);\n    }, reject);\n  });\n};\n/** Returns a list */\nexports.sites.getList = function (props) {\n  // Finds the list\n  var findList = function findList(siteId, webId, listName) {\n    // Return a promise\n    return new Promise(function (resolve, reject) {\n      (0, exports.sites)({\n        siteId: siteId,\n        webId: webId\n      }).lists().query({\n        Filter: "displayName eq \'" + listName + "\'",\n        Select: ["id"]\n      }).execute(function (sites) {\n        // See if the list id exists\n        var list = sites.results[0];\n        if (list === null || list === void 0 ? void 0 : list.id) {\n          // Resolve the request\n          resolve(list === null || list === void 0 ? void 0 : list.id);\n        } else {\n          // Reject the request\n          reject("List was not found.");\n        }\n      }, reject);\n    });\n  };\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // See if the site id exists\n    if (props.siteId) {\n      // See if the id was given\n      if (props.listId) {\n        // Resolve the request\n        resolve((0, exports.sites)({\n          siteId: props.siteId,\n          webId: props.webId\n        }).lists(props.listId));\n      } else {\n        // Find the list\n        findList(props.siteId, props.webId, props.listName).then(function (listId) {\n          // Resolve the request\n          resolve((0, exports.sites)({\n            siteId: props.siteId,\n            webId: props.webId\n          }).lists(listId));\n        }, reject);\n      }\n    } else {\n      // Get the ids\n      exports.sites.getIdByUrl(props.siteUrl).then(function (info) {\n        // See if the id was given\n        if (props.listId) {\n          // Resolve the request\n          resolve((0, exports.sites)({\n            siteId: info.siteId,\n            webId: info.webId\n          }).lists(props.listId));\n        } else {\n          // Find the list\n          findList(info.siteId, info.webId, props.listName).then(function (listId) {\n            // Resolve the request\n            resolve((0, exports.sites)({\n              siteId: info.siteId,\n              webId: info.webId\n            }).lists(listId));\n          }, reject);\n        }\n      }, reject);\n    }\n  });\n};\n/** Gets the site and web id from a url */\nexports.sites.getIdByUrl = function (url) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the context information\n    contextInfo_1.ContextInfo.getWeb(url).execute(function (context) {\n      // Get the site id\n      (0, site_1.Site)(context.GetContextWebInformation.SiteFullUrl).query({\n        Select: ["Id"]\n      }).execute(function (site) {\n        // Get the web id\n        (0, web_1.Web)(context.GetContextWebInformation.WebFullUrl).query({\n          Select: ["Id"]\n        }).execute(function (web) {\n          // Resolve the request\n          resolve({\n            digestValue: context.GetContextWebInformation.FormDigestValue,\n            siteId: site.Id,\n            siteUrl: context.GetContextWebInformation.SiteFullUrl,\n            webId: web.Id,\n            webUrl: context.GetContextWebInformation.WebFullUrl\n          });\n        });\n      }, reject);\n    });\n  });\n};\n/** Returns the root site of the current site. */\nexports.sites.getRoot = function () {\n  return (0, exports.sites)({\n    siteId: contextInfo_1.ContextInfo.siteId\n  });\n};\n/** Returns a site by url */\nexports.sites.getSite = function (url) {\n  // Return a promise\n  return new Promise(function (resolve, reject) {\n    // Get the site info\n    exports.sites.getIdByUrl(url).then(function (info) {\n      // Resolve the request\n      resolve((0, exports.sites)({\n        siteId: info.siteId,\n        webId: info.webId\n      }));\n    }, reject);\n  });\n};\n\n//# sourceURL=webpack://gd-sprest/./build/v2/sites.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/es/promise/index.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\n__webpack_require__(/*! ../../modules/es.aggregate-error */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.js");\n__webpack_require__(/*! ../../modules/es.array.iterator */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.array.iterator.js");\n__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.object.to-string.js");\n__webpack_require__(/*! ../../modules/es.promise */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.js");\n__webpack_require__(/*! ../../modules/es.promise.all-settled */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all-settled.js");\n__webpack_require__(/*! ../../modules/es.promise.any */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.any.js");\n__webpack_require__(/*! ../../modules/es.promise.try */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.try.js");\n__webpack_require__(/*! ../../modules/es.promise.with-resolvers */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.with-resolvers.js");\n__webpack_require__(/*! ../../modules/es.promise.finally */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.finally.js");\n__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.string.iterator.js");\nvar path = __webpack_require__(/*! ../../internals/path */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/path.js");\n\nmodule.exports = path.Promise;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/es/promise/index.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js");\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + \' is not a function\');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-constructor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-constructor.js");\nvar tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js");\n\nvar $TypeError = TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + \' is not a constructor\');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-possible-prototype.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isPossiblePrototype = __webpack_require__(/*! ../internals/is-possible-prototype */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-possible-prototype.js");\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError("Can\'t set " + $String(argument) + \' as a prototype\');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-possible-prototype.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/add-to-unscopables.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js");\nvar defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js").f);\n\nvar UNSCOPABLES = wellKnownSymbol(\'unscopables\');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] === undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/add-to-unscopables.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-instance.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js\");\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw new $TypeError('Incorrect invocation');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-instance.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar isObject = __webpack_require__(/*! ../internals/is-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js\");\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-includes.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js");\nvar toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-absolute-index.js");\nvar lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/length-of-array-like.js");\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-includes.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-slice.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\n\nmodule.exports = uncurryThis([].slice);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-slice.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/check-correctness-of-iteration.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js\");\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  try {\n    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  } catch (error) { return false; } // workaround of old WebKit + `eval` bug\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/check-correctness-of-iteration.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string-tag-support.js\");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js\");\nvar classofRaw = __webpack_require__(/*! ../internals/classof-raw */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js\");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js\");\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/copy-constructor-properties.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/own-keys.js");\nvar getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-descriptor.js");\nvar definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js");\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/copy-constructor-properties.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/correct-prototype-getter.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/correct-prototype-getter.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-iter-result-object.js":function(module){eval("\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-iter-result-object.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\nvar definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js");\nvar createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js");\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js":function(module){eval("\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in-accessor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/make-built-in.js");\nvar defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js");\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in-accessor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js");\nvar makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/make-built-in.js");\nvar defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-global-property.js");\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-global-property.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    globalThis[key] = value;\n  } return value;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-global-property.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\n\n// Detect IE8\'s incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/document-create-element.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\n\nvar document = globalThis.document;\n// typeof document.createElement is \'object\' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/document-create-element.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/enum-bug-keys.js":function(module){eval("\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/enum-bug-keys.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios-pebble.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar userAgent = __webpack_require__(/*! ../internals/environment-user-agent */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js\");\n\nmodule.exports = /ipad|iphone|ipod/i.test(userAgent) && typeof Pebble != 'undefined';\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios-pebble.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar userAgent = __webpack_require__(/*! ../internals/environment-user-agent */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js");\n\n// eslint-disable-next-line redos/no-vulnerable -- safe\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-node.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar ENVIRONMENT = __webpack_require__(/*! ../internals/environment */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment.js\");\n\nmodule.exports = ENVIRONMENT === 'NODE';\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-node.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-webos-webkit.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar userAgent = __webpack_require__(/*! ../internals/environment-user-agent */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js");\n\nmodule.exports = /web0s(?!.*chrome)/i.test(userAgent);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-webos-webkit.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js\");\n\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\n\nmodule.exports = userAgent ? String(userAgent) : '';\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-v8-version.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar userAgent = __webpack_require__(/*! ../internals/environment-user-agent */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js");\n\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split(\'.\');\n  // in old Chrome, versions of V8 isn\'t V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-v8-version.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\n/* global Bun, Deno -- detection */\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js\");\nvar userAgent = __webpack_require__(/*! ../internals/environment-user-agent */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-user-agent.js\");\nvar classof = __webpack_require__(/*! ../internals/classof-raw */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js\");\n\nvar userAgentStartsWith = function (string) {\n  return userAgent.slice(0, string.length) === string;\n};\n\nmodule.exports = (function () {\n  if (userAgentStartsWith('Bun/')) return 'BUN';\n  if (userAgentStartsWith('Cloudflare-Workers')) return 'CLOUDFLARE';\n  if (userAgentStartsWith('Deno/')) return 'DENO';\n  if (userAgentStartsWith('Node.js/')) return 'NODE';\n  if (globalThis.Bun && typeof Bun.version == 'string') return 'BUN';\n  if (globalThis.Deno && typeof Deno.version == 'object') return 'DENO';\n  if (classof(globalThis.process) === 'process') return 'NODE';\n  if (globalThis.window && globalThis.document) return 'BROWSER';\n  return 'REST';\n})();\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-clear.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable, sonarjs/slow-regex -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-clear.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-install.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js");\nvar clearErrorStack = __webpack_require__(/*! ../internals/error-stack-clear */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-clear.js");\nvar ERROR_STACK_INSTALLABLE = __webpack_require__(/*! ../internals/error-stack-installable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-installable.js");\n\n// non-standard V8\nvar captureStackTrace = Error.captureStackTrace;\n\nmodule.exports = function (error, C, stack, dropEntries) {\n  if (ERROR_STACK_INSTALLABLE) {\n    if (captureStackTrace) captureStackTrace(error, C);\n    else createNonEnumerableProperty(error, \'stack\', clearErrorStack(stack, dropEntries));\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-install.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-installable.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\nvar createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js\");\n\nmodule.exports = !fails(function () {\n  var error = new Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));\n  return error.stack !== 7;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-installable.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\nvar defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-global-property.js");\nvar copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/copy-constructor-properties.js");\nvar isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-forced.js");\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = globalThis;\n  } else if (STATIC) {\n    target = globalThis[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = globalThis[TARGET] && globalThis[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? \'.\' : \'#\') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, \'sham\', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js":function(module){eval("\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-apply.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js\");\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-apply.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-context.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-clause.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js");\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-context.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js");\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-name.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js\");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js\");\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-name.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-accessor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-accessor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-clause.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js");\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === \'Function\') return uncurryThis(fn);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-clause.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-native.js");\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(globalThis[namespace]) : globalThis[namespace] && globalThis[namespace][method];\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator-method.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js");\nvar getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-method.js");\nvar isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js");\nvar Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\n\nvar ITERATOR = wellKnownSymbol(\'iterator\');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, \'@@iterator\')\n    || Iterators[classof(it)];\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator-method.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\nvar tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js");\nvar getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator-method.js");\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw new $TypeError(tryToString(argument) + \' is not iterable\');\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-method.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js");\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-method.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\nvar toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-object.js");\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/hidden-keys.js":function(module){eval("\nmodule.exports = {};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/hidden-keys.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/host-report-errors.js":function(module){eval("\nmodule.exports = function (a, b) {\n  try {\n    // eslint-disable-next-line no-console -- safe\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  } catch (error) { /* empty */ }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/host-report-errors.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/html.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js\");\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/html.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ie8-dom-define.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\nvar createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/document-create-element.js");\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement(\'div\'), \'a\', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ie8-dom-define.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/indexed-object.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\nvar classof = __webpack_require__(/*! ../internals/classof-raw */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof-raw.js\");\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/indexed-object.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/inspect-source.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-store.js");\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can\'t use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/inspect-source.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/install-error-cause.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar isObject = __webpack_require__(/*! ../internals/is-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js\");\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js\");\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nmodule.exports = function (O, options) {\n  if (isObject(options) && 'cause' in options) {\n    createNonEnumerableProperty(O, 'cause', options.cause);\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/install-error-cause.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/weak-map-basic-detection.js");\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-store.js");\nvar sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-key.js");\nvar hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/hidden-keys.js");\n\nvar OBJECT_ALREADY_INITIALIZED = \'Object already initialized\';\nvar TypeError = globalThis.TypeError;\nvar WeakMap = globalThis.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError(\'Incompatible receiver, \' + TYPE + \' required\');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey(\'state\');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-array-iterator-method.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js");\n\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-array-iterator-method.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js":function(module){eval("\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-constructor.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js\");\nvar classof = __webpack_require__(/*! ../internals/classof */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js\");\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js\");\nvar inspectSource = __webpack_require__(/*! ../internals/inspect-source */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/inspect-source.js\");\n\nvar noop = function () { /* empty */ };\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.test(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, [], argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-constructor.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-forced.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js\");\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-forced.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js":function(module){eval("\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js\");\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-possible-prototype.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-possible-prototype.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js":function(module){eval("\nmodule.exports = false;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-symbol.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js");\nvar USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/use-symbol-as-uid.js");\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == \'symbol\';\n} : function (it) {\n  var $Symbol = getBuiltIn(\'Symbol\');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-symbol.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-context.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\nvar tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js");\nvar isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-array-iterator-method.js");\nvar lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/length-of-array-like.js");\nvar isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js");\nvar getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator.js");\nvar getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-iterator-method.js");\nvar iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-close.js");\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, \'normal\', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw new $TypeError(tryToString(iterable) + \' is not iterable\');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, \'throw\', error);\n    }\n    if (typeof result == \'object\' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-close.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar call = __webpack_require__(/*! ../internals/function-call */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js\");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js\");\nvar getMethod = __webpack_require__(/*! ../internals/get-method */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-method.js\");\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-close.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-create-constructor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators-core.js").IteratorPrototype);\nvar create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js");\nvar createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js");\nvar setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-to-string-tag.js");\nvar Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js");\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + \' Iterator\';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-create-constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-define.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-name.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-create-constructor.js");\nvar getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-prototype-of.js");\nvar setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-set-prototype-of.js");\nvar setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-to-string-tag.js");\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js");\nvar IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators-core.js");\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar KEYS = \'keys\';\nvar VALUES = \'values\';\nvar ENTRIES = \'entries\';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    }\n\n    return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + \' Iterator\';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype[\'@@iterator\']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME === \'Array\' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, \'name\', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-define.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators-core.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js");\nvar getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-prototype-of.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\n\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!(\'next\' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators-core.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js":function(module){eval("\nmodule.exports = {};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/length-of-array-like.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-length.js");\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/length-of-array-like.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/make-built-in.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js\");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js\");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js\");\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js\");\nvar CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-name.js\").CONFIGURABLE);\nvar inspectSource = __webpack_require__(/*! ../internals/inspect-source */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/inspect-source.js\");\nvar InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js\");\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\).*$/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/make-built-in.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/math-trunc.js":function(module){eval("\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/math-trunc.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/microtask.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar safeGetBuiltIn = __webpack_require__(/*! ../internals/safe-get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/safe-get-built-in.js");\nvar bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-context.js");\nvar macrotask = (__webpack_require__(/*! ../internals/task */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/task.js").set);\nvar Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/queue.js");\nvar IS_IOS = __webpack_require__(/*! ../internals/environment-is-ios */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios.js");\nvar IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/environment-is-ios-pebble */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios-pebble.js");\nvar IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/environment-is-webos-webkit */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-webos-webkit.js");\nvar IS_NODE = __webpack_require__(/*! ../internals/environment-is-node */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-node.js");\n\nvar MutationObserver = globalThis.MutationObserver || globalThis.WebKitMutationObserver;\nvar document = globalThis.document;\nvar process = globalThis.process;\nvar Promise = globalThis.Promise;\nvar microtask = safeGetBuiltIn(\'queueMicrotask\');\nvar notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!microtask) {\n  var queue = new Queue();\n\n  var flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (fn = queue.get()) try {\n      fn();\n    } catch (error) {\n      if (queue.head) notify();\n      throw error;\n    }\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode(\'\');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise.constructor = Promise;\n    then = bind(promise.then, promise);\n    notify = function () {\n      then(flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessage\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    // `webpack` dev server bug on IE global methods - use bind(fn, global)\n    macrotask = bind(macrotask, globalThis);\n    notify = function () {\n      macrotask(flush);\n    };\n  }\n\n  microtask = function (fn) {\n    if (!queue.head) notify();\n    queue.add(fn);\n  };\n}\n\nmodule.exports = microtask;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/microtask.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js\");\n\nvar $TypeError = TypeError;\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw new $TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/normalize-string-argument.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar toString = __webpack_require__(/*! ../internals/to-string */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string.js\");\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/normalize-string-argument.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js\");\nvar definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-properties.js\");\nvar enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/enum-bug-keys.js\");\nvar hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/hidden-keys.js\");\nvar html = __webpack_require__(/*! ../internals/html */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/html.js\");\nvar documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/document-create-element.js\");\nvar sharedKey = __webpack_require__(/*! ../internals/shared-key */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-key.js\");\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-properties.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\nvar V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/v8-prototype-define-bug.js");\nvar definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js");\nvar objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys.js");\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-properties.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js":function(__unused_webpack_module,exports,__webpack_require__){eval("\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js\");\nvar IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ie8-dom-define.js\");\nvar V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/v8-prototype-define-bug.js\");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js\");\nvar toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-property-key.js\");\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-descriptor.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-property-is-enumerable.js");\nvar createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js");\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js");\nvar toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-property-key.js");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ie8-dom-define.js");\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-descriptor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-names.js":function(__unused_webpack_module,exports,__webpack_require__){eval("\nvar internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys-internal.js\");\nvar enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/enum-bug-keys.js\");\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-names.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-symbols.js":function(__unused_webpack_module,exports){eval("\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-symbols.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-prototype-of.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-object.js");\nvar sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-key.js");\nvar CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/correct-prototype-getter.js");\n\nvar IE_PROTO = sharedKey(\'IE_PROTO\');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-prototype-of.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys-internal.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js");\nvar indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-includes.js").indexOf);\nvar hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/hidden-keys.js");\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don\'t enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys-internal.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys-internal.js");\nvar enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/enum-bug-keys.js");\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-keys.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-property-is-enumerable.js":function(__unused_webpack_module,exports){eval("\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-property-is-enumerable.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-set-prototype-of.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = __webpack_require__(/*! ../internals/function-uncurry-this-accessor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this-accessor.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js");\nvar aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-possible-prototype.js");\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can\'t work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || (\'__proto__\' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, \'__proto__\', \'set\');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-set-prototype-of.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-to-string.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string-tag-support.js\");\nvar classof = __webpack_require__(/*! ../internals/classof */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js\");\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-to-string.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ordinary-to-primitive.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError("Can\'t convert object to primitive value");\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ordinary-to-primitive.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/own-keys.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js");\nvar getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-names.js");\nvar getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-own-property-symbols.js");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn(\'Reflect\', \'ownKeys\') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/own-keys.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/path.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\n\nmodule.exports = globalThis;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/path.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js":function(module){eval("\nmodule.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-forced.js");\nvar inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/inspect-source.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar ENVIRONMENT = __webpack_require__(/*! ../internals/environment */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar V8_VERSION = __webpack_require__(/*! ../internals/environment-v8-version */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-v8-version.js");\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\nvar SPECIES = wellKnownSymbol(\'species\');\nvar SUBCLASSING = false;\nvar NATIVE_PROMISE_REJECTION_EVENT = isCallable(globalThis.PromiseRejectionEvent);\n\nvar FORCED_PROMISE_CONSTRUCTOR = isForced(\'Promise\', function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can\'t detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution\n  if (IS_PURE && !(NativePromisePrototype[\'catch\'] && NativePromisePrototype[\'finally\'])) return true;\n  // We can\'t use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {\n    // Detect correctness of subclassing with @@species support\n    var promise = new NativePromiseConstructor(function (resolve) { resolve(1); });\n    var FakePromise = function (exec) {\n      exec(function () { /* empty */ }, function () { /* empty */ });\n    };\n    var constructor = promise.constructor = {};\n    constructor[SPECIES] = FakePromise;\n    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n    if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  } return !GLOBAL_CORE_JS_PROMISE && (ENVIRONMENT === \'BROWSER\' || ENVIRONMENT === \'DENO\') && !NATIVE_PROMISE_REJECTION_EVENT;\n});\n\nmodule.exports = {\n  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,\n  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,\n  SUBCLASSING: SUBCLASSING\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\n\nmodule.exports = globalThis.Promise;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-resolve.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-resolve.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/check-correctness-of-iteration.js");\nvar FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);\n\nmodule.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {\n  NativePromiseConstructor.all(iterable).then(undefined, function () { /* empty */ });\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/queue.js":function(module){eval("\nvar Queue = function () {\n  this.head = null;\n  this.tail = null;\n};\n\nQueue.prototype = {\n  add: function (item) {\n    var entry = { item: item, next: null };\n    var tail = this.tail;\n    if (tail) tail.next = entry;\n    else this.head = entry;\n    this.tail = entry;\n  },\n  get: function () {\n    var entry = this.head;\n    if (entry) {\n      var next = this.head = entry.next;\n      if (next === null) this.tail = null;\n      return entry.item;\n    }\n  }\n};\n\nmodule.exports = Queue;\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/queue.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js");\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError("Can\'t call method on " + it);\n  return it;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/safe-get-built-in.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Avoid NodeJS experimental warning\nmodule.exports = function (name) {\n  if (!DESCRIPTORS) return globalThis[name];\n  var descriptor = getOwnPropertyDescriptor(globalThis, name);\n  return descriptor && descriptor.value;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/safe-get-built-in.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-species.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in-accessor.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\n\nvar SPECIES = wellKnownSymbol(\'species\');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineBuiltInAccessor(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-species.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-to-string-tag.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js").f);\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\n\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\n\nmodule.exports = function (target, TAG, STATIC) {\n  if (target && !STATIC) target = target.prototype;\n  if (target && !hasOwn(target, TO_STRING_TAG)) {\n    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-to-string-tag.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-key.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared.js");\nvar uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/uid.js");\n\nvar keys = shared(\'keys\');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-key.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-store.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js\");\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js\");\nvar defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-global-property.js\");\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.39.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.39.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-store.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared-store.js");\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/species-constructor.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-object.js");\nvar aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-constructor.js");\nvar isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-null-or-undefined.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\n\nvar SPECIES = wellKnownSymbol(\'species\');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/species-constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/string-multibyte.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\nvar toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-integer-or-infinity.js\");\nvar toString = __webpack_require__(/*! ../internals/to-string */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string.js\");\nvar requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js\");\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/string-multibyte.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/symbol-constructor-detection.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = __webpack_require__(/*! ../internals/environment-v8-version */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-v8-version.js");\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\n\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol(\'symbol detection\');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+\'\'` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/symbol-constructor-detection.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/task.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-apply.js");\nvar bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-bind-context.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\nvar html = __webpack_require__(/*! ../internals/html */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/html.js");\nvar arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-slice.js");\nvar createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/document-create-element.js");\nvar validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/validate-arguments-length.js");\nvar IS_IOS = __webpack_require__(/*! ../internals/environment-is-ios */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-ios.js");\nvar IS_NODE = __webpack_require__(/*! ../internals/environment-is-node */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-node.js");\n\nvar set = globalThis.setImmediate;\nvar clear = globalThis.clearImmediate;\nvar process = globalThis.process;\nvar Dispatch = globalThis.Dispatch;\nvar Function = globalThis.Function;\nvar MessageChannel = globalThis.MessageChannel;\nvar String = globalThis.String;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = \'onreadystatechange\';\nvar $location, defer, channel, port;\n\nfails(function () {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  $location = globalThis.location;\n});\n\nvar run = function (id) {\n  if (hasOwn(queue, id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar eventListener = function (event) {\n  run(event.data);\n};\n\nvar globalPostMessageDefer = function (id) {\n  // old engines have not location.origin\n  globalThis.postMessage(String(id), $location.protocol + \'//\' + $location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var args = arraySlice(arguments, 1);\n    queue[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = eventListener;\n    defer = bind(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it\'s sync & typeof its postMessage is \'object\'\n  } else if (\n    globalThis.addEventListener &&\n    isCallable(globalThis.postMessage) &&\n    !globalThis.importScripts &&\n    $location && $location.protocol !== \'file:\' &&\n    !fails(globalPostMessageDefer)\n  ) {\n    defer = globalPostMessageDefer;\n    globalThis.addEventListener(\'message\', eventListener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement(\'script\')) {\n    defer = function (id) {\n      html.appendChild(createElement(\'script\'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/task.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-absolute-index.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-integer-or-infinity.js");\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-absolute-index.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/indexed-object.js");\nvar requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js");\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-integer-or-infinity.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/math-trunc.js");\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-integer-or-infinity.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-length.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-integer-or-infinity.js");\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-length.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-object.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/require-object-coercible.js");\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-object.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-primitive.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-symbol.js");\nvar getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-method.js");\nvar ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/ordinary-to-primitive.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol(\'toPrimitive\');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = \'default\';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError("Can\'t convert object to primitive value");\n  }\n  if (pref === undefined) pref = \'number\';\n  return ordinaryToPrimitive(input, pref);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-primitive.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-property-key.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-primitive.js\");\nvar isSymbol = __webpack_require__(/*! ../internals/is-symbol */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-symbol.js\");\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-property-key.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string-tag-support.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js\");\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string-tag-support.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar classof = __webpack_require__(/*! ../internals/classof */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/classof.js\");\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js":function(module){eval("\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/try-to-string.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/uid.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-uncurry-this.js\");\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/uid.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/use-symbol-as-uid.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/symbol-constructor-detection.js\");\n\nmodule.exports = NATIVE_SYMBOL &&\n  !Symbol.sham &&\n  typeof Symbol.iterator == 'symbol';\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/use-symbol-as-uid.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/v8-prototype-define-bug.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js");\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, \'prototype\', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/v8-prototype-define-bug.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/validate-arguments-length.js":function(module){eval("\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/validate-arguments-length.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/weak-map-basic-detection.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\n\nvar WeakMap = globalThis.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/weak-map-basic-detection.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js":function(module,__unused_webpack_exports,__webpack_require__){eval('\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/shared.js");\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/has-own-property.js");\nvar uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/uid.js");\nvar NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/symbol-constructor-detection.js");\nvar USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/use-symbol-as-uid.js");\n\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared(\'wks\');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol[\'for\'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol(\'Symbol.\' + name);\n  } return WellKnownSymbolsStore[name];\n};\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.constructor.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-is-prototype-of.js");\nvar getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-get-prototype-of.js");\nvar setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-set-prototype-of.js");\nvar copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/copy-constructor-properties.js");\nvar create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-create.js");\nvar createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-non-enumerable-property.js");\nvar createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-property-descriptor.js");\nvar installErrorCause = __webpack_require__(/*! ../internals/install-error-cause */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/install-error-cause.js");\nvar installErrorStack = __webpack_require__(/*! ../internals/error-stack-install */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/error-stack-install.js");\nvar iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js");\nvar normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/normalize-string-argument.js");\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/well-known-symbol.js");\n\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar $Error = Error;\nvar push = [].push;\n\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new $Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, \'Error\');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, \'message\', normalizeStringArgument(message));\n  installErrorStack(that, $AggregateError, that.stack, 1);\n  if (arguments.length > 2) installErrorCause(that, arguments[2]);\n  var errorsArray = [];\n  iterate(errors, push, { that: errorsArray });\n  createNonEnumerableProperty(that, \'errors\', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, $Error);\nelse copyConstructorProperties($AggregateError, $Error, { name: true });\n\nvar AggregateErrorPrototype = $AggregateError.prototype = create($Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, \'\'),\n  name: createPropertyDescriptor(1, \'AggregateError\')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({ global: true, constructor: true, arity: 2 }, {\n  AggregateError: $AggregateError\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\n// TODO: Remove this module from `core-js@4` since it\'s replaced to module below\n__webpack_require__(/*! ../modules/es.aggregate-error.constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.constructor.js");\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.aggregate-error.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.array.iterator.js":function(module,__unused_webpack_exports,__webpack_require__){eval("\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-indexed-object.js\");\nvar addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/add-to-unscopables.js\");\nvar Iterators = __webpack_require__(/*! ../internals/iterators */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterators.js\");\nvar InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js\");\nvar defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-define-property.js\").f);\nvar defineIterator = __webpack_require__(/*! ../internals/iterator-define */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-define.js\");\nvar createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-iter-result-object.js\");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js\");\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/descriptors.js\");\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = null;\n    return createIterResultObject(undefined, true);\n  }\n  switch (state.kind) {\n    case 'keys': return createIterResultObject(index, false);\n    case 'values': return createIterResultObject(target[index], false);\n  } return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.array.iterator.js?")},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.object.to-string.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string-tag-support.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\nvar toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-to-string.js");\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  defineBuiltIn(Object.prototype, \'toString\', toString, { unsafe: true });\n}\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.object.to-string.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all-settled.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\nvar iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js");\nvar PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js");\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: \'Promise\', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: \'fulfilled\', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: \'rejected\', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all-settled.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\nvar iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js");\nvar PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js");\n\n// `Promise.all` method\n// https://tc39.es/ecma262/#sec-promise.all\n$({ target: \'Promise\', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.any.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\nvar iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js");\nvar PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js");\n\nvar PROMISE_ANY_ERROR = \'No one promise resolved\';\n\n// `Promise.any` method\n// https://tc39.es/ecma262/#sec-promise.any\n$({ target: \'Promise\', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  any: function any(iterable) {\n    var C = this;\n    var AggregateError = getBuiltIn(\'AggregateError\');\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.any.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.catch.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$({ target: \'Promise\', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {\n  \'catch\': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn(\'Promise\').prototype[\'catch\'];\n  if (NativePromisePrototype[\'catch\'] !== method) {\n    defineBuiltIn(NativePromisePrototype, \'catch\', method, { unsafe: true });\n  }\n}\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.catch.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.constructor.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar IS_NODE = __webpack_require__(/*! ../internals/environment-is-node */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/environment-is-node.js");\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\nvar setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/object-set-prototype-of.js");\nvar setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-to-string-tag.js");\nvar setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/set-species.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-object.js");\nvar anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/an-instance.js");\nvar speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/species-constructor.js");\nvar task = (__webpack_require__(/*! ../internals/task */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/task.js").set);\nvar microtask = __webpack_require__(/*! ../internals/microtask */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/microtask.js");\nvar hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/host-report-errors.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\nvar Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/queue.js");\nvar InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js");\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar PromiseConstructorDetection = __webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\n\nvar PROMISE = \'Promise\';\nvar FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;\nvar NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;\nvar NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar setInternalState = InternalStateModule.set;\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\nvar PromiseConstructor = NativePromiseConstructor;\nvar PromisePrototype = NativePromisePrototype;\nvar TypeError = globalThis.TypeError;\nvar document = globalThis.document;\nvar process = globalThis.process;\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\n\nvar DISPATCH_EVENT = !!(document && document.createEvent && globalThis.dispatchEvent);\nvar UNHANDLED_REJECTION = \'unhandledrejection\';\nvar REJECTION_HANDLED = \'rejectionhandled\';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\n\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && isCallable(then = it.then) ? then : false;\n};\n\nvar callReaction = function (reaction, state) {\n  var value = state.value;\n  var ok = state.state === FULFILLED;\n  var handler = ok ? reaction.ok : reaction.fail;\n  var resolve = reaction.resolve;\n  var reject = reaction.reject;\n  var domain = reaction.domain;\n  var result, then, exited;\n  try {\n    if (handler) {\n      if (!ok) {\n        if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n        state.rejection = HANDLED;\n      }\n      if (handler === true) result = value;\n      else {\n        if (domain) domain.enter();\n        result = handler(value); // can throw\n        if (domain) {\n          domain.exit();\n          exited = true;\n        }\n      }\n      if (result === reaction.promise) {\n        reject(new TypeError(\'Promise-chain cycle\'));\n      } else if (then = isThenable(result)) {\n        call(then, result, resolve, reject);\n      } else resolve(result);\n    } else reject(value);\n  } catch (error) {\n    if (domain && !exited) domain.exit();\n    reject(error);\n  }\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  microtask(function () {\n    var reactions = state.reactions;\n    var reaction;\n    while (reaction = reactions.get()) {\n      callReaction(reaction, state);\n    }\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent(\'Event\');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    globalThis.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = globalThis[\'on\' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors(\'Unhandled promise rejection\', reason);\n};\n\nvar onUnhandled = function (state) {\n  call(task, globalThis, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit(\'unhandledRejection\', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  call(task, globalThis, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit(\'rejectionHandled\', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw new TypeError("Promise can\'t be resolved itself");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          call(then, value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED_PROMISE_CONSTRUCTOR) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromisePrototype);\n    aCallable(executor);\n    call(Internal, this);\n    var state = getInternalPromiseState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n\n  PromisePrototype = PromiseConstructor.prototype;\n\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: new Queue(),\n      rejection: false,\n      state: PENDING,\n      value: null\n    });\n  };\n\n  // `Promise.prototype.then` method\n  // https://tc39.es/ecma262/#sec-promise.prototype.then\n  Internal.prototype = defineBuiltIn(PromisePrototype, \'then\', function then(onFulfilled, onRejected) {\n    var state = getInternalPromiseState(this);\n    var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n    state.parent = true;\n    reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;\n    reaction.fail = isCallable(onRejected) && onRejected;\n    reaction.domain = IS_NODE ? process.domain : undefined;\n    if (state.state === PENDING) state.reactions.add(reaction);\n    else microtask(function () {\n      callReaction(reaction, state);\n    });\n    return reaction.promise;\n  });\n\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalPromiseState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {\n    nativeThen = NativePromisePrototype.then;\n\n    if (!NATIVE_PROMISE_SUBCLASSING) {\n      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs\n      defineBuiltIn(NativePromisePrototype, \'then\', function then(onFulfilled, onRejected) {\n        var that = this;\n        return new PromiseConstructor(function (resolve, reject) {\n          call(nativeThen, that, resolve, reject);\n        }).then(onFulfilled, onRejected);\n      // https://github.com/zloirock/core-js/issues/640\n      }, { unsafe: true });\n    }\n\n    // make `.constructor === Promise` work for native promise-based APIs\n    try {\n      delete NativePromisePrototype.constructor;\n    } catch (error) { /* empty */ }\n\n    // make `instanceof Promise` work for native promise-based APIs\n    if (setPrototypeOf) {\n      setPrototypeOf(NativePromisePrototype, PromisePrototype);\n    }\n  }\n}\n\n// `Promise` constructor\n// https://tc39.es/ecma262/#sec-promise-executor\n$({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.constructor.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.finally.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/fails.js");\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-callable.js");\nvar speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/species-constructor.js");\nvar promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-resolve.js");\nvar defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/define-built-in.js");\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype[\'finally\'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: \'Promise\', proto: true, real: true, forced: NON_GENERIC }, {\n  \'finally\': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn(\'Promise\'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn(\'Promise\').prototype[\'finally\'];\n  if (NativePromisePrototype[\'finally\'] !== method) {\n    defineBuiltIn(NativePromisePrototype, \'finally\', method, { unsafe: true });\n  }\n}\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.finally.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\n// TODO: Remove this module from `core-js@4` since it\'s split to modules listed below\n__webpack_require__(/*! ../modules/es.promise.constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.constructor.js");\n__webpack_require__(/*! ../modules/es.promise.all */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.all.js");\n__webpack_require__(/*! ../modules/es.promise.catch */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.catch.js");\n__webpack_require__(/*! ../modules/es.promise.race */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.race.js");\n__webpack_require__(/*! ../modules/es.promise.reject */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.reject.js");\n__webpack_require__(/*! ../modules/es.promise.resolve */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.resolve.js");\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.race.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-call.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\nvar iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterate.js");\nvar PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-statics-incorrect-iteration.js");\n\n// `Promise.race` method\n// https://tc39.es/ecma262/#sec-promise.race\n$({ target: \'Promise\', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      iterate(iterable, function (promise) {\n        call($promiseResolve, C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.race.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.reject.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);\n\n// `Promise.reject` method\n// https://tc39.es/ecma262/#sec-promise.reject\n$({ target: \'Promise\', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {\n  reject: function reject(r) {\n    var capability = newPromiseCapabilityModule.f(this);\n    var capabilityReject = capability.reject;\n    capabilityReject(r);\n    return capability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.reject.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.resolve.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/get-built-in.js");\nvar IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/is-pure.js");\nvar NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-native-constructor.js");\nvar FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);\nvar promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/promise-resolve.js");\n\nvar PromiseConstructorWrapper = getBuiltIn(\'Promise\');\nvar CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;\n\n// `Promise.resolve` method\n// https://tc39.es/ecma262/#sec-promise.resolve\n$({ target: \'Promise\', stat: true, forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR }, {\n  resolve: function resolve(x) {\n    return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.resolve.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.try.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar globalThis = __webpack_require__(/*! ../internals/global-this */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/global-this.js");\nvar apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/function-apply.js");\nvar slice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/array-slice.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\nvar aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/a-callable.js");\nvar perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/perform.js");\n\nvar Promise = globalThis.Promise;\n\nvar ACCEPT_ARGUMENTS = false;\n// Avoiding the use of polyfills of the previous iteration of this proposal\n// that does not accept arguments of the callback\nvar FORCED = !Promise || !Promise[\'try\'] || perform(function () {\n  Promise[\'try\'](function (argument) {\n    ACCEPT_ARGUMENTS = argument === 8;\n  }, 8);\n}).error || !ACCEPT_ARGUMENTS;\n\n// `Promise.try` method\n// https://tc39.es/ecma262/#sec-promise.try\n$({ target: \'Promise\', stat: true, forced: FORCED }, {\n  \'try\': function (callbackfn /* , ...args */) {\n    var args = arguments.length > 1 ? slice(arguments, 1) : [];\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    var result = perform(function () {\n      return apply(aCallable(callbackfn), undefined, args);\n    });\n    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);\n    return promiseCapability.promise;\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.try.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.with-resolvers.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar $ = __webpack_require__(/*! ../internals/export */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/export.js");\nvar newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/new-promise-capability.js");\n\n// `Promise.withResolvers` method\n// https://tc39.es/ecma262/#sec-promise.withResolvers\n$({ target: \'Promise\', stat: true }, {\n  withResolvers: function withResolvers() {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    return {\n      promise: promiseCapability.promise,\n      resolve: promiseCapability.resolve,\n      reject: promiseCapability.reject\n    };\n  }\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.promise.with-resolvers.js?')},"./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.string.iterator.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval('\nvar charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/string-multibyte.js").charAt);\nvar toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/to-string.js");\nvar InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/internal-state.js");\nvar defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/iterator-define.js");\nvar createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/internals/create-iter-result-object.js");\n\nvar STRING_ITERATOR = \'String Iterator\';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, \'String\', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n\n\n//# sourceURL=webpack://gd-sprest/./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/modules/es.string.iterator.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__("./node_modules/.pnpm/core-js@3.39.0/node_modules/core-js/es/promise/index.js");var __webpack_exports__=__webpack_require__("./build/index.js")})();